[["index.html", "The RJafroc Roc Book Preface 0.1 Rationale and Organization 0.2 TBA Acknowledgements 0.3 Temporary comments", " The RJafroc Roc Book Dev P. Chakraborty, PhD 2023-03-11 Preface TBA 0.1 Rationale and Organization Intended as an online update to my print book (Chakraborty 2017). All references in this book to RJafroc refer to the R package with that name (case sensitive) (Chakraborty and Zhai 2022). Since its publication in 2017 RJafroc, on which the R code examples in the print book depend, has evolved considerably causing many of the examples to “break” if one uses the most current version of RJafroc. The code will still run if one uses RJafroc 0.0.1 but this is inconvenient and misses out on many of the software improvements made since the print book appeared. This gives me the opportunity to update the print book. The online book has been divided into 3 books. The RJafrocQuickStartBook book. This book: RJafrocRocBook. The RJafrocFrocBook book. 0.2 TBA Acknowledgements Dr. Xuetong Zhai Dr. Peter Phillips Online Latex Editor at this site Dataset contributors 0.3 Temporary comments This is intended to allow successful builds when a needed file is not in the build. These are indicated by, for example: Chapter TempComment \\@ref(proper-roc-models) Fix these on final release. REFERENCES "],["sources-of-variability.html", "Chapter 1 Sources of AUC variability 1.1 TBA How much finished 1.2 Introduction 1.3 Three sources of variability 1.4 Dependence of AUC on the case sample 1.5 DeLong method 1.6 Bootstrap method 1.7 Jackknife method 1.8 Calibrated simulator 1.9 Discussion 1.10 Chapter References", " Chapter 1 Sources of AUC variability 1.1 TBA How much finished 60% 1.2 Introduction In previous chapters the area AUC under the ROC plot was introduced as the preferred way of summarizing performance in the ROC task, as compared to a pair of sensitivity and specificity values. It can be estimated either non-parametrically, as in TempComment Chapter \\@ref(empirical-auc), or parametrically, as in Chapter TempComment \\@ref(binormal-model), and even better ways of estimating it are described in TBA Chapter 18 and Chapter 20. Irrespective of how it is estimated AUC is a realization of a random variable, and as such, it is subject to sampling variability. Any measurement based on a finite number of samples from a parent population is subject to sampling variability. This is because no finite sample is unique: someone else conducting a similar study would, in general, obtain a different sample. [Case-sampling variability is estimated by the binormal model in the previous chapter. It is related to the sharpness of the peak of the likelihood function, TBA §6.4.4. The sharper that the peak, the smaller the case sampling variability. This chapter focuses on general sources of variability affecting AUC, regardless of how it is estimated, and other (i.e., not binormal model based) ways of estimating it.] Here is an outline of this chapter. The starting point is the identification of different sources of variability affecting AUC estimates. Considered next is dependence of AUC on the case-set index \\(\\{c\\}\\), \\(c = 1,2,...,C\\). Considered next is estimating case-sampling variability of the empirical estimate of AUC by an analytic method. This is followed by descriptions of two resampling-based methods, namely the bootstrap and the jackknife, both of which have wide applicability (i.e., they are not restricted to ROC analysis). The methods are demonstrated using R code and the implementation of a calibrated simulator is shown and used to demonstrate their validity, i.e., showing that the different methods of estimating variability agree. The dependence of AUC on reader expertise and modality is considered. An important source of variability, namely the radiologist’s choice of internal sensory thresholds, is described. A cautionary comment is made regarding indiscriminate usage of empirical AUC as a measure of performance. TBA Online Appendix 7.A describes coding of the bootstrap method; Online Appendix 7.B is the corresponding implementation of the jackknife method. Online Appendix 7.C describes implementation of the calibrated simulator for single-modality single-reader ROC datasets. Online Appendix 7.D describes the code that allows comparison of the different methods of estimating case-sampling variability. 1.3 Three sources of variability Statistics deals with variability. Understanding sources of variability affecting AUC is critical to an appreciation of ROC analysis. Three sources of variability are identified in (Swets and Pickett 1982): case sampling, between-reader and within-reader variability. Consider a single reader interpreting different case samples. Case-sampling variability arises from the finite number of cases comprising the dataset, compared to the potentially very large population of cases. [If one could sample every case there exists and have them interpreted by the same reader, there would be no case-sampling variability and the poor reader’s AUC values (from repeated interpretations of the entire population) would reflect only within reader variability, see #3 below.] Each case-set \\(\\{c\\}\\), consisting of \\(K_1\\) non-diseased and \\(K_2\\) diseased cases interpreted by the reader, yields an AUC value. The notation \\(\\{c\\}\\) means different case sets. Thus \\(\\{c\\}\\) = \\(\\{1\\}\\), \\(\\{2\\}\\), etc., denote different case sets, each consisting of \\(K_1\\) non-diseased and \\(K_2\\) diseased cases. There is much “data compression” in going from individual case ratings to AUC. For a single reader and given case-set \\(\\{c\\}\\), the ratings can be converted to an \\(A_{z\\{c\\}}\\) estimate, TBA Eqn. (6.49). The notation shows explicitly the dependence of the measure on the case-set \\(\\{c\\}\\). One can conceptualize the distribution of \\(A_{z\\{c\\}}\\)’s over different case-sets, each of the same size \\(K_1+K_2\\), as a normal distribution, i.e., \\[\\begin{equation} A_{z\\{c\\}}\\sim N(A_{z\\{\\bullet\\}},\\sigma_{\\text{cs+wr}}^2) \\tag{1.1} \\end{equation}\\] The dot notation \\(\\{\\bullet\\}\\) denotes an average over all case sets. Thus, \\(A_{z\\{\\bullet\\}}\\) is an estimate of the case-sampling mean of \\(A_z\\) for a single fixed reader and \\(\\sigma_{\\text{cs+wr}}^2\\) is the case sampling plus within-reader variance. The reason for adding the within-reader variance is explained in #3 below. The concept is that a specified reader interpreting different case-sets effectively samples different parts of the population of cases, resulting in variability in measured \\(A_z\\). Sometimes easier cases are sampled, and sometimes more difficult ones. This source of variability is expected to decrease with increasing case-set size, i.e., increasing \\(K_1+K_2\\), which is the reason for seeking large numbers of cases in clinical trials. Case-sampling and within-reader variability also decreases as the cases become more homogenous. An example of a more homogenous case sample would be cases originating from a small geographical region with, for example, limited ethnic variability. This is the reason for seeking multi-institutional clinical trials, because they tend to sample more of the population than patients seen at a single institution. Consider different readers interpreting a fixed case sample. Between-reader variability arises from the finite number of readers compared to the population of readers; the population of readers could be all board certified radiologists interpreting screening mammograms in the US. This time one envisages different readers interpreting a fixed case set \\(\\{1\\}\\). The different reader’s \\(A_{z;j}\\) values (\\(j\\) is the reader index, \\(j = 1, 2, ..., J\\), where \\(J\\) is the total number of readers in the dataset) are distributed: \\[\\begin{equation} A_{z;j}\\sim N(A_{z;\\bullet},\\sigma_{\\text{br+wr}}^2) \\tag{1.2} \\end{equation}\\] where \\(A_{z;\\bullet}\\) is an estimate of the reader population AUC mean (the bullet symbol replacing the reader index averages over a set of readers) for the fixed case-set \\(\\{1\\}\\) and \\(\\sigma_{\\text{br+wr}}^2\\) is the between-reader plus within-reader variance. The reason for adding the within-reader variance is explained in #3 below. The concept is that different groups of \\(J\\) readers interpret the same case set \\(\\{1\\}\\), thereby sampling different parts of the reader distribution, causing fluctuations in the measured \\(A_{z;j}\\) of the readers. Sometimes better readers are sampled and sometimes not so good ones are sampled. This time there is no “data compression” – each reader in the sample has an associated \\(A_{z;j}\\). However, variability of the average \\(A_{z;\\bullet}\\) over the \\(J\\) readers is expected to decrease with increasing \\(J\\). This is the reason for seeking large reader-samples. Consider a fixed reader, e.g., \\(j = 1\\), interpreting a fixed case-sample \\(\\{1\\}\\). Within-reader variability is due to variability of the ratings for the same case: the same reader interpreting the same case on different occasions will give different ratings to it, causing fluctuations in the measured AUC. This assumes that memory effects are minimized, for example, by sufficient time between successive interpretations as otherwise, if a case is shown twice in succession, the reader would give it the same rating each time. Since this is an intrinsic source of variability (analogous to the internal noise of a voltmeter) affecting each reader’s interpretations, it cannot be separated from case sampling variability, i.e., it cannot be “turned off”. The last sentence needs further explanation. A measurement of case-sampling variability requires a reader, and the reader comes with an intrinsic source of variability that gets added to the case-sampling variance, so what is measured is the sum of case sampling and within-reader variances, denoted \\(\\sigma_{\\text{cs+wr}}^2\\). Likewise, a measurement of between-reader variability requires a fixed case-set interpreted by different readers, each of whom comes with an intrinsic source of variability that gets added to the between-reader variance, yielding \\(\\sigma_{\\text{br+wr}}^2\\). To emphasize this point, an estimate of case-sampling variability always includes within reader variability. Likewise, an estimate of between-reader variability always includes within-reader variability. With this background, the purpose of this chapter is to delve into variability in some detail and in particular describe computational methods for estimating them. This chapter introduces the concept of resampling a dataset to estimate variability and the widely used bootstrap and jackknife methods of estimating variance are described. In a later chapter, these are extended to estimating covariance (essentially a scaled version of the correlation) between two random variables. The starting point is the simplest scenario: a single reader interpreting a case-set. 1.4 Dependence of AUC on the case sample Suppose a researcher conducts a ROC study with a single reader. The researcher starts by selecting a case-sample, i.e., a set of proven-truth non-diseased and diseased cases. Another researcher conducting another ROC study at the same institution selects a different case-sample, i.e., a different set of proven-truth non-diseased and diseased cases. The two case-sets contain the same numbers \\(K_1,K_2\\) of non-diseased and diseased cases, respectively. Even if the same radiologist interprets the two case-sets, and the reader is perfectly reproducible, the AUC values are expected to be different. Therefore, AUC must depend on a case sample index, which is denoted \\(\\{c\\}\\), where \\(c\\) is an integer: \\(c = 1, 2\\), as there are two case-sets in the study as envisaged. \\[\\begin{equation} AUC\\rightarrow AUC_{\\{c\\}} \\tag{1.3} \\end{equation}\\] Note that \\(\\{c\\}\\) is not an individual case index, rather it is a case-set index, i.e., different integer values of \\(c\\) denote different sets, or samples, or groups, or collections of cases. [The dependence of AUC on the case sample index is not explicitly shown in the literature.] What does the dependence of AUC on the \\(c\\) index mean? Different case samples differ in their difficulty levels. A difficult case set contains a greater fraction of difficult cases than is usual. A difficult diseased case is one where disease is difficult to detect. For example, the lesions could be partly obscured by overlapping normal structures in the patient anatomy; i.e., the lesion does not “stick out”. Alternatively, variants of normal anatomy could mimic a lesion, like a blood vessel viewed end on in a chest radiograph, causing the radiologist to miss the real lesion(s) and mistake these blood vessels for lesions. An easy diseased case is one where the disease is easy to detect. For example, the lesion is projected over smooth background tissue, because of which it “sticks out”, or is more conspicuous2. How does difficulty level affect non-diseased cases? A difficult non-diseased case is one where variants of normal anatomy mimic actual lesions and could cause the radiologist to falsely diagnose the patient as diseased. Conversely, an easy non-diseased case is like a textbook illustration of normal anatomy. Every structure in it is clearly visualized and accounted for by the radiologist’s knowledge of the patient’s non-diseased anatomy, and the radiologist is confident that any abnormal structure, if present, would be readily seen. The radiologist is unlikely to falsely diagnose the patient as diseased. Difficult cases tend to be rated in the middle of the rating scale, while easy ones tend to be rated at the ends of the rating scale. 1.4.1 Case sampling variability of AUC An easy case sample will cause AUC to increase over its average value; interpreting many case-sets and averaging the AUCs determines the average value. Conversely, a difficult case sample will cause AUC to decrease. Case sampling variability causes variability in the measured AUC. How does one estimate this essential source of variability? One method, totally impractical in the clinic but easy with simulations, is to have the same radiologist interpret repeated samples of case-sets from the population of cases (i.e., patients), termed population sampling, or more viscerally, as the “brute force” method. Even if one could get a radiologist to interpret different case-sets, it is even more impractical to actually acquire the different case samples of truth-proven cases. Patients do not come conveniently labeled as non-diseased or diseased. Rather, one needs to follow-up on the patients, perhaps do other imaging tests, in order to establish true disease status, or ground-truth. In screening mammography, a woman who continues to be diagnosed as non-diseased on successive yearly screening tests in the US, and has no other symptoms of breast disease, is probably disease-free. Likewise, a woman diagnosed as diseased and the diagnosis is confirmed by biopsy (i.e., the biopsy comes back showing a malignancy in the sampled tissues) is known to be diseased. However, not all patients who are diseased are actually diagnosed as diseased: a typical false negative fraction is 20% in screening mammography3. This is where follow-up imaging can help determine true disease status at the initial screen. A false negative mistake is unlikely to be repeated at the next screen. After a year, the tumor may have grown, and is more likely to be detected. Having detected the tumor in the most recent screen, radiologists can go back and retrospectively view it in the initial screen, at which it was missed during the “live” interpretation. If one knows where to look, the cancer is easier to see. The previous screen images would be an example of a difficult diseased case. In unfortunate instances, the patient may die from the previously undetected cancer, which would establish the truth status at the initial screen, too late to do the patient any good. The process of determining actual truth is often referred to as defining the “gold standard”, the ground truth: or simply truthing. One can appreciate from this discussion that acquiring independently proven cases, particularly diseased ones, is one of the most difficult aspects of conducting an observer performance study. There has to be a better way of estimating case-sampling variability. With a parametric model, the maximum likelihood procedure provides a means of estimating variability of each of the estimated parameters, which can be used to estimate the variability of \\(A_z\\), as in Chapter TempComment \\@ref(binormal-model). The estimate corresponds to case-sampling variability (including an inseparable within-reader variability). If unsure about this point, the reader should run some of the examples in Chapter TempComment \\@ref(binormal-model) with increased numbers of cases. The variability is seen to decrease. There are other options available for estimating case-sampling variance of AUC, and this chapter is not intended to be comprehensive. Three commonly used options are described: the DeLong et al method, the bootstrap and the jackknife resampling methods. 1.5 DeLong method If the figure-of-merit is the empirical AUC, then a procedure developed by DeLong et al4 (henceforth abbreviated to DeLong) is applicable that is based on earlier work by (Noether 1967) and (Bamber 1975). The author will not go into details of this procedure but limit to showing that it “works”. However, before one can show that it “works”, one needs to know the true value of the variance of empirical AUC. Even if data were simulated using the binormal model, one cannot use the binormal model based estimate of variance as it is an estimate, not to be confused with a true value. Estimates are realizations of random numbers and are themselves subject to variability, which decreases with increasing case-set size. Instead, a “brute-force” (i.e., simulated population sampling) approach is adopted to determine the true value of the variance of AUC. The simulator provides a means of repeatedly generating case-sets interpreted by the same radiologist, and by sampling it enough time, e.g., \\(C\\) = 10,000 times, each time calculating AUC, one determines the population mean and standard deviation. The standard deviation determined this way is compared to that yielded by the DeLong method to check if the latter actually works. bruteForceEstimation &lt;- function(seed, mu, sigma, K1, K2) { # brute force method to # find the population # meanempAuc and stdDevempAuc empAuc &lt;- array(dim = 10000) for (i in 1:length(empAuc)) { zk1 &lt;- rnorm(K1) zk2 &lt;- rnorm(K2, mean = mu, sd = sigma) empAuc[i] &lt;- Wilcoxon(zk1, zk2) } stdDevempAuc &lt;- sqrt(var(empAuc)) meanempAuc &lt;- mean(empAuc) return(list( meanempAuc = meanempAuc, stdDevempAuc = stdDevempAuc )) } seed &lt;- 1;set.seed(seed) mu &lt;- 1.5;sigma &lt;- 1.3;K1 &lt;- 50;K2 &lt;- 52 ret &lt;- bruteForceEstimation(seed, mu, sigma, K1, K2) # one more trial zk1 &lt;- rnorm(K1) zk2 &lt;- rnorm(K2, mean = mu, sd = sigma) empAuc &lt;- Wilcoxon(zk1, zk2) ret1 &lt;- DeLongVar(zk1,zk2) stdDevDeLong &lt;- sqrt(ret1) cat(&quot;brute force estimates:&quot;, &quot;\\nempAuc = &quot;, ret$meanempAuc, &quot;\\npopulation standard deviation =&quot;, ret$stdDevempAuc, &quot;\\n&quot;) #&gt; brute force estimates: #&gt; empAuc = 0.819178 #&gt; population standard deviation = 0.04176683 cat(&quot;single sample estimates = &quot;, &quot;\\nempirical AUC&quot;, empAuc, &quot;\\nstandard deviation DeLong = &quot;, stdDevDeLong, &quot;\\n&quot;) #&gt; single sample estimates = #&gt; empirical AUC 0.8626923 #&gt; standard deviation DeLong = 0.03804135 Two functions needed for this code to work are not shown: Wilcoxon() calculates the Wilcoxon statistic and the DeLongVar() implements the DeLong variance computation method (the DeLong method also calculates co-variances, but these are not needed in the current context). Line 1 sets the seed of the random number generator to 1. The seed variable is completely analogous to the case-set index c. Keeping seed fixed realizes the same random numbers each time the program is run. Different values of seed result in different, i.e., statistically independent, random samples. Line 2 initialize the values \\((\\mu, \\sigma, K_1, K_2)\\) needed by the data simulator: the normal distributions are separated by \\(\\mu = 1.5\\), the standard deviation of the diseased distribution is \\(\\sigma = 1.3\\), and there are \\(K_1 = 50\\) non-diseased and \\(K_2 = 52\\) diseased cases. Line 3 calls bruteForceEstimation, the “brute force” method for estimating mean and standard deviation of the population distribution of AUC, returned by this function, which are the “correct” value to which the DeLong standard deviation estimate will be compared. Lines 4-9 generates a fresh ROC dataset to which the DeLong method is applied. Two runs of this code were made, one with the smaller sample size, and the other with 10 times the sample size (the second run takes much longer). A third run was made with the larger sample size but with a different seed value. The results follow: seed &lt;- 2;set.seed(seed) mu &lt;- 1.5;sigma &lt;- 1.3;K1 &lt;- 500;K2 &lt;- 520 ret &lt;- bruteForceEstimation(seed, mu, sigma, K1, K2) # one more trial zk1 &lt;- rnorm(K1) zk2 &lt;- rnorm(K2, mean = mu, sd = sigma) empAuc &lt;- Wilcoxon(zk1, zk2) ret1 &lt;- DeLongVar(zk1,zk2) stdDevDeLong &lt;- sqrt(ret1) cat(&quot;brute force estimates:&quot;, &quot;\\nempAuc = &quot;, ret$meanempAuc, &quot;\\npopulation standard deviation =&quot;, ret$stdDevempAuc, &quot;\\n&quot;) #&gt; brute force estimates: #&gt; empAuc = 0.8194988 #&gt; population standard deviation = 0.01300203 cat(&quot;single sample estimates = &quot;, &quot;\\nempirical AUC&quot;, empAuc, &quot;\\nstandard deviation DeLong = &quot;, stdDevDeLong, &quot;\\n&quot;) #&gt; single sample estimates = #&gt; empirical AUC 0.8047269 #&gt; standard deviation DeLong = 0.01356696 An important observation is that as sample-size increases, case-sampling variability decreases: 0.0417 for the smaller sample size vs. 0.01309 for the larger sample size, and the dependence is as the inverse square root of the numbers of cases, as expected from the central limit theorem. With the smaller sample size (K1/K2 = 50/52; the back-slash notation, not to be confused with division, is a convenient way of summarizing the case-sample size) the estimated standard deviation (0.038) is within 10% of that estimated by population sampling (0.042). With the larger sample size, (K1/K2 = 500/520) the two are practically identical (0.01300203 vs. 0.01356696 – the latter value is for seed = 2). Notice also that the one sample empirical AUC for the smaller case-size is 0.863, which is less than two standard deviations from the population mean 0.819. The “two standard deviations” comes from rounding up 1.96: as in Eqn. TempComment \\@ref(eq:binary-task-model-def-z-alpha2), where \\(z_{\\alpha/2}\\) was defined as the upper \\(1-\\alpha/2\\) quantile of the unit normal distribution and \\(z_{0.025}=1.96\\). To reiterate, with clinical data the DeLong procedure estimates case sampling plus within reader variability. With simulated data as in this example, there is no within-reader variability as the simulator yields identical values for fixed seed. This demonstration should convince the reader that one does have recourse other than the “brute force” method, at least when the figure of merit is the empirical area under the ROC. That should come as a relief, as population sampling is impractical in the clinical context. It should also impress the reader, as the DeLong method is able to use information present in a single dataset to tease out its variability. [This is not magic: the MLE estimate is also able to tease out variability based on a parametric fit to a single dataset and examination of the sharpness of the peak of the log-likelihood function, Chapter TempComment \\@ref(binormal-model), as are the resampling methods described next.] Next, two resampling–based methods of estimating case-sampling variance of AUC are introduced. The word “resampling” means that the dataset itself is regarded as containing information regarding its variability, which can be extracted by sampling from the original data (hence the word “resampling”). These are general and powerful techniques, applicable to any scalar statistic, not just the empirical AUC, which one might be able to use in other contexts. 1.6 Bootstrap method The simplest resampling method, at least at the conceptual level, is the bootstrap. The bootstrap method is based on the assumption that one can regard the observed sample as defining the population from which it was sampled. Since by definition a population cannot be exhausted, the idea is to resample, with replacement, from the observed sample. Each resampling step realizes a particular bootstrap sample set denoted \\(\\{b\\}\\), where \\(b = 1, 2, ..., B\\). The curly brackets emphasize that different integer values of \\(b\\) denote different sets of cases, not individual cases. [In contrast, the notation \\((k)\\) will be used to denote removing a specific case, \\(k\\), as in the jackknife procedure to be described shortly. The index \\(b\\) should not be confused with the index \\(c\\), the case sampling index; the latter denotes repeated sampling from the population, which is impractical in real life; the bootstrap index denotes repeated sampling from the dataset, which is quite feasible.] The procedure is repeated \\(B\\) times, typically \\(B\\) can be as small as 200, but to be safe I generally use about 1000 - 2000 bootstraps. The following example uses Table TempComment \\@ref(tab:ratings-paradigm-example-table) from Chapter TempComment \\@ref(ratings-paradigm). For convenience, let us denote cases as follows. The 30 non-diseased cases that received the 1 rating are denoted \\(k_{1,1},k_{2,1},...,k_{30,1}\\). The second index denotes the truth state of the cases. Likewise, the 19 non-diseased cases that received the 2 rating are denoted \\(k_{31,1},k_{32,1},...,k_{49,1}\\) and so on for the remaining non-diseased cases. The 5 diseased cases that received the 1 rating are denoted \\(k_{1,2},k_{2,2},...,k_{5,2}\\), the 6 diseased cases that received the 2 rating are denoted \\(k_{6,2},k_{7,2},...,k_{11,2}\\), and so on. Let us figuratively “put” all non-diseased cases (think of each case as an index card, with the case notation and rating recorded on it) into one hat (the non-diseased hat) and all the diseased cases into another hat (the diseased hat). Next, one randomly picks one case (card) from the non-diseased hat, records it’s rating, and puts the case back in the hat, so that it is free to be possibly picked again. This is repeated 60 times for the non-diseased hat resulting in 60 ratings from non-diseased cases. A similar procedure is performed using the diseased hat, resulting in 50 ratings from diseased cases. The author has just described, in painful detail (one might say) the realization of the 1st bootstrap sample, denoted \\(\\{b=1\\}\\). This is used to construct the 1st bootstrap counts table, Table 1.1. TABLE 1.1: Representative counts table. \\(r = 5\\) \\(r = 4\\) \\(r = 3\\) \\(r = 2\\) \\(r = 1\\) non-diseased 0 0 9 16 35 diseased 19 8 7 9 7 So what happened? Consider the 35 non-diseased cases with a 1 rating. If each non-diseased case rated 1 in Table TempComment \\@ref(tab:ratings-paradigm-example-table) were picked one time, the total would have been 30, but it is 35. Therefore, some of the original non-diseased cases rated 1 must have been picked multiple times, but one must also make allowance as there is no guarantee that a specific case was picked at all. Still focusing on the 35 non-diseased cases with a 1 rating in the first bootstrap sample, the picked labels, reordered after the fact, with respect to the first index, might be: \\[\\begin{equation} k_{2,1},k_{2,1},k_{4,1},k_{4,1},k_{4,1},k_{6,1},k_{7,1},k_{7,1},k_{9,1},...,k_{28,1},k_{28,1},k_{30,1},k_{30,1} \\tag{1.4} \\end{equation}\\] In this example, case \\(k_{1,1}\\) was not picked, case \\(k_{2,1}\\) was picked twice, case \\(k_{3,1}\\) was not picked, case \\(k_{4,1}\\) was picked three times, case \\(k_{5,1}\\) was not picked, case \\(k_{6,1}\\) was picked once, etc. The total number of cases in Eqn. (1.4) is 35, and similarly for the other cells in Table 1.1. Next, one estimates AUC for this table. Using the Eng website referred to earlier, one gets AUC = 0.843. [It is OK to use a parametric FOM since the bootstrap is a general procedure applicable, in principle, to any FOM, not just the empirical AUC, unlike the DeLong method, which is restricted to empirical AUC.] The corresponding value for the original data, Table TempComment \\@ref(tab:ratings-paradigm-example-table), was AUC = 0.870. The first bootstrapped dataset yielded a smaller value than the original dataset because one happened to have picked an unusually difficult bootstrap sample. [Notice that in the original data there were 6 + 5 = 11 diseased cases that were rated 1 and 2, but in the bootstrapped dataset there are 7 + 9 = 16 diseased cases that were rated 1 and 2; in other words, the number of incorrect decisions on diseased cases went up, which would tend to lower AUC. Counteracting this effect is the increase in number of correct decisions on diseased cases: 8 + 19 = 27 cases rated 4 and 5, as compared to 12 + 22 = 34 in the original dataset. Reinforcing the effect is that increase in the number of correct decisions on non-diseased cases, albeit minimally: 35 + 16 = 51 rated 1 and 2 vs. 30 + 19 = 49 in the original dataset, and zero counts rated 4 and 5 in the non-diseased vs. 2 + 1 = 3 in the diseased. The complexity of following this post-facto justification illustrates the difficulty, in fact the futility, of correctly predicting which way performance will go from comparison of the two ROC counts tables – too many numbers are changing and in the above one did not even consider the change in counts in the bin labeled 4! Hence, the need for an objective figure of merit, such as the binormal model based AUC or the empirical AUC.] To complete the description of the bootstrap method, one repeats the procedure described in the preceding paragraphs \\(B = 200\\) times, each time running the website calculator and the final result is \\(B\\) values of AUC, denoted: \\[AUC_{\\{1\\}},AUC_{\\{2\\}},...,AUC_{\\{B\\}}\\] where \\(AUC_{\\{1\\}}=0.843\\), etc. The bootstrap estimate of the variance of AUC is defined by (Efron and Tibshirani 1993): \\[\\begin{equation} \\text{Var}\\left ( AUC \\right )=\\frac{1}{B-1}\\sum_{b=1}^{B}\\left ( AUC_{\\{b\\}}-AUC_{\\{ \\bullet\\}} \\right )^2 \\tag{1.5} \\end{equation}\\] The right hand side is the traditional definition of (unbiased) variance. The dot represents the average over the replaced index. Of course, running the website code 200 times and recording the outputs is not a productive use of time. The following code implements two methods for estimating AUC, the empirical AUC, described in TempComment Chapter \\@ref(empirical-auc) and the binormal model estimate of AUC, described in Chapter TempComment \\@ref(binormal-model). 1.6.1 Demonstration of the bootstrap method To minimize clutter, several R functions are not shown, but they are compiled. To display them clone or ‘fork’ the book repository and look at the Rmd file corresponding to this output and the sourced R files listed below: source(here(&quot;R/CH07-Variability/Transforms.R&quot;)) source(here(&quot;R/CH07-Variability/LL.R&quot;)) source(here(&quot;R/CH07-Variability/RocfitR.R&quot;)) source(here(&quot;R/CH07-Variability/RocOperatingPoints.R&quot;)) source(here(&quot;R/CH07-Variability/FixRocCountsTable.R&quot;)) source(here(&quot;R/CH07-Variability/WilcoxonCountsTable.R&quot;)) doBootstrap &lt;- function(parametricFOM, B, seed, RocTable) { # this is the K vector K &lt;- c(sum(RocTable[1,]), sum(RocTable[2,])) if (parametricFOM) { ret &lt;- RocfitR(RocTable) } else { ret &lt;- WilcoxonCountsTable(RocTable) } OrigAUC &lt;- ret$AUC # ready to bootstrap # first put the counts data into a linear array # convert counts table to array z1 &lt;- rep(1:length(RocTable[1,]), RocTable[1,]) z2 &lt;- rep(1:length(RocTable[2,]), RocTable[2,])#do: AUC &lt;- array(dim = B)#to save the bs AUC values for ( b in 1 : B){ while (1) { RocTable_bs &lt;- array(dim = c(2,length(RocTable[1,]))) # bs indices for non-diseased k1_b &lt;- ceiling( runif( K[ 1 ] ) * K[ 1 ] ) # bs indices for diseased k2_b &lt;- ceiling( runif( K[ 2 ] ) * K[ 2 ] ) bsTable &lt;- table(z1[k1_b]) #convert array to frequency table RocTable_bs[1,as.numeric(names(bsTable))] &lt;- bsTable bsTable &lt;- table(z2[k2_b]) #do: RocTable_bs[2,as.numeric(names(bsTable))] &lt;- bsTable #replace NAs with zeroes RocTable_bs[is.na(RocTable_bs )] &lt;- 0 if (parametricFOM) { temp &lt;- RocfitR(RocTable_bs) } else { temp &lt;- WilcoxonCountsTable(RocTable_bs) } AUC[b] &lt;- temp$AUC # a return of -1 means AUC did not converge if (AUC[b] != -1) break } } meanAUCboot &lt;- mean(AUC) Var &lt;- var(AUC) stdAUCboot &lt;- sqrt(Var) return(list( OrigAUC = OrigAUC, meanAUCboot = meanAUCboot, stdAUCboot = stdAUCboot )) } Since the bootstrap method is applicable to any scalar figure of merit, two options are provided in the code. If parametricFOM is set to TRUE, then the binormal model estimate is used, and if set to FALSE, the empirical AUC is used. The first set of results are obtained with parametricFOM set to TRUE. parametricFOM &lt;- TRUE B &lt;- 200;seed &lt;- 1;set.seed(seed) RocTable = array(dim = c(2,5)) RocTable[1,] &lt;- c(30,19,8,2,1) RocTable[2,] &lt;- c(5,6,5,12,22) ret &lt;- doBootstrap(parametricFOM, B, seed, RocTable) OrigAUC &lt;- ret$OrigAUC meanAUCboot &lt;- ret$meanAUCboot stdAUCboot &lt;- ret$stdAUCboot cat(&quot;Bootstrap variance estimation:&quot;, &quot;\\nparametricFOM = &quot;, parametricFOM, &quot;\\nseed = &quot;, seed, &quot;\\nB = &quot;, B, &quot;\\nOrigAUC = &quot;, OrigAUC, &quot;\\nmeanAUCboot = &quot;, meanAUCboot, &quot;\\nstdAUCboot = &quot;, stdAUCboot, &quot;\\n&quot;) #&gt; Bootstrap variance estimation: #&gt; parametricFOM = TRUE #&gt; seed = 1 #&gt; B = 200 #&gt; OrigAUC = 0.8704519 #&gt; meanAUCboot = 0.8671713 #&gt; stdAUCboot = 0.04380523 This shows that the AUC of the original data (i.e., before performing any bootstrapping) is 0.870, the mean AUC of the B = 200 bootstrapped datasets is 0.867, and the standard deviation of the 200 bootstraps is 0.0438. If one runs the website calculator referenced in the previous chapter on the dataset shown in Table TempComment \\@ref(tab:ratings-paradigm-example-table), one finds that the MLE of the standard deviation of the AUC of the fitted ROC curve is 0.0378. The standard deviation is itself a statistic and there is sampling variability associated with it, i.e., there exists such a beast as a standard deviation of a standard deviation; the bootstrap estimate is not too far from the MLE estimate. By setting seed to different values, one gets an idea of the variability of the estimate of the standard deviation of AUC. For example, with seed = 2, one gets: #&gt; Bootstrap variance estimation: #&gt; parametricFOM = TRUE #&gt; seed = 2 #&gt; B = 200 #&gt; OrigAUC = 0.8704519 #&gt; meanAUCboot = 0.8673155 #&gt; stdAUCboot = 0.03815402 Note that both the mean of the bootstrap samples and the standard deviation have changed, but both are close to the MLE values. Examined next is the dependence of the estimates on B, the number of bootstraps. With seed = 1 and B = 2000 one gets: #&gt; Bootstrap variance estimation: #&gt; parametricFOM = TRUE #&gt; seed = 1 #&gt; B = 2000 #&gt; OrigAUC = 0.8704519 #&gt; meanAUCboot = 0.8674622 #&gt; stdAUCboot = 0.03833508 The estimates are evidently rather insensitive to \\(B\\), but the computation time was longer, ~13 seconds (running MLE 2000 times in 13 seconds is not bad!). It is always a good idea to test the stability of the results to different \\(B\\) and seed values. Unlike the DeLong et al method, which is restricted to the Wilcoxon statistic (which equals empirical AUC as per the Bamber theorem), the bootstrap is broadly applicable to other figures of merit, including non-ROC paradigm figures of merit. However, beware that it depends on the assumption that the sample itself is representative of the population. With limited numbers of cases, this could be a bad assumption. [With small numbers of cases it is relatively easy to enumerate the different outcomes of the sampling process and, more importantly, their respective probabilities, leading to what is termed the exact bootstrap. It is “exact” in the sense that there is no seed variable or number of bootstrap dependence.] Finally, here is the output when using non-parametric AUC, with seed = 1. #&gt; Bootstrap variance estimation: #&gt; parametricFOM = FALSE #&gt; seed = 1 #&gt; B = 200 #&gt; OrigAUC = 0.8606667 #&gt; meanAUCboot = 0.8604575 #&gt; stdAUCboot = 0.04125475 1.7 Jackknife method The second resampling method, termed the jackknife, is computationally less demanding, but as was seen with the bootstrap, with modern personal computers computational limitations are no longer that important, at least for the types of analyses that this book is concerned with. In this method, the first case is removed, or jackknifed, from the set of cases and the MLE (or empirical estimation) is conducted on the resulting dataset, which has one less case. Let us denote by \\(AUC_{(1)}\\) the resulting value of AUC. The parentheses around the subscript \\(1\\) are meant to emphasize that the AUC value corresponds to that with the first case removed from the original dataset. Next, the first case is replaced, and now the second case is removed, the new dataset is analyzed yielding \\(AUC_{(2)}\\), and so on, yielding \\(K\\) (\\(K\\) is the total number of cases; \\(K=K_1+K_2\\)) jackknife AUC values: \\[\\begin{equation} AUC_{(k)} \\qquad k=1,2,...,K \\tag{1.6} \\end{equation}\\] The corresponding jackknife pseudovalues \\(Y_k\\) are defined by: \\[\\begin{equation} Y_k = K\\times AUC - \\left ( K-1 \\right ) \\times AUC_{(k)} \\tag{1.7} \\end{equation}\\] Here AUC denotes the estimate using the entire dataset, i.e., not removing any cases. The jackknife pseudovalues will turn out to be of central importance in TBA Chapter 09. The jackknife AUC values, defined by Eqn. (1.6), should not be confused with jackknife derived psuedovalues, defined by Eqn. (1.7). The jackknife estimate of the variance is defined by (Efron and Tibshirani 1993): \\[\\begin{equation} \\text{Var}_{\\text{jack}} = \\frac{\\left ( K-1 \\right )^2}{K} \\frac{1}{K-1} \\sum_{k=1}^{K} \\left ( AUC_{(k)} - AUC_{(\\bullet)} \\right )^2 \\tag{1.8} \\end{equation}\\] Since variance of \\(K\\) scalars is defined by: \\[\\begin{equation} \\text{Var}\\left ( x \\right ) = \\frac{1}{K-1} \\sum_{k=1}^{K} \\left ( x_{k} - x_{\\bullet} \\right )^2 \\tag{1.9} \\end{equation}\\] It follows that: \\[\\begin{equation} \\text{Var}_{\\text{jack}} \\left ( \\text{AUC} \\right ) = \\frac{\\left ( K-1 \\right )^2}{K} \\text{Var} \\left ( \\text{AUC} \\right ) \\tag{1.10} \\end{equation}\\] In Eqn. (1.8) I have deliberately not simplified the right hand side by canceling out \\(K-1\\). The purpose is to show, Eqn. (1.10), that the usual expression for the variance (of the jackknife FOM values) needs to be multiplied by a variance inflation factor \\(\\frac{\\left ( K-1 \\right )^2}{K}\\), which is approximately equal to \\(K\\), in order to obtain the correct jackknife estimate of variance of AUC. This factor was not necessary when one used the bootstrap method. That is because the bootstrap samples are more representative of the actual spread in the data. The jackknife samples are more restricted than the bootstrap samples, so the spread of the data is smaller; hence the need for the variance inflation factor (Efron and Tibshirani 1993). doJackknife &lt;- function(parametricFOM, RocTable) { # this is the K vector K &lt;- c(sum(RocTable[1,]), sum(RocTable[2,])) if (parametricFOM) { ret &lt;- RocfitR(RocTable) } else { ret &lt;- WilcoxonCountsTable(RocTable) } OrigAUC &lt;- ret$AUC # first put the counts data into a linear array z1 &lt;- rep(1:length(RocTable[1,]), RocTable[1,]) z2 &lt;- rep(1:length(RocTable[1,]), RocTable[2,]) AUC_jack &lt;- array(dim = sum(K)) Y_k &lt;- array(dim = sum(K)) z_jk &lt;- array(dim = sum(K)) # ready to jackknife for ( k in 1 : sum(K)){ RocTable_jk &lt;- array(dim = c(2,length(RocTable[1,]))) if ( k &lt;= K[ 1 ]){ z1_jk &lt;- z1[ -k ] z2_jk &lt;- z2 }else{ z1_jk &lt;- z1 z2_jk &lt;- z2[ -(k - K[ 1 ]) ] } #convert array to frequency table RocTable_jk[1,1:length(table(z1_jk))] &lt;- table(z1_jk) RocTable_jk[2,1:length(table(z2_jk))] &lt;- table(z2_jk) #replace NAs with zeroes RocTable_jk[is.na(RocTable_jk)] &lt;- 0 # AUC_jack for observed data if (parametricFOM) { temp &lt;- RocfitR(RocTable_jk) } else { temp &lt;- WilcoxonCountsTable(RocTable_jk) } AUC_jack[k] &lt;- temp$AUC Y_k[k] &lt;- sum(K)*OrigAUC - (sum(K)-1)*AUC_jack[k] if (AUC_jack[k] == -1) stop(&quot;RocfitR did not converge in jackknife loop&quot;) } meanAUCjack &lt;- mean(AUC_jack) #Efron and Stein&#39;s paper, include jackknife inflation factor Var_jack &lt;- var(AUC_jack) * ( sum(K) - 1)^2 / sum(K) stdAUCjack &lt;- sqrt(Var_jack) return(list( OrigAUC = OrigAUC, meanAUCjack = meanAUCjack, stdAUCjack = stdAUCjack )) } Since the jackknife method is applicable to any scalar figure of merit, two options are provided in the code. If parametricFOM is set to TRUE, then the binormal model estimate is used, and if set to FALSE, the empirical AUC is used. The first set of results are obtained with parametricFOM set to TRUE. Notice that the code does not use a set.seed() statement, as no random number generator is needed in the jackknife method. Systematically removing and replacing each case in sequence, one at a time, is not random sampling, which should further explain the need for the variance inflation factor in Eqn. (1.10). parametricFOM &lt;- TRUE RocTable = array(dim = c(2,5)) RocTable[1,] &lt;- c(30,19,8,2,1) RocTable[2,] &lt;- c(5,6,5,12,22) ret &lt;- doJackknife(parametricFOM, RocTable) OrigAUC &lt;- ret$OrigAUC meanAUCjack &lt;- ret$meanAUCjack stdAUCjack &lt;- ret$stdAUCjack cat(&quot;Jackknife variance estimation:&quot;, &quot;\\nparametricFOM = &quot;, parametricFOM, &quot;\\nOrigAUC = &quot;, OrigAUC, &quot;\\nmeanAUCjack = &quot;, meanAUCjack, &quot;\\nstdAUCjack = &quot;, stdAUCjack, &quot;\\n&quot;) #&gt; Jackknife variance estimation: #&gt; parametricFOM = TRUE #&gt; OrigAUC = 0.8704519 #&gt; meanAUCjack = 0.8704304 #&gt; stdAUCjack = 0.03861591 The next output is with the non-parametric figure of merit: #&gt; Jackknife variance estimation: #&gt; parametricFOM = FALSE #&gt; OrigAUC = 0.8606667 #&gt; meanAUCjack = 0.8606667 #&gt; stdAUCjack = 0.03689264 It may be noticed that the mean of the jackknife figure of merit values, i.e., 0.8606667, exactly equals the original figure of merit 0.8606667 (i.e., that calculated including all cases). This can be shown analytically to be true so long as the figure of merit is the empirical AUC. A similar relation is not true for the bootstrap. 1.8 Calibrated simulator 1.8.1 The need for a calibrated simulator The population sampling method used previously, 1.5, to compare the DeLong method to a known standard used arbitrarily set simulator values, i.e., \\(\\mu = 1.5\\) and \\(\\sigma = 1.3\\). One does not know if these values actually represent real clinical data. In this section a simple method of implementing population sampling using a calibrated simulator is described. A calibrated simulator is one whose parameters are chosen to match those of an actual clinical dataset. This way one has some assurance that the simulator is realistic and therefore its verdict on a proposed method or analysis (in our case method of estimating AUC variability) is likely to be correct. 1.8.2 Implementation of a simple calibrated simulator The simple simulator described here is limited to a single reader single modality dataset. A more complex simulator describing multiple readers in multiple modalities is described in a later chapter (TBA). Consider a clinical dataset, such as in Table TempComment \\@ref(tab:ratings-paradigm-example-table). Analyzed by MLE, this yields binormal model parameters, a, b and the thresholds \\(\\zeta_1,\\zeta_2,\\zeta_3,\\zeta_4\\). After conversion to \\(\\mu=a/b\\) and \\(\\sigma= 1/b\\) and new zetas \\(\\zeta = \\zeta/b\\), the values are (in the same order): 2.173597, 1.646099, 0.01263423, 1.475351, 2.494901, 3.945221 (see code output below): # mu_sigma is the mu-sigma notation mu_sigma &lt;- c(2.173597, 1.646099, 0.01263423, 1.475351, 2.494901, 3.945221) # ab is the a-b notation ab &lt;- c(1.320453, 0.607497, 0.007675259, 0.8962713, 1.515645, 2.39671) ab[1]/ab[2] # this is mu #&gt; [1] 2.173596 1/ab[2] # this is sigma #&gt; [1] 1.646099 ab[3:6]/ab[2] # this is zeta in mu-sigma notation #&gt; [1] 0.01263423 1.47535099 2.49490121 3.94522113 [The reason for dividing \\(\\zeta\\) by \\(b\\) is that when re-scaling the decision variable axis by \\(b\\) one must also re-scale the cutoffs.] The values \\(\\mu,\\sigma,\\zeta\\) define the calibrated simulator, in the sense that the parameter values are calibrated to match the dataset in Table TempComment \\@ref(tab:ratings-paradigm-example-table). Here is the function doCalSimulator() that will be used to perform the initial calibration followed by population sampling from the calibrated simulator: doCalSimulator &lt;- function(P, parametricFOM, RocCountsTable) { K &lt;- c(sum(RocCountsTable[1,]), sum(RocCountsTable[2,])) # perform the initial calibration ret &lt;- RocfitR(RocCountsTable) # AUC for observed data a &lt;- ret$a b &lt;- ret$b zetas &lt;- ret$zeta mu &lt;- a/b sigma &lt;- 1/b zetas &lt;- zetas/b # need to also scale zetas # AUC for observed data if (parametricFOM) { OrigAUC &lt;- RocfitR(RocCountsTable)$AUC } else { OrigAUC &lt;- WilcoxonCountsTable(RocCountsTable)$AUC } # perform the population sampling AUC &lt;- array(dim = P) for ( p in 1 : P){ while (1) { RocCountsTableSimPop &lt;- SimulateRocCountsTable(K, mu, sigma, zetas) if (parametricFOM) { # AUC for fitted curve temp &lt;- RocfitR(RocCountsTableSimPop) # a return of -1 means RocFitR did not converge if (temp[1] != -1) { AUC[p] &lt;- temp$AUC break } } else { AUC[p] &lt;- (WilcoxonCountsTable(RocCountsTableSimPop))$AUC break } } } AUC &lt;- AUC[!is.na(AUC)] meanAUC &lt;- mean(AUC) stdAUC &lt;- sqrt(var(AUC)) return(list( mu = mu, # these define the calibration simulator sigma = sigma, #do: zetas = zetas, #do: OrigAUC = OrigAUC, meanAUC = meanAUC, stdAUC = stdAUC )) } In the function doCalSimulator(P, parametricFOM, RocCountsTable), P is the desired number of population samples, parametricFOM is a logical, if set to TRUE the binormal model is used to calculate fitted AUC and otherwise the Wilcoxon statistic is used to calculate empirical AUC, and RocCountsTable contains the ROC data, such as Table TempComment \\@ref(tab:ratings-paradigm-example-table), to which the simulator is to be calibrated to. Lines 2-3 construct the K-vector, containing \\(K_1,K_2\\). Line 5 performs the maximum likelihood fit, using function RocfitR(RocCountsTable). The returned variable contains \\(a, b, \\zeta\\) as a list, which are extracted at lines 6-8. Lines 9-11 converts these to the mu-sigma notation. In essence, lines 5 - 11 calibrates the simulator and the calibrated values of the simulator are contained in \\(\\mu,\\sigma,\\zeta\\). Lines 13-17 calculates OrigAUC, the AUC of the original data, using parametric RocfitR or the Wilcoxon statistic, as appropriate, depending on the value of parametricFOM. After defining a length P array, at line 19, to hold the sampled AUC values, lines 20-39 begins and ends a for loop to conduct the P population samples. Each pass through the for loop yields \\(K_1\\) samples from the non-diseased distribution and \\(K_2\\) samples from the diseased distribution, returned in the variable RocCountsTableSimPop, which is similar in structure to a counts table like Table TempComment \\@ref(tab:ratings-paradigm-example-table). Within the for loop there is an endless while loop, needed because RocfitR can sometimes fail to converge, signaled by the first member of the returned list being minus 1, in which case another iteration of the while loop is performed (see line 30) and otherwise the break statement (line 32) causes program execution to proceed to the next iteration of the for loop. After entering the while loop, lines 22-23, a new ROC counts table is generated. The returned list is saved to temp at line 28, and if temp[1] != -1 (i.e., RocfitR did converge) the AUC value is saved to AUC[p], line 31. Upon exiting the code one has P values of AUC in the array AUC. 1.8.2.1 Parametric AUC results The following code uses the function just described and prints out the results. parametricFOM &lt;- TRUE seed &lt;- 1 set.seed(seed) P &lt;- 2000 RocCountsTable = array(dim = c(2,5)) RocCountsTable[1,] &lt;- c(30,19,8,2,1) RocCountsTable[2,] &lt;- c(5,6,5,12,22) ret &lt;- doCalSimulator(P, parametricFOM, RocCountsTable) mu &lt;- ret$mu sigma &lt;- ret$sigma zetas &lt;- ret$zetas meanAUC_1_2000 &lt;- ret$meanAUC stdAUC_1_2000 &lt;- ret$stdAUC After setting parametricFOM to TRUE (for a parametric fit), seed to 1 and P to 2000, the ROC counts table is defined and the function doCalSimulator() is called. The returned list contains the parameter values for the calibrated simulator: \\(\\mu\\) = 2.1735969, \\(\\sigma\\) = 1.6460988 and \\(\\zeta\\) = 0.0126342, 1.4753512, 2.4949012, 3.9452209. It also contains OrigAUC, the AUC of the original data, calculated by RocfitR(), in this case OrigAUC = 0.8704519, and the mean and standard deviation of the 2000 AUC values, equal to 0.8676727 and 0.0403331, respectively. The simulations were repeated with seed = 2. This time the mean and standard deviation of the 2000 AUC values, are equal to 0.8681855 and 0.0405516, respectively. The respective values corresponding to the two seed values are quite close to each other (to within a percent). More variability is observed, as expected, when the above two simulations are repeated with P = 200: For seed = 1 and P = 200 the mean and standard deviation of the 200 AUC values, are 0.8727151 and 0.0355281, respectively. For seed = 2 and P = 200 the mean and standard deviation of the 200 AUC values, are 0.8649385 and 0.0450947, respectively. Note the greater variability induced by the change in seed, as compared to P = 2000. 1.8.2.2 Non-parametric AUC results The next simulation is with seed = 1 and P = 2000, but this time parametricFOM is set to FALSE. The calibration proceeds as before, using RocfitR to determine the parameters of the simulation model, calibrating the simulator requires a parametric fit, but this empirical AUC is used to obtained the 2000 AUC samples. The mean and standard deviation of the AUC values, are 0.8497634 and 0.0367476, respectively. Note that these are smaller than the corresponding parametric estimates. The empirical AUC is expected to be smaller than the corresponding parametric AUC as joining adjacent points with straight lines will underestimate the area under the smooth ROC curve. Repeating with seed = 2, the mean and standard deviation of the AUC values, are 0.8503732 and 0.0369091, respectively, which are close to the seed = 1 values. 1.9 Discussion This chapter focused on the factors affecting variability of AUC, namely case-sampling and between-reader variability, each of which contain an inseparable within-reader contribution. The only way to get an estimate of within-reader variability is to have the same reader re-interpret the same case-set on multiple occasions, after a sufficient time delay to minimize memory effects. This is rarely done and is unnecessary, in the ROC context, to sound experimental design and analysis. Some early publications have suggested that such re-interpretations are needed, but modern methods, described in the next part of the book, does not require re-interpretations. Indeed, it is a waste of precious reader-time resources. Rather than have the same readers re-interpret the same case-set on multiple occasions, it makes much more sense to recruit more readers and/or collect more cases, guided by a systematic sample size estimation method. Another reason I am not in favor of re-interpretations is that the within-reader variance is usually smaller than case-sampling and between-reader variances. Re-interpretations would minimize a quantity that is already small, which is not good practice. The bootstrap and jackknife methods described in this chapter have wide applicability. Later they will be extended to estimating the covariance (essentially a scaled correlation) between two random variables. Also described was the DeLong method, applicable to the empirical AUC. Using a real dataset and simulators, all methods were shown to agree with each other, especially when the numbers of cases is large, Table 7.3 (row-D). The concept of a calibrated simulator was introduced as a way of “anchoring” a simulator to a real dataset. While relatively easy for a single dataset, the concept has yet to be extended to where it would be useful, namely designing a simulator calibrated to a dataset consisting of interpretations by multiple readers in multiple modalities of a common dataset. Just as a calibrated simulator allowed comparison of the different variance estimation methods to a known standard, obtained by population sampling, a more general calibrated simulator would allow better testing the validity of the analysis described in the next few chapters. This concludes Part A of this book. The next chapter begins Part B, namely the statistical analysis of multiple-reader multiple-case (MRMC) ROC datasets. TBA: what to do with removed sections? 1.10 Chapter References REFERENCES "],["hypothesis-testing.html", "Chapter 2 Hypothesis Testing 2.1 TBA How much finished 2.2 Introduction 2.3 Single-modality single-reader ROC study 2.4 Type-I errors 2.5 One vs. two sided tests 2.6 Statistical power 2.7 Comments 2.8 Why alpha is chosen as 5% 2.9 Discussion 2.10 Chapter References", " Chapter 2 Hypothesis Testing 2.1 TBA How much finished 60% 2.2 Introduction The problem addressed here is how to decide whether an estimate of AUC is consistent with a pre-specified value. One example of this is when a single-reader rates a set of cases in a single-modality, from which one estimates AUC, and the question is whether the estimate is statistically consistent with a pre-specified value. From a clinical point of view, this is generally not a useful exercise, but its simplicity is conducive to illustrating the broader concepts involved in this and later chapters. The clinically more useful analysis is when multiple readers interpret the same cases in two or more modalities. [With two modalities, for example, one obtains an estimate AUC for each reader in each modality, averages the AUC values over all readers within each modality, and computes the inter-modality difference in reader-averaged AUC values. The question forming the main subject of this book is whether the observed difference is consistent with zero.] Each situation outlined above admits a binary (yes/no) answer, which is different from the estimation problem that was dealt with in connection with the maximum likelihood method in (book) Chapter 06, where one computed numerical estimates (and confidence intervals) of the parameters of the fitting model. Hypothesis testing is the process of dichotomizing the possible outcomes of a statistical study and then using probabilistic arguments to choose one option over the other. The two options are termed the null hypothesis (NH) and the alternative hypothesis (AH). The hypothesis testing procedure is analogous to the jury trial system in the US, with 20 instead of 12 jurors, with the NH being the presumption of innocence and the AH being the defendant is guilty. The decision rule is to assume the defendant is innocent unless all 20 jurors agree the defendant is guilty. If even one juror disagrees, the defendant is deemed innocent (equivalent to choosing an \\(\\alpha\\) – defined below - of 0.05, or 1/20). 2.3 Single-modality single-reader ROC study The binormal model described in Chapter 06 can be used to generate sets of ratings to illustrate the methods being described in this chapter. To recapitulate, the model is described by: \\[\\begin{align*} Z_{k_11} &amp;\\sim N\\left ( 0,1 \\right ) \\\\ Z_{k_22} &amp;\\sim N\\left ( \\mu,\\sigma^2 \\right ) \\end{align*}\\] The following code chunk encodes the Wilcoxon function: Wilcoxon &lt;- function (zk1, zk2) { K1 = length(zk1) K2 = length(zk2) W &lt;- 0 for (k1 in 1:K1) { W &lt;- W + sum(zk1[k1] &lt; zk2) W &lt;- W + 0.5 * sum(zk1[k1] == zk2) } W &lt;- W/K1/K2 return (W) } In the next code chunk we set \\(\\mu = 1.5\\) and \\(\\sigma = 1.3\\) and simulate \\(K_1 = 50\\) non-diseased cases and \\(K_2 = 52\\) diseased cases. The for-loop draws 50 samples from the \\(N(0,1)\\) distribution and 52 samples from the \\(N(\\mu,\\sigma^2)\\) distribution, calculates the empirical AUC using the Wilcoxon, and the process is repeated 10,000 times, the AUC values are saved to a huge array AUC_c (the c-subscript is for case sample, where each case sample represents 102 cases). After exit from the for-loop we calculate the mean and standard deviation of the AUC values. seed &lt;- 1;set.seed(seed) mu &lt;- 1.5;sigma &lt;- 1.3;K1 &lt;- 50;K2 &lt;- 52 # cheat to find the population mean and std. dev. AUC_c &lt;- array(dim = 10000) for (c in 1:length(AUC_c)) { zk1 &lt;- rnorm(K1);zk2 &lt;- rnorm(K2, mean = mu, sd = sigma) AUC_c[c] &lt;- Wilcoxon(zk1, zk2) } meanAUC &lt;- mean(AUC_c);sigmaAUC &lt;- sd(AUC_c) cat(&quot;pop mean AUC_c = &quot;, meanAUC, &quot;, pop sigma AUC_c = &quot;, sigmaAUC, &quot;\\n&quot;) #&gt; pop mean AUC_c = 0.819178 , pop sigma AUC_c = 0.04176683 By the simple (if unimaginative) approach of sampling 10,000 times, one has estimates of the population mean and standard deviation of empirical AUC, denoted below by \\(AUC_{pop}\\) and \\(\\sigma_{\\text{AUC}}\\), respectively. The next code-chunk simulates one more independent ROC study with the same numbers of cases, and the resulting area under the empirical curve is denoted AUC in the code. # one more trial, this is the one we want # to compare to meanAUC zk1 &lt;- rnorm(K1);zk2 &lt;- rnorm(K2, mean = mu, sd = sigma) AUC &lt;- Wilcoxon(zk1, zk2) cat(&quot;New AUC = &quot;, AUC, &quot;\\n&quot;) #&gt; New AUC = 0.8626923 z &lt;- (AUC - meanAUC)/sigmaAUC cat(&quot;z-statistic = &quot;, z, &quot;\\n&quot;) #&gt; z-statistic = 1.04184 Is the new value, 0.8626923, sufficiently different from the population mean, 0.819178, to reject the null hypothesis \\(NH: \\text{AUC} = \\text{AUC}_{pop}\\)? Note that the answer to this question can be either yes or no: equivocation is not allowed! The new value is “somewhat close” to the population mean, but how does one decide if “somewhat close” is close enough? Needed is the statistical distribution of the random variable \\(\\text{AUC}\\) under the hypothesis that the true mean is \\(\\text{AUC}_{pop}\\). In the limit of a large number of cases, the pdf of \\(\\text{AUC}\\) under the null hypothesis is a normal distribution \\(N\\left ( \\text{AUC}_{pop}, \\sigma_{\\text{AUC}}^{2} \\right )\\): \\[\\begin{equation*} \\text{pdf}_{\\text{AUC}}\\left ( \\text{AUC}\\mid \\text{AUC}_{pop}, \\sigma_{\\text{AUC}} \\right )=\\frac{1}{\\sigma_{\\text{AUC}}\\sqrt{2\\pi}}exp\\left ( -\\frac{1}{2} \\left ( \\frac{\\text{AUC}-\\text{AUC}_{pop}}{\\sigma_{\\text{AUC}}} \\right )^2\\right ) \\end{equation*}\\] The translated and scaled value is distributed as a unit normal distribution, i.e., \\[\\begin{equation*} Z \\equiv \\frac{\\text{AUC}-\\text{AUC}_{pop}}{\\sigma_{\\text{AUC}}}\\sim N\\left ( 0,1 \\right ) \\end{equation*}\\] [The \\(Z\\) notation here should not be confused with z-sample, decision variable or rating of a case in an ROC study; the latter, when sampled over a set of non-diseased and diseased cases, yield a realization of \\(\\text{AUC}\\). The author trusts the distinction will be clear from the context.] The observed magnitude of \\(z\\) is 1.0418397. [Upper-case for random variable, lower-case for realized or observed value.] The ubiquitous p-value is the probability that the observed magnitude of \\(z\\), or larger, occurs under the null hypothesis (NH) that the true mean of \\(Z\\) is zero. Stated somewhat differently, but equivalently, it is the probability that a random sample from \\(N(0,1)\\) exceeds \\(z\\). The p-value corresponding to an observed \\(z\\) of 1.0418397 is given by: \\[\\begin{align*} \\Pr\\left ( \\lvert Z \\rvert \\geq \\lvert z \\rvert \\mid Z\\sim N\\left ( 0,1 \\right )\\right )&amp;=\\Pr\\left ( \\lvert Z \\rvert \\geq 1.042 \\mid Z\\sim N\\left ( 0,1 \\right )\\right )\\\\ &amp;= 2\\Phi\\left ( -1.042 \\right )\\\\ &amp;= 0.2975 \\end{align*}\\] To recapitulate statistical notation, \\(\\Pr\\left ( \\lvert Z \\rvert \\geq \\lvert z \\rvert \\mid Z\\sim N\\left ( 0,1 \\right )\\right )\\) is parsed as \\(\\Pr\\left ( A\\mid B \\right )\\), that is, the probability \\(\\lvert Z \\rvert \\geq \\lvert z \\rvert\\) given that \\(Z\\sim N\\left ( 0,1 \\right )\\). The second line in the preceding equation follows from the symmetry of the unit normal distribution, i.e., the area above 1.042 must equal the area below -1.042. Since \\(z\\) is a continuous variable, there is zero probability that a sampled value will exactly equal the observed value. Therefore, one must pose the statement as above, namely the probability that \\(Z\\) is at least as extreme as the observed value (by “extreme” I mean further from zero, in either positive or negative directions). If the observed was \\(z\\) = 2.5 then the corresponding p-value would be \\(2\\Phi(-2.5)\\)=0.01242, which is smaller than 0.2975. Under the zero-mean null hypothesis, the larger the magnitude of the observed value \\(z\\), the smaller the p-value, and the more unlikely that the data supports the NH. The p-value can be interpreted as the degree of unlikelihood that the data is consistent with the NH. By convention one adopts a fixed value of the probability, denoted and usually \\(\\alpha\\) = 0.05, which is termed the significance level of the test, and the decision rule is to reject the null hypothesis if the observed p-value &lt; \\(\\alpha\\). \\(\\alpha\\) is also referred to as the size of the test. \\[\\begin{equation*} p &lt; \\alpha \\Rightarrow \\text{Reject NH} \\end{equation*}\\] If the p-value is exactly 0.05 (unlikely with ROC analysis, but one needs to account for it), then one does not reject the NH. In the 20-juror analogy, of one juror insists the defendant is not guilty, the observed p-value is 0.05, and one does not reject the NH that the defendant is innocent (the double negatives, very common in statistics, can be confusing; in plain English, the defendant goes home). According to the previous discussion, the critical magnitude of \\(z\\) that determines whether to reject the null hypothesis is given by: \\[\\begin{equation*} z_{\\alpha / 2}=-\\Phi^{-1}\\left ( {\\alpha/2} \\right ) \\end{equation*}\\] For \\(\\alpha\\) = 0.05 this evaluates to 1.95996 (which is sometimes rounded up to two, good enough for “government work” as the saying goes) and the decision rule is to reject the null hypothesis only if the observed magnitude of \\(z\\) is larger than \\(z_{\\alpha/2}\\). The decision rule based on comparing the observed z to a critical value is equivalent to a decision rule based on comparing the observed p-value to \\(\\alpha\\). It is also equivalent, as will be shown later, to a decision rule based on a \\(\\left ( 1-\\alpha \\right )\\) confidence interval for the observed statistic. One rejects the NH if the closed confidence interval does not include zero. 2.4 Type-I errors Just because one rejects the null hypothesis does not mean that the null hypothesis is false. Following the decision rule puts an upper limit on, or “caps”, the probability of incorrectly rejecting the null hypothesis at \\(\\alpha\\). In other words, by agreeing to reject the NH only if \\(p \\leq \\alpha\\), one has set an upper limit, namely \\(\\alpha\\), on errors of this type, termed Type-I errors. These could be termed false positives in the hypothesis testing sense, not to be confused with false positive occurring on individual case-level decisions. According to the definition of \\(\\alpha\\): \\[\\begin{equation*} \\Pr( \\text{Type I error} \\mid \\text{NH} )=\\alpha \\end{equation*}\\] To demonstrate the ideas one needs to have a very cooperative reader interpreting new sets of independent cases not just one more time, but 2000 more times (the reason for the 2000 trials will be explained below). The simulation code follows: seed &lt;- 1;set.seed(seed) mu &lt;- 1.5;sigma &lt;- 1.3;K1 &lt;- 50;K2 &lt;- 52 nTrials &lt;- 2000 alpha &lt;- 0.05 # size of test reject = array(0, dim = nTrials) for (trial in 1:length(reject)) { zk1 &lt;- rnorm(K1);zk2 &lt;- rnorm(K2, mean = mu, sd = sigma) AUC &lt;- Wilcoxon(zk1, zk2) z &lt;- (AUC - meanAUC)/sigmaAUC p &lt;- 2*pnorm(-abs(z)) # p value for individual trial if (p &lt; alpha) reject[trial] = 1 } CI &lt;- c(0,0); width &lt;- -qnorm(alpha/2) ObsvdTypeIErrRate &lt;- sum(reject)/length(reject) CI[1] &lt;- ObsvdTypeIErrRate - width*sqrt(ObsvdTypeIErrRate*(1-ObsvdTypeIErrRate)/nTrials) CI[2] &lt;- ObsvdTypeIErrRate + width*sqrt(ObsvdTypeIErrRate*(1-ObsvdTypeIErrRate)/nTrials) cat(&quot;alpha = &quot;, alpha, &quot;\\n&quot;) #&gt; alpha = 0.05 cat(&quot;ObsvdTypeIErrRate = &quot;, ObsvdTypeIErrRate, &quot;\\n&quot;) #&gt; ObsvdTypeIErrRate = 0.0535 cat(&quot;95% confidence interval = &quot;, CI, &quot;\\n&quot;) #&gt; 95% confidence interval = 0.04363788 0.06336212 exact &lt;- binom.test(sum(reject),n = 2000,p = alpha) cat(&quot;exact 95% CI = &quot;, as.numeric(exact$conf.int), &quot;\\n&quot;) #&gt; exact 95% CI = 0.04404871 0.06428544 The population means were calculated in an earlier code chunk. One initializes NTrials to 2000 and \\(\\alpha\\) to 0.05. The for-loop describes our captive reader interpreting independent sets of cases 2000 times. Each completed interpretation of 102 cases is termed a trial. For each trial one calculates the observed value of AUC, the observed z statistic and the the observed p-value. The observed p-value is compared against the fixed value \\(\\alpha\\) and one sets the corresponding reject[trial] flag to unity if \\(p &lt; \\alpha\\). In other words, if the trial-specific p-value is less than \\(\\alpha\\) one counts an instance of rejection of the null hypothesis. The process is repeated 2000 times. Upon exit from the for-loop, one calculates the observed Type-I error rate, denoted ObsvdTypeIErrRate by summing the reject array and dividing by 2000. One calculates a 95% confidence interval for ObsvdTypeIErrRate based on the binomial distribution, as in (book) Chapter 03. The observed Type-I error rate is a realization of a random variable, as is the estimated 95% confidence interval. The fact that the confidence interval includes \\(\\alpha\\) = 0.05 is no coincidence - it shows that the hypothesis testing procedure is working as expected. To distinguish between the selected \\(\\alpha\\) (a fixed value) and that observed in a simulation study (a realization of a random variable), the term empirical \\(\\alpha\\) is sometimes used to denote the observed rejection rate. It is a mistake to state that one wishes to minimize the Type-I error probability. The minimum value of \\(\\alpha\\) (a probability) is zero. Run the software with this value of \\(\\alpha\\): one finds that the NH is never rejected. The downside of minimizing the expected Type-I error rate is that the NH will never be rejected, even when the NH is patently false. The aim of a valid method of analyzing the data is not minimizing the Type-I error rate, rather, the observed Type-I error rate should equal the specified value of \\(\\alpha\\) (0.05 in our example), allowance being made for the inherent variability in it’s estimate. This is the reason 2000 trials were chosen for testing the validity of the NH testing procedure. With this choice, the 95% confidence interval, assuming that observed value is close to 0.05, is roughly ±0.01 as explained next. Following analogous reasoning to (book) Chapter 03, Eqn. (3.10.10), and defining \\(f\\) as the observed rejection fraction over \\(T\\) trials, and as usual, \\(F\\) is a random variable and \\(f\\) a realized value, \\[\\begin{equation*} \\sigma_f = \\sqrt{f(1-f)/T} \\\\ F \\sim N\\left ( f,\\sigma_{f}^{2} \\right ) \\end{equation*}\\] An approximate \\((1-\\alpha)100\\) percent CI for \\(f\\) is: \\[\\begin{equation*} {CI}_f = \\left [ f-z_{\\alpha/2}\\sigma_f, f+z_{\\alpha/2}\\sigma_f \\right ] \\end{equation*}\\] If \\(f\\) is close to 0.05, then for 2000 trials, the 95% CI for \\(f\\) is \\(f \\pm 0.01\\), i.e., qnorm(alpha/2) * sqrt(.05*(.95)/2000) = 0.009551683 ~ 0.01. The only way to reduce the width of the CI, and thereby run a more stringent test of the validity of the analysis, is to increase the number of trials \\(T\\). Since the width of the CI depends on the inverse square root of the number of trials, one soon reaches a point of diminishing returns. Usually \\(T = 2000\\) trials are enough for most statisticians and me, but studies using more simulations have been published. 2.5 One vs. two sided tests The test described above is termed 2-tailed. Here, briefly, is the distinction between 2-tailed vs. 1-tailed p-values: alpha &lt;- 0.05 # Example 1 # p value for two-sided AH p2tailed &lt;- pnorm(-abs(z)) + (1-pnorm(abs(z))) cat(&quot;pvalue 2-tailed, AH: z ne 0 = &quot;, p2tailed, &quot;\\n&quot;) #&gt; pvalue 2-tailed, AH: z ne 0 = 0.2943993 # Example 2 # p value for one-sided AH gt 0 p1tailedGT &lt;- 1-pnorm(z) cat(&quot;pvalue 1-tailed, AH: z gt 0 = &quot;, p1tailedGT, &quot;\\n&quot;) #&gt; pvalue 1-tailed, AH: z gt 0 = 0.8528004 # Example 2 # p value for one-sided AH lt 0 p1tailedLT &lt;- pnorm(z) cat(&quot;pvalue 1-tailed, AH: z lt 0 = &quot;, p1tailedGT, &quot;\\n&quot;) #&gt; pvalue 1-tailed, AH: z lt 0 = 0.8528004 df &lt;- data.frame(p2tailed = p2tailed, p1tailedGT = p1tailedGT, p1tailedGT = p1tailedGT) print(df) #&gt; p2tailed p1tailedGT p1tailedGT.1 #&gt; 1 0.2943993 0.8528004 0.8528004 The only difference between these tests is in how the alternative hypotheses is stated. For a two-tailed test the alternative hypothesis is \\(\\text{AUC} \\ne \\text{AUC}_{pop}\\). Large deviations, in either direction, cause rejection of the NH. For the first one-tailed test the alternative hypothesis is \\(\\text{AUC} &gt; \\text{AUC}_{pop}\\). Large positive observed values of \\(z\\) result in rejection of the NH. Large negative values do not. For the second one-tailed test the alternative hypothesis is \\(\\text{AUC} &lt; \\text{AUC}_{pop}\\). Large negative observed values of \\(z\\) result in rejection of the NH. Large positive values do not. The last two statements are illustrated below with the following code-fragments: # p1tailedGT 1-pnorm(1) # do not reject #&gt; [1] 0.1586553 1-pnorm(2) # reject #&gt; [1] 0.02275013 1-pnorm(-2) # do not reject #&gt; [1] 0.9772499 # p1tailedGT pnorm(-1) # do not reject #&gt; [1] 0.1586553 pnorm(-2) # reject #&gt; [1] 0.02275013 pnorm(2) # do not reject #&gt; [1] 0.9772499 Note that the p-value of the 1-tailed tests are half that of the 2-tailed test. Further discussion of the difference between 2-tailed and 1-tailed tests, and when the latter might be appropriate, is given below. If the null hypothesis is rejected anytime the magnitude of the observed value of \\(z\\) exceeded the critical value \\(-\\Phi^{-1}\\left ( {\\alpha/2} \\right)\\). This is a statement of the alternative hypothesis (AH) \\(\\text{AUC}\\neq \\text{AUC}_{pop}\\), in other words too high or too low values of \\(z\\) both result in rejection of the null hypothesis. This is referred to as a two-sided AH and the resulting p-value is termed a two-sided p-value. This is the most common one used in the literature. Suppose the additional trial performed by the radiologist was performed after an intervention following which the radiologist’s performance is expected to increase. To make matters clearer, assume the interpretations in the 10,000 trials used to estimate \\(\\text{AUC}_{pop}\\) were performed with the radiologist wearing an old pair of eye-glasses, possibly out of proper strength, and the additional trial is performed after the radiologist gets a new set of prescription eye-glasses. Because the radiologist’s eyesight has improved, the expectation is that performance should increase. In this situation, it is appropriate to use the one-sided alternative hypothesis \\(\\text{AUC} &gt; \\text{AUC}_{pop}\\). Now, large positive values of \\(z\\) result in rejection of the null hypothesis, but large negative values do not. The critical value of \\(z\\) is defined by \\(z_\\alpha = \\Phi\\left ( 1-\\alpha \\right )\\), which for \\(\\alpha\\) = 0.05 is 1.645 (i.e., qnorm(1-alpha) = 1.644854). Compare 1.64 to the critical value \\(-\\Phi^{-1}\\left ( {\\alpha/2} \\right)\\) = 1.96 for a two-sided test. If the change is in the expected direction, it is more likely that one will reject the NH with a one-sided than with a two-sided test. The p-value for a one-sided test is given by: \\[\\begin{equation*} \\Pr\\left ( Z \\geq 1.042 \\mid \\text{NH} \\right ) = \\Phi \\left (-1.042 \\right ) = 0.1487 \\end{equation*}\\] Notice that this is half the corresponding two-sided test p-value; this is because one is only interested in the area under the unit normal that is above the observed value of \\(z\\). If the intent is to obtain a significant finding, it is tempting to use one-sided tests. The down side of a one-sided test is that even with a large excursion of the observed \\(z\\) in the other direction one cannot reject the null hypothesis. So if the new eye-glasses are so bad as to render the radiologist practically blind (think of a botched cataract surgery) the observed \\(z\\) would be large and negative, but one cannot reject the null hypothesis \\(\\text{AUC}=\\text{AUC}_{pop}\\). The one-sided test could be run the other way, with the alternative hypothesis being stated as \\(\\text{AUC}&lt;\\text{AUC}_{pop}\\). Now, large negative excursions of the observed value of AUC cause rejection of the null hypothesis, but large positive excursions do not. The critical value is defined by \\(z_\\alpha = \\Phi^{-1}\\left (\\alpha \\right )\\), which for \\(\\alpha\\) = 0.05 is -1.645. The p-value is given by (note the reversed sign compared to the previous one-sided test: \\[\\begin{equation*} \\Pr\\left ( Z \\leq 1.042 \\mid \\text{NH} \\right ) = \\Phi(1.042) = 1 - 0.1487 = 0.8513 \\end{equation*}\\] This is the complement of the value for a one-sided test with the alternative hypothesis going the other way: obviously the probability that \\(Z\\) is smaller than the observed value (1.042) plus the probability that \\(Z\\) is larger than the same value must equal one. 2.6 Statistical power So far, focus has been on the null hypothesis. The Type-I error probability was introduced, defined as the probability of incorrectly rejecting the null hypothesis, the control, or “cap” on which is \\(\\alpha\\), usually set to 0.05. What if the null hypothesis is actually false and the study fails to reject it? This is termed a Type-II error, the control on which is denoted \\(\\beta\\), the probability of a Type-II error. The complement of \\(\\beta\\) is called statistical power. The following table summarizes the two types of errors and the two correct decisions that can occur in hypothesis testing. In the context of hypothesis testing, a Type-II error could be termed a false negative, not to be confused with false negatives occurring on individual case-level decisions. Truth Fail to reject NH Reject NH NH is True 1 - \\(\\alpha\\) \\(\\alpha\\) (FPF) NH is False \\(\\beta\\) (FNF) Power = 1 - \\(\\beta\\) This resembles the 2 x 2 table encountered in (book) Chapter 02, which led to the concepts of \\(FPF\\), \\(TPF\\) and the ROC curve. Indeed, it is possible think of an analogous plot of empirical (i.e., observed) power vs. empirical \\(\\alpha\\), which looks like an ROC plot, with empirical \\(\\alpha\\) playing the role of \\(FPF\\) and empirical power playing the role of \\(TPF\\), see below. If \\(\\alpha\\) = 0, then power = 0; i.e., if Type-I errors are minimized all the way to zero, then power is zero and one makes Type-II errors all the time. On the other hand, if \\(\\alpha\\) = 1 then Power = 1, and one makes Type-I errors all the time. A little history is due at this point. The author’s first FROC study, which led to his entry into this field (Chakraborty et al. 1986), was published in Radiology in 1986 after a lot of help from a reviewer, who we (correctly) guessed was the late Prof. Charles E. Metz. Prof. Gary T. Barnes (my mentor at that time at the University of Alabama at Birmingham) and I visited Prof. Charles Metz in Chicago for a day ca. 1986, to figuratively “pick Charlie’s brain”. Prof. Metz referred to the concept outlined in the previous paragraph, as an ROC within an ROC. This curve does not summarize the result of a single ROC study. Rather it summarizes the probabilistic behavior of the two types of errors that occur when one conducts thousands of such studies, under both NH and AH conditions, each time with different values of \\(\\alpha\\), with each trial ending in a decision to reject or not reject the null hypothesis. The long sentence is best explained with an example. seed &lt;- 1;set.seed(seed) muNH &lt;- 1.5;muAH &lt;- 2.1;sigma &lt;- 1.3;K1 &lt;- 50;K2 &lt;- 52# Line 6 # cheat to find the population mean and std. dev. AUC &lt;- array(dim = 10000) # line 8 for (i in 1:length(AUC)) { zk1 &lt;- rnorm(K1);zk2 &lt;- rnorm(K2, mean = muNH, sd = sigma) AUC[i] &lt;- Wilcoxon(zk1, zk2) } sigmaAUC &lt;- sqrt(var(AUC));meanAUC &lt;- mean(AUC) # Line 14 T &lt;- 2000 # Line 16 mu &lt;- c(muNH,muAH) # Line 17 alphaArr &lt;- seq(0.05, 0.95, length.out = 10) EmpAlpha &lt;- array(dim = length(alphaArr)) EmpPower &lt;- array(dim = length(alphaArr)) for (a in 1:length(alphaArr)) { # Line 20 alpha &lt;- alphaArr[a] reject &lt;- array(0, dim = c(2, T)) for (h in 1:2) { for (t in 1:length(reject[h,])) { zk1 &lt;- rnorm(K1);zk2 &lt;- rnorm(K2, mean = mu[h], sd = sigma) AUC &lt;- Wilcoxon(zk1, zk2) obsvdZ &lt;- (AUC - meanAUC)/sigmaAUC p &lt;- 2*pnorm(-abs(obsvdZ)) # p value for individual t if (p &lt; alpha) reject[h,t] = 1 } } EmpAlpha[a] &lt;- sum(reject[1,])/length(reject[1,]) EmpPower[a] &lt;- sum(reject[2,])/length(reject[2,]) } EmpAlpha &lt;- c(0,EmpAlpha,1); EmpPower &lt;- c(0,EmpPower,1) # Line 19 pointData &lt;- data.frame(EmpAlpha = EmpAlpha, EmpPower = EmpPower) zetas &lt;- seq(-5, 5, by = 0.01) muRoc &lt;- 1.8 curveData &lt;- data.frame(EmpAlpha = pnorm(-zetas), EmpPower = pnorm(muRoc - zetas)) alphaPowerPlot &lt;- ggplot(mapping = aes(x = EmpAlpha, y = EmpPower)) + geom_point(data = pointData, shape = 1, size = 3) + geom_line(data = curveData) print(alphaPowerPlot) Relevant line numbers are shown above as comments. Line 6 creates two variables, muNH = 1.5 (the binormal model separation parameter under the NH) and muAH = 2.1 (the separation parameter under the AH). Under either hypotheses, the same diseased case standard deviation sigma = 1.3 and 50 non-diseased and 52 diseased cases are assumed. As before, lines 8 – 14 use the “brute force” technique to determine population AUC and standard deviation of AUC under the NH condition. Line 16 defines the number of trials T = 2000. Line 17 creates a vector mu containing the NH and AH values defined at line 6. Line 18 creates alphaArr, a sequence of 10 equally spaced values in the range 0.05 to 0.95, which represent 10 values for \\(\\alpha\\). Line 19 creates two arrays of length 10 each, named EmpAlpha and EmpPower, to hold the values of the observed Type-I error rate, i.e., empirical \\(\\alpha\\), and the empirical power, respectively. The program will run T = 2000 NH and T = 2000 AH trials using as \\(\\alpha\\) each successive value in alphaArr and save the observed Type-I error rates and observed powers to the arrays EmpAlpha and EmpPower, respectively. Line 20 begins a for-loop in a, an index into alphaArr. Line 21 selects the appropriate value for alpha (0.05 on the first pass, 0.15 on the next pass, etc.). Line 22 initializes reject[2,2000] with zeroes, to hold the result of each trial; the first index corresponds to hypothesis h and the second to trial t. Line 23 begins a for-loop in h, with h = 1 corresponding to the NH and h = 2 to the AH. Line 24 begins a for-loop in t, the trial index. The code within this block is similar to previous examples. It simulates ratings, computes AUC, calculates the p-value, and saves a rejection of the NH as a one at the appropriate array location reject[h,t]. Lines 32 – 33 calculate the empirical \\(\\alpha\\) and empirical power for each value of \\(\\alpha\\) in alphaArr. After padding the ends with zero and ones (the trivial points), the remaining lines plot the “ROC within an ROC”. Each of the circles in the figure corresponds to a specific value of \\(\\alpha\\). For example the lowest non-trivial corresponds to \\(\\alpha\\) = 0.05, for which the empirical \\(\\alpha\\) is 0.049 and the corresponding empirical Power is 0.4955. True \\(\\alpha\\) increases as the operating point moves up the plot, with empirical \\(\\alpha\\) and empirical power increasing correspondingly. The \\(\\text{AUC}\\) under this curve is determined by the effect size, defined as the difference between the AH and NH values of the separation parameter. If the effect size is zero, then the circles will scatter around the chance diagonal; the scatter will be consistent with the 2000 trials used to generate each coordinate of a point. As the effect size increases, the plot approaches the perfect “ROC”, i.e., approaching the top-left corner. One could use AUC under this “ROC” as a measure of the incremental performance, the advantage being that it would be totally independent of \\(\\alpha\\), but this would not be practical as it requires replication of the study under NH and AH conditions about 2000 times each and the entire process has to be repeated for several values of \\(\\alpha\\). The purpose of this demonstration was to illustrate the concept behind Metz’s profound remark. It is time to move on to factors affecting statistical power in a single study. 2.6.1 Factors affecting statistical power Effect size: effect size is defined as the difference in \\(\\text{AUC}_{pop}\\) values between the alternative hypothesis condition and the null hypothesis condition. Recall that \\(\\text{AUC}_{pop}\\) is defined as the true or population value of the empirical ROC-AUC for the relevant hypothesis. One can use the “cheat method” to estimate it under the alternative hypothesis. The formalism is easier if one assumes it is equal to the asymptotic binormal model predicted value. The binormal model yields an estimate of the parameters, which only approach the population values in the asymptotic limit of a large number of cases. In the following, it is assumed that the parameters on the right hand side are the population values) It follows that effect size (ES) is given by (all quantities on the right hand side of Eqn. (8.13) are population values): \\[\\begin{equation*} \\text{AUC} = \\Phi\\left ( \\frac{ \\mu }{\\sqrt{ 1 + \\sigma^2}} \\right ) \\end{equation*}\\] It follows that effect size (ES) is given by (all quantities on the right hand side of above equation are population values): \\[\\begin{equation*} ES = \\Phi\\left ( \\frac{\\mu_{AH}}{\\sqrt{1+\\sigma^2}} \\right ) - \\Phi\\left ( \\frac{\\mu_{NH}}{\\sqrt{1+\\sigma^2}} \\right ) \\end{equation*}\\] EffectSize &lt;- function (muNH, sigmaNH, muAH, sigmaAH) { ES &lt;- pnorm(muAH/sqrt(1+sigmaAH^2)) - pnorm(muNH/sqrt(1+sigmaNH^2)) return (ES) } seed &lt;- 1;set.seed(seed) muAH &lt;- 2.1 # NH value, defined previously, was mu = 1.5 T &lt;- 2000 alpha &lt;- 0.05 # size of test reject = array(0, dim = T) for (t in 1:length(reject)) { zk1 &lt;- rnorm(K1);zk2 &lt;- rnorm(K2, mean = muAH, sd = sigma) AUC &lt;- Wilcoxon(zk1, zk2) obsvdZ &lt;- (AUC - meanAUC)/sigmaAUC p &lt;- 2*pnorm(-abs(obsvdZ)) # p value for individual t if (p &lt; alpha) reject[t] = 1 } ObsvdTypeIErrRate &lt;- sum(reject)/length(reject) CI &lt;- c(0,0);width &lt;- -qnorm(alpha/2) CI[1] &lt;- ObsvdTypeIErrRate - width*sqrt(ObsvdTypeIErrRate*(1-ObsvdTypeIErrRate)/T) CI[2] &lt;- ObsvdTypeIErrRate + width*sqrt(ObsvdTypeIErrRate*(1-ObsvdTypeIErrRate)/T) cat(&quot;obsvdPower = &quot;, ObsvdTypeIErrRate, &quot;\\n&quot;) #&gt; obsvdPower = 0.489 cat(&quot;95% confidence interval = &quot;, CI, &quot;\\n&quot;) #&gt; 95% confidence interval = 0.4670922 0.5109078 cat(&quot;Effect Size = &quot;, EffectSize(mu, sigma, muAH, sigma), &quot;\\n&quot;) #&gt; Effect Size = 0.08000617 0 The ES for the code above is 0.08 (in AUC units). It should be obvious that if effect size is zero, then power equals \\(\\alpha\\). This is because then there is no distinction between the null and alternative hypotheses conditions. Conversely, as effect size increases, statistical power increases, the limiting value being unity, when every trial results in rejection of the null hypothesis. The reader should experiment with different values of muAH to be convinced of the truth of these statements. Sample size: increase the number of cases by a factor of two, and run the above code chunk. #&gt; pop NH mean AUC = 0.8594882 , pop NH sigma AUC = 0.02568252 #&gt; num. non-diseased images = 100 num. diseased images = 104 #&gt; obsvdPower = 0.313 #&gt; 95% confidence interval = 0.2926772 0.3333228 #&gt; Effect Size = 0.08000617 0 So doubling the numbers of cases (both non-diseased and diseased) results in statistical power increasing from 0.509 to 0.844. Increasing the numbers of cases decreases \\(\\sigma_{\\text{AUC}}\\), the standard deviation of the empirical AUC. The new value of \\(\\sigma_{\\text{AUC}}\\) is 0.02947, which should be compared to the value 0.04177 for K1 = 50, K2 = 52. Recall that \\(\\sigma_{\\text{AUC}}\\) enters the denominator of the Z-statistic, so decreasing it will increase the probability of rejecting the null hypothesis. Alpha: Statistical power depends on \\(alpha\\). The results below are for two runs of the code, the first with the original value \\(\\alpha\\) = 0.05, the second with \\(\\alpha\\) = 0.01: #&gt; alpha = 0.05 obsvdPower = 0.1545 #&gt; alpha = 0.01 obsvdPower = 0.0265 Decreasing \\(\\alpha\\) results in decreased statistical power. 2.7 Comments The Wilcoxon statistic was used to estimate the area under the ROC curve. One could have used the binormal model, introduced in Chapter 06, to obtain maximum likelihood estimates of the area under the binormal model fitted ROC curve. The reasons for choosing the simpler empirical area are as follows. (1) With continuous ratings and 102 operating points, the area under the empirical ROC curve is expected to be a close approximation to the fitted area. (2) With maximum likelihood estimation, the code would be more complex – in addition to the fitting routine one would require a binning routine and that would introduce yet another variable in the analysis, namely the number of bins and how the bin boundaries were chosen. (3) The maximum likelihood fitting code can sometimes fail to converge, while the Wilcoxon method is always guaranteed to yield a result. The non-convergence issue is overcome by modern methods of curve fitting described in later chapters. (4) The aim was to provide an understanding of null hypothesis testing and statistical power without being bogged down in the details of curve fitting. 2.8 Why alpha is chosen as 5% One might ask why \\(\\alpha\\) is traditionally chosen to be 5%. It is not a magical number, rather the result of a cost benefit tradeoff. Choosing too small a value of \\(\\alpha\\) would result in greater probability \\((1-\\alpha)\\) of the NH not being rejected, even when it is false. Sometimes it is important to detect a true difference between the measured AUC and the postulated value. For example, a new eye-laser surgery procedure is invented and the number of patients is necessarily small as one does not wish to subject a large number of patients to an untried procedure. One seeks some leeway on the Type-I error probability, possibly increasing it to \\(\\alpha\\) = 0.1, in order to have a reasonable chance of success in detecting an improvement in performance due to better eyesight after the surgery. If the NH is rejected and the change is in the right direction, then that is good news for the researcher. One might then consider a larger clinical trial and set \\(\\alpha\\) at the traditional 0.05, making up the lost statistical power by increasing the number of patients on which the surgery is tried. If a whole branch of science hinges on the results of a study, such as discovering the Higg’s Boson in particle physics, statistical significance is often expressed in multiples of the standard deviation (\\(\\sigma\\)) of the normal distribution, with the significance threshold set at a much stricter level (e.g. \\(5\\sigma\\)). This corresponds to \\(\\alpha\\) ~ 1 in 3.5 million (1/pnorm(-5) = 3.5 x 10^6, a one-sided test of significance). There is an article in Scientific American (https://blogs.scientificamerican.com/observations/five-sigmawhats-that/) on the use of \\(n\\sigma\\), where n is an integer, e.g. 5, to denote the significance level of a study, and some interesting anecdotes on why such high significance levels (ie., small \\(\\alpha\\)) are used in some fields of research. Similar concerns apply to manufacturing where the cost of a mistake could be the very expensive recall of an entire product line. For background on Six Sigma Performance, see http://www.six-sigma-material.com/Six-Sigma.html. An article downloaded 3/30/17 from https://en.wikipedia.org/wiki/Six_Sigma is included as supplemental material to this chapter (Six Sigma.pdf). It has an explanation of why \\(6\\sigma\\) translates to one defect per 3.4 million opportunities (it has to do with short-term and long-term drifts in a process). In my opinion, looking at other fields offers a deeper understanding of this material than simply stating that by tradition one adopts alpha = 5%. Most observer performance studies, while important in the search for better imaging methods, are not of such “earth-shattering” importance, and it is somewhat important to detect true differences at a reasonable alpha, so alpha = 5% and beta = 20% represent a good compromise. If one adopted a \\(5\\sigma\\) criterion, the NH would never be rejected, and progress in image quality optimization would come to a grinding halt. That is not to say that a \\(5\\sigma\\) criterion cannot be used; rather if used, the number of patients needed to detect a reasonable difference (effect size) with 80% probability would be astronomically large. Truth-proven cases are a precious commodity in observer performance studies. Particle physicists working on discovering the Higg’s Boson can get away with \\(5\\sigma\\) criterion because the number of independent observations and/or effect size is much larger than corresponding numbers in observer performance research. 2.9 Discussion In most statistics books, the subject of hypothesis testing is demonstrated in different (i.e., non-ROC) contexts. That is to be expected since the ROC-analysis field is a small sub-specialty of statistics (Prof. Howard E. Rockette, private communication, ca. 2002). Since this book is about ROC analysis, I decided to use a demonstration using ROC analysis. Using a data simulator, one can “cheat” by conducting a very large number of simulations to estimate the population \\(\\text{AUC}\\) under the null hypothesis. This permitted us to explore the related concepts of Type-I and Type-II errors within the context of ROC analysis. Ideally, both errors should be zero, but the nature of statistics leads one to two compromises. Usually one accepts a Type-I error capped at 5% and a Type-II error capped at 20%. These translate to \\(\\alpha\\) = 0.05 and desired statistical power = 80%. The dependence of statistical power on \\(\\alpha\\), the numbers of cases and the effect size was explored. In TBA Chapter 11 sample-size calculations are described that allow one to estimate the numbers of readers and cases needed to detect a specified difference in inter-modality AUCs with expected statistical power = \\(1-\\beta\\). The word “detect” in the preceding sentence is shorthand for “reject the NH with incorrect rejection probability capped at \\(\\alpha\\)”. This chapter also gives the first example of validation of a hypothesis testing method. Statisticians sometimes refer to this as showing a proposed test is a “5% test”. What is meant is that one needs to be assured that when the NH is true the probability of NH rejection is consistent with the expected value. Since the observed NH rejection rate over 2000 simulations is a random variable, one does not expect the NH rejection rate to exactly equal 5%, rather the constructed 95% confidence interval (also a random interval variable) should include the NH value with probability 1 - \\(\\alpha\\). Comparing a single reader’s performance to a specified value is not a clinically interesting problem. The next few chapters describe methods for significance testing of multiple-reader multiple-case (MRMC) ROC datasets, consisting of interpretations by a group of readers of a common set of cases in typically two modalities. It turns out that the analyses yield variability estimates that permit sample size calculation. After all, sample size calculation is all about estimation of variability, the denominator of the z-statistic. The formulae will look more complex, as interest is not in determining the standard deviation of AUC, but in the standard deviation of the inter-modality reader-averaged AUC difference. However, the basic concepts remain the same. 2.10 Chapter References REFERENCES "],["dbm-analysis-background.html", "Chapter 3 DBM method background 3.1 TBA How much finished 3.2 Introduction 3.3 Random and fixed factors 3.4 Reader and case populations 3.5 Three types of analyses 3.6 General approach 3.7 Summary TBA 3.8 Chapter References", " Chapter 3 DBM method background 3.1 TBA How much finished 80% 3.2 Introduction The term treatment is generic for imaging system, modality or image processing; reader is generic for radiologist or algorithmic observer, e.g., a computer aided detection (CAD) or artificial intelligence (AI) algorithm. The previous chapter described analysis of a single ROC dataset and comparing the observed area \\(AUC\\) under the ROC plot to a specified value. Clinically this is not an interesting problem; rather, interest is usually in comparing performance of a group of readers interpreting a common set of cases in two or more treatments. Such data is termed multiple reader multiple case (MRMC). [An argument could be made in favor of the term “multiple-treatment multiple-reader”, since “multiple-case” is implicit in any ROC analysis that takes into account correct and incorrect decisions on cases. However, I will stick with existing terminology.] The basic idea is that by sampling a sufficiently large number of readers and cases one can draw conclusions that apply broadly to other readers of similar skill levels interpreting other similar case sets in the selected treatments. How one accomplishes this, termed MRMC analysis, is the subject of this chapter. This chapter describes the first truly successful method of analyzing MRMC ROC data, namely the Dorfman-Berbaum-Metz (DBM) method (Dorfman, Berbaum, and Metz 1992). The other method, due to Obuchowski and Rockette (Obuchowski and Rockette 1995), is the subject of Chapter 10 (TBA). Both methods have been substantially improved by Hillis (Hillis, Berbaum, and Metz 2008; Hillis 2007, 2014). It is not an overstatement that ROC analysis came of age with the methods described in this chapter. Prior to the techniques described here, one knew of the existence of sources of variability affecting a measured \\(AUC\\) value, as discussed in (book) Chapter 07, but then-known techniques (Swets and Pickett 1982) for estimating the corresponding variances and correlations were impractical. 3.2.1 Historical background The author was thrown (unprepared) into the methodology field ca. 1985 when, as a junior faculty member, he undertook comparing a prototype digital chest-imaging device (Picker International, ca. 1983) vs. an optimized analog chest-imaging device at the University of Alabama at Birmingham. At the outset a decision was made to use free-response ROC methodology instead of ROC, as the former accounted for lesion localization, and I and my mentor, Prof. Gary T. Barnes, were influenced in that decision by a publication (Bunch et al. 1977) to be described in (book) Chapter 12. Therefore, instead of ROC-AUC one had lesion-level sensitivity at a fixed number of location level false positives per case as the figure-of-merit (FOM). Details of the FOM are not relevant at this time. Suffice to state that methods described in this chapter, which had not been developed in 1983, while developed for analyzing reader-averaged inter-treatment ROC-AUC differences, apply to any scalar FOM. While I was successful at calculating confidence intervals (this is the heart of what is loosely termed statistical analysis) and publishing the work (Chakraborty et al. 1986) using techniques described in a book (Swets and Pickett 1982) titled “Evaluation of Diagnostic Systems: Methods from Signal Detection Theory”, subsequent attempts at applying these methods in a follow-up paper (Niklason et al. 1986) led to negative variance estimates (private communication, Dr. Loren Niklason, ca. 1985). With the benefit of hindsight, negative variance estimates are not that uncommon and the method to be described in this chapter has to deal with that possibility. The methods (Swets and Pickett 1982) described in the cited book involved estimating the different variability components – case sampling, between-reader and within-reader variability. Between-reader and within-reader variability (the two cannot be separated as discussed in (book) Chapter 07) could be estimated from the variance of the \\(AUC\\) values corresponding to the readers interpreting the cases within a treatment and then averaging the variances over all treatments. Estimating case-sampling and within-reader variability required splitting the dataset into a few smaller subsets (e.g., a case set with 60 cases might be split into 3 sub-sets of 20 cases each), analyzing each subset to get an \\(AUC\\) estimate, calculating the variance of the resulting \\(AUC\\) values (Swets and Pickett 1982) and scaling the result to the original case size. Because it was based on few values, the estimate was inaccurate, and the already case-starved original dataset made it difficult to estimate AUCs for the subsets; moreover, the division into subsets was at the discretion of the researcher, and therefore unlikely to be reproduced by others. Estimating within-reader variability required re-reading the entire case set, or at least a part of it. ROC studies have earned a deserved reputation for taking much time to complete, and having to re-read a case set was not a viable option. [Historical note: I recalls a barroom conversation with Dr. Thomas Mertelmeir after the conclusion of an SPIE meeting ca. 2004, where Dr. Mertelmeir commiserated mightily, over several beers, about the impracticality of some of the ROC studies required of imaging device manufacturers by the FDA.] 3.2.2 The Wagner analogy An important objective of modality comparison studies is to estimate the variance of the difference in reader-averaged AUCs between the treatments. For two treatments one sums the reader-averaged variance in each treatment and subtracts twice the covariance (a scaled version of the correlation). Therefore, in addition to estimating variances, one needs to estimate correlations. Correlations are present due to the common case set interpreted by the readers in the different treatments. If the correlation is large, i.e., close to unity, then the individual treatment variances tend to cancel, making the constant treatment-induced difference easier to detect. The author recalls a vivid analogy used by the late Dr. Robert F. Wagner to illustrate this point at an SPIE meeting ca. 2008. To paraphrase him, consider measuring from shore the heights of the masts on two adjacent boats in a turbulent ocean. Because of the waves, the heights, as measured from shore, are fluctuating wildly, so the variance of the individual height measurements is large. However, the difference between the two heights is likely to be relatively constant, i.e., have small variance. This is because the wave that causes one mast’s height to increase also increases the height of the other mast. 3.2.3 The shortage of numbers to analyze and a pivotal breakthrough The basic issue was that the calculation of \\(AUC\\) reduces the relatively large number of ratings of a set of non-diseased and diseased cases to a single number. For example, after completion of an ROC study with 5 readers and 100 non-diseased and 100 diseased cases interpreted in two treatments, the data is reduced to just 10 numbers, i.e., five readers times two treatments. It is difficult to perform statistics with so few numbers. The author recalls a conversation with Prof. Kevin Berbaum at a Medical Image Perception Society meeting in Tucson, Arizona, ca. 1997, in which he described the basic idea that forms the subject of this chapter. Namely, using jackknife pseudovalues (to be defined below) as individual case-level figures of merit. This, of course, greatly increases the amount of data that one can work with; instead of just 10 numbers one now has 2,000 pseudovalues (2 x 5 x 200). If one assumes the pseudovalues behave essentially as case-level data, then by assumption they are independent and identically distributed, and therefore satisfy the conditions for application of standard analysis of variance (ANOVA) techniques. [This assumption has been much criticized and is the basis for some preferring alternate approaches - but, as Hillis has stated, and I paraphrase, the pseudovalue based method “works”, but lacks sufficient rigor.] The relevant paper had already been published in 1992 but other projects and lack of formal statistical training kept me from fully appreciating this work until later. For the moment I restrict to fully paired data (i.e., each case is interpreted by all readers in all treatments). There is a long history of how this field has evolved and I cannot do justice to all methods that are currently available. Some of the methods (Toledano 2003; Ishwaran and Gatsonis 2000; Toledano and Gatsonis 1996) have the advantage that they can handle explanatory variables (termed covariates) that could influence performance, e.g., years of experience, types of cases, etc. Other methods are restricted to specific choices of FOM. Specifically, the probabilistic approach (Clarkson, Kupinski, and Barrett 2006; Kupinski, Clarkson, and Barrett 2006; Gallas, Pennello, and Myers 2007; Gallas 2006) is restricted to the empirical \\(AUC\\) under the ROC curve, and is not applicable to other FOMs, e.g., parametrically fitted ROC AUCs or, more importantly, to location specific paradigm FOMs. Instead, I will focus on methods for which software is readily available (i.e., freely on websites), which have been widely used (the method that I am about to describe has been used in several hundred publications) and validated via simulations, and which apply to any scalar figure of merit, and therefore widely applicable, for example, to location specific paradigms. 3.2.4 Organization of chapter The concepts of reader and case populations, introduced in (book) Chapter 07, are recapitulated. A distinction is made between fixed and random factors – statistical terms with which one must become familiar. Described next are three types of analysis that are possible with MRMC data, depending on which factors are regarded as random and which as fixed. The general approach to the analysis is described. Two methods of analysis are possible: the jackknife pseudovalue-based approach detailed in this chapter and an alternative approach is detailed in Chapter 10. The Dorfman-Berbaum-Metz (DBM) model for the jackknife pseudovalues is described that incorporates different sources of variability and correlations possible with MRMC data. Calculation of ANOVA-related quantities, termed mean squares, from the pseudovalues, are described followed by the significance testing procedure for testing the null hypothesis of no treatment effect. A relevant distribution used in the analysis, namely the F-distribution, is illustrated with R examples. The decision rule, i.e., whether to reject the NH, calculation of the ubiquitous p-value, confidence intervals and how to handle multiple treatments is illustrated with two datasets, one an older ROC dataset that has been widely used to demonstrate advances in ROC analysis, and the other a recent dataset involving evaluation of digital chest tomosynthesis vs. conventional chest imaging. The approach to validation of DBM analysis is illustrated with an R example. The chapter concludes with a section on the meaning of the pseudovalues. The intent is to explain, at an intuitive level, why the DBM method “works”, even though use of pseudovalues has been questioned at the conceptual level. For organizational reasons and space limitations, details of the software are relegated to Online Appendices, but they are essential reading, preferably in front of a computer running the online software that is part of this book. The author has included material here that may be obvious to statisticians, e.g., an explanation of the Satterthwaite approximation, but are expected to be helpful to others from non-statistical backgrounds. 3.3 Random and fixed factors This paragraph introduces some analysis of variance (ANOVA) terminology. Treatment, reader and case are factors with different numbers of levels corresponding to each factor. For an ROC study with two treatments, five readers and 200 cases, there are two levels of the treatment factor, five levels of the reader factor and 200 levels of the case factor. If a factor is regarded as fixed, then the conclusions of the analysis apply only to the specific levels of the factor used in the study. If a factor is regarded as random, the levels of the factor are regarded as random samples from a parent population of the corresponding factor, and conclusions regarding specific levels are not allowed; rather, conclusions apply to the distribution from which the levels were sampled. ROC MRMC studies require a sample of cases and interpretations by one or more readers in one or more treatments (in this book the term multiple includes as a special case one). A study is never conducted on a sample of treatments. It would be nonsensical to image patients using a “sample” of all possible treatments. Every variation of an imaging technique (e.g., different kilovoltage or kVp) or display method (e.g., window-level setting) or image processing techniques qualifies as a distinct treatment. The number of possible treatments is very large, and, from a practical point of view, most of them are uninteresting. Rather, interest is in comparing two or more (a few at most) treatments that, based on preliminary studies, are clinically interesting. One treatment may be computed tomography, the other magnetic resonance imaging, or one may be interested in comparing a standard image processing method to a newly proposed one, or one may be interested in comparing CAD to a group of readers. This brings out an essential difference between how cases, readers and treatments have to be regarded in the variability estimation procedure. Cases and readers are usually regarded as random factors (there has to be at least one random factor – if not, there are no sources of variability and nothing to apply statistics to!), while treatments are regarded as fixed factors. The random factors contribute variability, but the fixed factors do not, rather they contribute constant shifts in performance. The terms fixed and random factors are used in this specific sense, and are derived, in turn, from ANOVA methods in statistics. With two or more treatments, there are shifts in performance of treatments relative to each other, that one seeks to assess the significance of, against a background of noise contributed by the random factors. If the shifts are sufficiently large compared to the noise, then one can state, with some certainty, that they are real. Quantifying the last statement uses the methods of hypothesis testing introduced in Chapter 2. 3.4 Reader and case populations Consider a sample of \\(J\\) readers. Conceptually there is a reader-population, modeled as a normal distribution \\(\\theta_j \\sim N\\left ( \\theta_{\\bullet\\{1\\}}, \\sigma_{br+wr}^{2} \\right )\\), describing the variation of skill-level of readers. Here \\(\\theta\\) is a generic FOM. Each reader \\(j\\) is characterized by a different value of \\(\\theta_j\\), \\(j=1,2,...J\\) and one can conceptually think of a bell-shaped curve with variance \\(\\sigma_{br+wr}^{2}\\) describing between-reader variability of the readers. A large variance implies large spread in reader skill levels. Likewise, there is a case-population, also modeled as a normal distribution, describing the variations in difficulty levels of the patients. One actually has two unit-variance distributions, one for non-diseased and one for diseased cases, characterized by a separation parameter. The separation parameter is scaled (i.e., normalized) by the standard deviation of each distribution (assumed equal). Each distribution has unit variance. Conceptually an easy case set has a larger than usual scaled separation parameter while a difficult case set has a smaller than usual scaled separation parameter. The distribution of the scaled separation parameter can be modeled as a bell-shaped curve \\(\\theta_{\\{c\\}} \\sim N\\left ( \\theta_{\\{\\bullet\\}}, \\sigma_{cs+wr}^{2} \\right )\\) with variance \\(\\sigma_{cs+wr}^{2}\\) describing the variations in difficulty levels of different case samples. Note the need for the case-set index, introduced in (book) Chapter 07, to specify the separation parameter for a specific case-set (in principle a \\(j\\)-index is also needed as one cannot have an interpretation without a reader; for now it is suppressed. A small variance \\(\\sigma_{cs}^{2}\\) implies the different case sets have similar difficulty levels while a larger variance would imply a larger spread in difficulty levels. Just as the previous paragraph described reader-varibility, this paragraph has described case-variability. Anytime one has a common random component to two measurements, the measurements are correlated. In the Wagner analogy, the common component is the random height, as a function of time, of a wave, which contributes the same amount to both height measurements (since the boats are adjacent). Since the readers interpret a common case set in all treatments one needs to account for various types of correlations that are potentially present. These occur due to the various types of pairings that can occur with MRMC data, where each pairing implies the presence of a common component to the measurements: (a) the same reader interpreting the same cases in different treatments, (b) different readers interpreting the same cases in the same treatment and (c) different readers interpreting the same cases in different treatments. These pairings are more clearly elucidated in (book) Chapter 10. The current chapter uses jackknife pseudovalue based analysis to model the variances and the correlations. Hillis has shown that the two approaches are essentially equivalent (Hillis, Berbaum, and Metz 2008). 3.5 Three types of analyses MRMC analysis aims to draw conclusions regarding the significances of inter-treatment shifts in performance. Ideally a conclusion (i.e., a difference is significant) should generalize to the respective populations from which the random samples were obtained. In other words, the idea is to generalize from the observed samples to the underlying populations. Three types of analyses are possible depending on which factor(s) one regards as random and which as fixed: random-reader random-case (RRRC), fixed-reader random-case (FRRC) and random-reader fixed-case (RRFC). If a factor is regarded as random, then the conclusion of the study applies to the population from which the levels of the factor were sampled. If a factor is regarded as fixed, then the conclusion applies only to the specific levels of the sampled factor. For example, if reader is regarded as a random factor, the conclusion generalizes to the reader population from which the readers used in the study were obtained. If reader is regarded as a fixed factor, then the conclusion applies to the specific readers that participated in the study. Regarding a factor as fixed effectively “freezes out” the sampling variability of the population and interest then centers only on the specific levels of the factor used in the study. Likewise, treating case as a fixed factor means the conclusion of the study is specific to the case-set used in the study. 3.6 General approach This section provides an overview of the steps involved in analysis of MRMC data. Two approaches are described in parallel: a figure of merit (FOM) derived jackknife pseudovalue based approach, detailed in this chapter and an FOM based approach, detailed in the next chapter. The analysis proceeds as follows: A FOM is selected: the selection of FOM is the single-most critical aspect of analyzing an observer performance study. The selected FOM is denoted \\(\\theta\\). The FOM has to be an objective scalar measure of performance with larger values characterizing better performance. [The qualifier “larger” is trivially satisfied; if the figure of merit has the opposite characteristic, a sign change is all that is needed to bring it back to compliance with this requirement.] Examples are empirical \\(AUC\\), the binormal model-based estimate \\(A_z\\) , other advance method based estimates of \\(AUC\\), sensitivity at a predefined value of specificity, etc. An example of a FOM requiring a sign-change is \\(FPF\\) at a specified \\(TPF\\), where smaller values signify better performance. For each treatment \\(i\\) and reader \\(j\\) the figure of merit \\(\\theta_{ij}\\) is estimated from the ratings data. Repeating this over all treatments and readers yields a matrix of observed values \\(\\theta_{ij}\\). This is averaged over all readers in each treatment yielding \\(\\theta_{i\\bullet}\\). The observed effect-size \\(ES_{obs}\\) is defined as the difference between the reader-averaged FOMs in the two treatments, i.e., \\(ES_{obs} = \\theta_{2\\bullet}-\\theta_{1\\bullet}\\). While extensible to more than two treatments, the explanation is more transparent by restricting to two modalities. If the magnitude of \\(ES_{obs}\\) is “large” one has reason to suspect that there might indeed be a significant difference in AUCs between the two treatments, where significant is used in the sense of (book) Chapter 08. Quantification of this statement, specifically how large is “large”, requires the conceptually more complex steps described next. In the DBM approach, the subject of this chapter, jackknife pseudovalues are calculated as described in Chapter 08. A standard ANOVA model with uncorrelated errors is used to model the pseudovalues. In the OR approach, the subject of the next chapter, the FOM is modeled directly using a custom ANOVA model with correlated errors. Depending on the selected method of modeling the data (pseudovalue vs. FOM) a statistical model is used which includes parameters modeling the true values in each treatment, and expected variations due to different variability components in the model, e.g., between-reader variability, case-sampling variability, interactions (e.g., allowing for the possibility that the random effect of a given reader could be treatment dependent) and the presence of correlations (between pseudovalues or FOMs) because of the pairings inherent in the interpretations. In RRRC analysis one accounts for randomness in readers and cases. In FRRC analysis one regards reader as a fixed factor. In RRFC analysis one regards the case-sample (set of cases) as a fixed factor. The statistical model depends on the type of analysis. The parameters of the statistical model are estimated from the observed data. The estimates are used to infer the statistical distribution of the observed effect size, \\(ES_{obs}\\), regarded as a realization of a random variable, under the null hypothesis (NH) that the true effect size is zero. Based on this statistical distribution, and assuming a two-sided test, the probability (this is the oft-quoted p-value) of obtaining an effect size at least as extreme as that actually observed, is calculated, as in (book) Chapter 08. If the p-value is smaller than a preselected value, denoted \\(\\alpha\\), one declares the treatments different at the \\(\\alpha\\) - significance level. The quantity \\(\\alpha\\) is the control (or “cap”) on the probability of making a Type I error, defined as rejecting the NH when it is true. It is common to set \\(\\alpha\\) = 0.05 but depending on the severity of the consequences of a Type I error, as discussed in (book) Chapter 08, one might consider choosing a different value. Notice that \\(\\alpha\\) is a pre-selected number while the p-value is a realization (observation) of a random variable. For a valid statistical analysis, the empirical probability \\(\\alpha_{emp}\\) over many (typically 2000) independent NH datasets, that the p-value is smaller than \\(\\alpha\\), should equal \\(\\alpha\\) to within statistical uncertainty. 3.7 Summary TBA This chapter has detailed analysis of MRMC ROC data using the DBM method. A reason for the level of detail is that almost all of the material carries over to other data collection paradigms, and a thorough understanding of the relatively simple ROC paradigm data is helpful to understanding the more complex ones. DBM has been used in several hundred ROC studies (Prof. Kevin Berbaum, private communication ca. 2010). While the method allows generalization of a study finding, e.g., rejection of the NH, to the population of readers and cases, I believe this is sometimes taken too literally. If a study is done at a single hospital, then the radiologists tend to be more homogenous as compared to sampling radiologists from different hospitals. This is because close interactions between radiologists at a hospital tend to homogenize reading styles and performance. A similar issue applies to patient characteristics, which are also expected to vary more between different geographical locations than within a given location served by the hospital. This means is that single hospital study based p-values may tend to be biased downwards, declaring differences that may not be replicable if a wider sampling “net” were used using the same sample size. The price paid for a wider sampling net is that one must use more readers and cases to achieve the same sensitivity to genuine treatment effects, i.e., statistical power (i.e., there is no “free-lunch”). A third MRMC ROC method, due to Clarkson, Kupinski and Barrett19,20, implemented in open-source JAVA software by Gallas and colleagues22,44 (http://didsr.github.io/iMRMC/) is available on the web. Clarkson et al19,20 provide a probabilistic rationale for the DBM model, provided the figure of merit is the empirical \\(AUC\\). The method is elegant but it is only applicable as long as one is using the empirical AUC as the figure of merit (FOM) for quantifying observer performance. In contrast the DBM approach outlined in this chapter, and the approach outlined in the following chapter, are applicable to any scalar FOM. Broader applicability ensures that significance-testing methods described in this, and the following chapter, apply to other ROC FOMs, such as binormal model or other fitted AUCs, and more importantly, to other observer performance paradigms, such as free-response ROC paradigm. An advantage of the Clarkson et al. approach is that it predicts truth-state dependence of the variance components. One knows from modeling ROC data that diseased cases tend to have greater variance than non-diseased ones, and there is no reason to suspect that similar differences do not exist between the variance components. Testing validity of an analysis method via simulation testing is only as good as the simulator used to generate the datasets, and this is where current research is at a bottleneck. The simulator plays a central role in ROC analysis. In my opinion this is not widely appreciated. In contrast, simulators are taken very seriously in other disciplines, such as cosmology, high-energy physics and weather forecasting. The simulator used to validate3 DBM is that proposed by Roe and Metz39 in 1997. This simulator has several shortcomings. (a) It assumes that the ratings are distributed like an equal-variance binormal model, which is not true for most clinical datasets (recall that the b-parameter of the binormal model is usually less than one). Work extending this simulator to unequal variance has been published3. (b) It does not take into account that some lesions are not visible, which is the basis of the contaminated binormal model (CBM). A CBM model based simulator would use equal variance distributions with the difference that the distribution for diseased cases would be a mixture distribution with two peaks. The radiological search model (RSM) of free-response data, Chapter 16 &amp;17 also implies a mixture distribution for diseased cases, and it goes farther, as it predicts some cases yield no z-samples, which means they will always be rated in the lowest bin no matter how low the reporting threshold. Both CBM and RSM account for truth dependence by accounting for the underlying perceptual process. (c) The Roe-Metz simulator is out dated; the parameter values are based on datasets then available (prior to 1997). Medical imaging technology has changed substantially in the intervening decades. (d) Finally, the methodology used to arrive at the proposed parameter values is not clearly described. Needed is a more realistic simulator, incorporating knowledge from alternative ROC models and paradigms that is calibrated, by a clearly defined method, to current datasets. Since ROC studies in medical imaging have serious health-care related consequences, no method should be used unless it has been thoroughly validated. Much work still remains to be done in proper simulator design, on which validation is dependent. 3.8 Chapter References REFERENCES "],["dbm-analysis-significance-testing.html", "Chapter 4 Significance Testing using the DBM Method 4.1 TBA How much finished 4.2 The DBM sampling model 4.3 Expected values of mean squares 4.4 Random-reader random-case (RRRC) analysis 4.5 Sample size estimation for random-reader random-case generalization 4.6 Significance testing and sample size estimation for fixed-reader random-case generalization 4.7 Significance testing and sample size estimation for random-reader fixed-case generalization 4.8 Summary TBA 4.9 Things for me to think about 4.10 Chapter References", " Chapter 4 Significance Testing using the DBM Method 4.1 TBA How much finished 60% 4.2 The DBM sampling model DBM = Dorfman Berbaum Metz The figure-of-merit has three indices: A treatment index \\(i\\), where \\(i\\) runs from 1 to \\(I\\), where \\(I\\) is the total number of treatments. A reader index \\(j\\), where \\(j\\) runs from 1 to \\(J\\), where \\(J\\) is the total number of readers. The case-sample index \\(\\{c\\}\\), where \\(\\{1\\}\\) i.e., \\(c\\) = 1, denotes a set of cases, \\(K_1\\) non-diseased and \\(K_2\\) diseased, interpreted by all readers in all treatments, and other integer values of \\(c\\) correspond to other independent sets of cases that, although not in fact interpreted by the readers, could potentially be “interpreted” using resampling methods such as the bootstrap or the jackknife. The approach (Dorfman, Berbaum, and Metz 1992) taken by DBM was to use the jackknife resampling method to calculate FOM pseudovalues \\({Y&#39;}_{ijk}\\) defined by (the reason for the prime will become clear shortly): \\[\\begin{equation} Y&#39;_{ijk}=K\\theta_{ij}-(K-1)\\theta_{ij(k)} \\tag{4.1} \\end{equation}\\] Here \\(\\theta_{ij}\\) is the estimate of the figure-of-merit for reader \\(j\\) interpreting all cases in treatment \\(i\\) and \\(\\theta_{ij(k)}\\) is the corresponding figure of merit with case \\(k\\) deleted from the analysis. To keep the notation compact the case-sample index \\(\\{1\\}\\) on every figure of merit symbol is suppressed. Recall from book Chapter 07 that the jackknife is a way of teasing out the case-dependence: the left hand side of Equation (4.1) has a case index \\(k\\), with \\(k\\) running from 1 to \\(K\\), where \\(K\\) is the total number of cases: \\(K=K_1+K_2\\). Hillis et al (Hillis, Berbaum, and Metz 2008) proposed a centering transformation on the pseudovalues (he terms it “normalized” pseudovalues, but to me “centering” is a more accurate and descriptive term - Normalize: (In mathematics) multiply (a series, function, or item of data) by a factor that makes the norm or some associated quantity such as an integral equal to a desired value (usually 1). New Oxford American Dictionary, 2016): \\[\\begin{equation} Y_{ijk}=Y&#39;_{ijk}+\\left (\\theta_{ij} - Y&#39;_{ij\\bullet} \\right ) \\tag{4.2} \\end{equation}\\] Note: the bullet symbol denotes an average over the corresponding index. The effect of this transformation is that the average of the centered pseudovalues over the case index is identical to the corresponding estimate of the figure of merit: \\[\\begin{equation} Y_{ij\\bullet}=Y&#39;_{ij\\bullet}+\\left (\\theta_{ij} - Y&#39;_{ij\\bullet} \\right )=\\theta_{ij} \\tag{4.3} \\end{equation}\\] This has the advantage that all confidence intervals are properly centered. The transformation is unnecessary if one uses the Wilcoxon as the figure-of-merit, as the pseudovalues calculated using the Wilcoxon as the figure of merit are “naturally” centered, i.e., \\(\\theta_{ij} - Y&#39;_{ij\\bullet} = 0\\) It is understood that, unless explicitly stated otherwise, all calculations from now on will use centered pseudovalues. Consider \\(N\\) replications of a MRMC study, where a replication means repetition of the study with the same treatments, readers and case-set \\(\\{C=1\\}\\). For \\(N\\) replications per treatment-reader-case combination, the DBM model for the pseudovalues is (\\(n\\) is the replication index, usually \\(n\\) = 1, but kept here for now): \\[\\begin{equation} Y_{n(ijk)} = \\mu + \\tau_i+ R_j + C_k + (\\tau R)_{ij}+ (\\tau C)_{ik}+ (R C)_{jk} + (\\tau RC)_{ijk}+ \\epsilon_{n(ijk)} \\tag{4.4} \\end{equation}\\] The term \\(\\mu\\) is a constant. By definition, the treatment effect \\(\\tau_i\\) is subject to the constraint: \\[\\begin{equation} \\sum_{i=1}^{I}\\tau_i=0\\Rightarrow \\tau_\\bullet=0 \\tag{4.5} \\end{equation}\\] This constraint ensures that \\(\\mu\\) has the interpretation of the average of the pseudovalues over treatments, readers and cases. The (nesting) notation for the replication index, i.e., \\(n(ijk)\\), implies \\(n\\) observations for treatment-reader-case combination \\(ijk\\). With no replications (\\(N\\) = 1) it is convenient to omit the n-symbol. The parameter \\(\\tau_i\\) is estimated as follows: \\[\\begin{equation} Y_{ijk} \\equiv Y_{1(ijk)}\\\\ \\tau_i = Y_{i \\bullet \\bullet} -Y_{\\bullet \\bullet \\bullet} \\tag{4.6} \\end{equation}\\] The basic assumption of the DBM model is that the pseudovalues can be regarded as independent and identically distributed observations. That being the case, the pseudovalues can be analyzed by standard ANOVA techniques. Since pseduovalues are computed from a common dataset, this assumption is, non-intuitive. However, for the special case of Wilcoxon figure of merit, it is justified. 4.2.1 Explanation of terms in the model The right hand side of Eqn. (4.1) consists of one fixed and 7 random effects. The current analysis assumes readers and cases as random factors (RRRC), so by definition \\(R_j\\) and \\(C_k\\) are random effects, and moreover, any term that includes a random factor is a random effect; for example, \\((\\tau R)_{ij}\\) is a random effect because it includes the \\(R\\) factor. Here is a list of the random terms: \\[\\begin{equation} R_j, C_k, (\\tau R)_{ij}, (\\tau C)_{ik}, (RC)_{jk}, (\\tau RC)_{ijk}, \\epsilon_{ijk} \\tag{4.7} \\end{equation}\\] Assumption: Each of the random effects is modeled as a random sample from mutually independent zero-mean normal distributions with variances as specified below: \\[\\begin{align} \\left.\\begin{array}{rll} {R_j}&amp;\\sim&amp; N\\left ( 0,\\sigma_{R}^{2} \\right ) \\\\[0.5em] {C_k}&amp;\\sim&amp; N\\left ( 0,\\sigma_{C}^{2} \\right ) \\\\[0.5em] {(\\tau R)_{ij}}&amp;\\sim&amp; N\\left ( 0,\\sigma_{\\tau R}^{2} \\right ) \\\\[0.5em] {(\\tau C)_{ik}}&amp;\\sim&amp; N\\left ( 0,\\sigma_{\\tau C}^{2} \\right ) \\\\[0.5em] {(RC)_{jk}}&amp;\\sim&amp; N\\left ( 0,\\sigma_{RC}^{2} \\right ) \\\\[0.5em] {(\\tau RC)_{ijk}}&amp;\\sim&amp; N\\left ( 0,\\sigma_{\\tau RC}^{2} \\right ) \\\\[0.5em] \\epsilon_{ijk} &amp;\\sim&amp; N\\left ( 0,\\sigma_{\\epsilon}^{2} \\right ) \\end{array}\\right\\} \\tag{4.8} \\end{align}\\] Equation (4.8) defines the meanings of the variance components appearing in Equation (4.7). One could have placed a \\(Y\\) subscript (or superscript) on each of the variances, as they describe fluctuations of the pseudovalues, not FOM values. However, this tends to clutter the notation. So here is the convention: Unless explicitly stated otherwise, all variance symbols in this chapter refer to pseudovalues. Another convention: \\((\\tau R)_{ij}\\) is not the product of the treatment and reader factors, rather it is a single factor, namely the treatment-reader factor with \\(IJ\\) levels, subscripted by the index \\(ij\\) and similarly for the other product-like terms in Equation (4.8). 4.2.2 Meanings of variance components in the DBM model (TBA this section can be improved) The variances defined in (4.8) are collectively termed variance components. Specifically, they are jackknife pseudovalue variance components, to be distinguished from figure of merit (FOM) variance components to be introduced in TBA Chapter 10. They are in order: \\(\\sigma_{R}^{2} ,\\sigma_{C}^{2} \\sigma_{\\tau R}^{2},\\sigma_{\\tau C}^{2},\\sigma_{RC}^{2}, \\sigma_{\\tau RC}^{2},\\sigma_{\\epsilon}^{2}\\). They have the following meanings. The term \\(\\sigma_{R}^{2}\\) is the variance of readers that is independent of treatment or case, which are modeled separately. It is not to be confused with the terms \\(\\sigma_{br+wr}^{2}\\) and \\(\\sigma_{cs+wr}^{2}\\) used in §9.3, which describe the variability of \\(\\theta\\) measured under specified conditions. [A jackknife pseudovalue is a weighted difference of FOM like quantities, TBA (4.1). Its meaning will be explored later. For now, a pseudovalue variance is distinct from a FOM variance.] The term \\(\\sigma_{C}^{2}\\) is the variance of cases that is independent of treatment or reader. The term \\(\\sigma_{\\tau R}^{2}\\) is the treatment-dependent variance of readers that was excluded in the definition of \\(\\sigma_{R}^{2}\\). If one were to sample readers and treatments for the same case-set, the net variance would be \\(\\sigma_{R}^{2}+\\sigma_{\\tau R}^{2}+\\sigma_{\\epsilon}^{2}\\). The term \\(\\sigma_{\\tau C}^{2}\\) is the treatment-dependent variance of cases that was excluded in the definition of \\(\\sigma_{C}^{2}\\). So, if one were to sample cases and treatments for the same readers, the net variance would be \\(\\sigma_{C}^{2}+\\sigma_{\\tau C}^{2}+\\sigma_{\\epsilon}^{2}\\). The term \\(\\sigma_{RC}^{2}\\) is the treatment-independent variance of readers and cases that were excluded in the definitions of \\(\\sigma_{R}^{2}\\) and \\(\\sigma_{C}^{2}\\). So, if one were to sample readers and cases for the same treatment, the net variance would be \\(\\sigma_{R}^{2}+\\sigma_{C}^{2}+\\sigma_{RC}^{2}+\\sigma_{\\epsilon}^{2}\\). The term \\(\\sigma_{\\tau RC}^{2}\\) is the variance of treatments, readers and cases that were excluded in the definitions of all the preceding terms in TBA (4.1). So, if one were to sample treatments, readers and cases the net variance would be \\(\\sigma_{R}^{2}+\\sigma_{C}^{2}+\\sigma_{\\tau C}^{2}+\\sigma_{RC}^{2}+\\sigma_{\\tau RC}^{2}+\\sigma_{\\epsilon}^{2}\\). The last term, \\(\\sigma_{\\epsilon}^{2}\\) describes the variance arising from different replications of the study using the same treatments, readers and cases. Measuring this variance requires repeating the study several (\\(N\\)) times with the same treatments, readers and cases, and computing the variance of \\(Y_{n(ijk)}\\) , where the additional \\(n\\)-index refers to true replications, \\(n\\) = 1, 2, …, \\(N\\). \\[\\begin{equation} \\sigma_{\\epsilon}^{2}=\\frac{1}{IJK}\\sum_{i=1}^{I}\\sum_{j=1}^{J}\\sum_{k=1}^{k}\\frac{1}{N-1}\\sum_{n=1}^{N}\\left ( Y_{n(ijk)} - Y_{\\bullet (ijk)} \\right )^2 \\tag{4.9} \\end{equation}\\] The right hand side of TBA (4.1) is the variance of \\(Y_{n(ijk)}\\), for specific \\(ijk\\), with respect to the replication index \\(n\\), averaged over all \\(ijk\\). In practice \\(N\\) = 1 (i.e., there are no replications) and this variance cannot be estimated (it would imply dividing by zero). It has the meaning of reader inconsistency, usually termed within-reader variability. As will be shown later, the presence of this inestimable term does not limit ones ability to perform significance testing on the treatment effect without having to replicate the whole study, as implied in earlier work (Obuchowski and Rockette 1995). An equation like TBA (4.1) is termed a linear model with the left hand side, the pseudovalue “observations”, modeled by a sum of fixed and random terms. Specifically it is a mixed model, because the right hand side has both fixed and random effects. Statistical methods have been developed for analysis of such linear models. One estimates the terms on the right hand side of TBA (4.1), it being understood that for the random effects, one estimates the variances of the zero-mean normal distributions, TBA (4.1)Eqn. (9.7), from which the samples are obtained (by assumption). Estimating the fixed effects is trivial. The term \\(\\mu\\) is estimated by averaging the left hand side of TBA (4.1)Eqn. (9.4) over all three indices (since \\(N\\) = 1): \\(\\mu=Y_{\\bullet \\bullet \\bullet}\\) Because of the way the treatment effect is defined, TBA (4.1) Eqn. (9.5), averaging, which involves summing, over the treatment-index \\(i\\), yields zero, and all of the remaining random terms yield zero upon averaging, because they are individually sampled from zero-mean normal distributions. To estimate the treatment effect one takes the difference \\(\\tau_i=Y_{\\bullet \\bullet \\bullet}-\\mu\\). It can be easily seen that the reader and case averaged difference between two different treatments \\(i\\) and \\(i&#39;\\) is estimated by \\(\\tau_i-\\tau_{i&#39;} = Y_{i \\bullet \\bullet} - Y_{i&#39; \\bullet \\bullet}\\). Estimating the strengths of the random terms is a little more complicated. It involves methods adapted from least squares, or maximum likelihood, and more esoteric ways. I do not feel comfortable going into these methods. Instead, results are presented and arguments are made to make them plausible. The starting point is definitions of quantities called mean squares and their expected values. 4.2.3 Definitions of mean-squares Again, to be clear, one chould put a \\(Y\\) subscript (or superscript) on each of the following definitions, but that would make the notation unnecessarily cumbersome. In this chapter, all mean-square quantities are calculated using pseudovalues, not figure-of-merit values. The presence of three subscripts on Y should make this clear. Also the replication index and the nesting notation are suppressed. The notation is abbreviated so MST is the mean square corresponding to the treatment effect, etc. The definitions of the mean-squares below match those (where provided) in (Hillis and Berbaum 2004, 1261). \\[\\begin{align} \\left.\\begin{array}{rll} \\text{MST}&amp;=&amp;\\frac{JK\\sum_{i=1}^{I}\\left ( Y_{i \\bullet \\bullet} - Y_{ \\bullet \\bullet \\bullet} \\right )^2}{I-1}\\\\[0.5em] \\text{MSR}&amp;=&amp;\\frac{IK\\sum_{j=1}^{J}\\left ( Y_{\\bullet j \\bullet} - Y_{ \\bullet \\bullet \\bullet} \\right )^2}{J-1}\\\\[0.5em] \\text{MS(C)}&amp;=&amp;\\frac{IJ\\sum_{k=1}^{K}\\left ( Y_{\\bullet \\bullet k} - Y_{ \\bullet \\bullet \\bullet} \\right )^2}{K-1}\\\\[0.5em] \\text{MSTR}&amp;=&amp;\\frac{K\\sum_{i=1}^{I}\\sum_{j=1}^{J}\\left ( Y_{i j \\bullet} - Y_{i \\bullet \\bullet} - Y_{\\bullet j \\bullet} + Y_{ \\bullet \\bullet \\bullet} \\right )^2}{(I-1)(J-1)}\\\\[0.5em] \\text{MSTC}&amp;=&amp;\\frac{J\\sum_{i=1}^{I}\\sum_{k=1}^{K}\\left ( Y_{i \\bullet k} - Y_{i \\bullet \\bullet} - Y_{\\bullet \\bullet k} + Y_{ \\bullet \\bullet \\bullet} \\right )^2}{(I-1)(K-1)}\\\\[0.5em] \\text{MSRC}&amp;=&amp;\\frac{I\\sum_{j=1}^{J}\\sum_{k=1}^{K}\\left ( Y_{\\bullet j k} - Y_{\\bullet j \\bullet} - Y_{\\bullet \\bullet k} + Y_{ \\bullet \\bullet \\bullet} \\right )^2}{(J-1)(K-1)}\\\\[0.5em] \\text{MSTRC}&amp;=&amp;\\frac{\\sum_{i=1}^{I}\\sum_{j=1}^{J}\\sum_{k=1}^{K}\\left ( Y_{i j k} - Y_{i j \\bullet} - Y_{i \\bullet k} - Y_{\\bullet j k} + Y_{i \\bullet \\bullet} + Y_{\\bullet j \\bullet} + Y_{\\bullet \\bullet k} - Y_{ \\bullet \\bullet \\bullet} \\right )^2}{(I-1)(J-1)K-1)} \\end{array}\\right\\} \\tag{4.10} \\end{align}\\] Note the absence of \\(MSE\\), corresponding to the \\(\\epsilon\\) term on the right hand side of (4.10). With only one observation per treatment-reader-case combination, MSE cannot be estimated; it effectively gets absorbed into the \\(MSTRC\\) term. 4.3 Expected values of mean squares “In our original formulation [2], expected mean squares for the ANOVA were derived from a restricted parameterization in which mixed-factor interactions sum to zero over indexes of fixed effects. In the restricted parameterization, the mixed effects are correlated, parameters are sometimes awkward to define [17], and extension to unbalanced designs is dubious [17, 18]. In this article, we recommend the unrestricted parameterization. The restricted and unrestricted parameterizations are special cases of a general model by Scheffe [19] that allows an arbitrary covariance structure among experimental units within a level of a random factor. Tables 1 and 2 show the ANOVA tables with expected mean squares for the unrestricted formulation.” — (Dorfman, Berbaum, and Lenth 1995) The observed mean squares defined in Equation (4.10) can be calculated directly from the observed pseudovalues. The next step in the analysis is to obtain expressions for their expected values in terms of the variances defined in (4.10). Assuming no replications, i.e., \\(N\\) = 1, the expected mean squares are as follows, Table Table 4.1; understanding how this table is derived, would lead me outside my expertise and the scope of this book; suffice to say that these are unconstrained estimates (as summarized in the quotation above) which are different from the constrained estimates appearing in the original DBM publication (Dorfman, Berbaum, and Metz 1992). TABLE 4.1: Unconstrained expected values of mean-squares, as in (Dorfman, Berbaum, and Lenth 1995) Source df E(MS) T (I-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(K\\sigma_{\\tau R}^{2}\\) + \\(J\\sigma_{\\tau C}^{2}\\) + \\(JK\\sigma_{\\tau}^{2}\\) R (J-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) + \\(IK\\sigma_{R}^{2}\\) + \\(K\\sigma_{\\tau R}^{2}\\) C (K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) + \\(IJ\\sigma_{C}^{2}\\) + \\(J\\sigma_{\\tau C}^{2}\\) TR (I-1)(J-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(K\\sigma_{\\tau R}^{2}\\) TC (I-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(J\\sigma_{\\tau C}^{2}\\) RC (J-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) TRC (I-1)(J-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) \\(\\epsilon\\) \\(N-1=0\\) \\(\\sigma_{\\epsilon}^{2}\\) In Table 4.1 the following notation is used as a shorthand: \\[\\begin{equation} \\sigma_{\\tau}^{2}=\\frac{1}{I-1}\\sum_{i=1}^{I}\\left ( Y_{i \\bullet \\bullet} - Y_{\\bullet \\bullet \\bullet} \\right )^2 \\tag{4.11} \\end{equation}\\] Since treatment is a fixed effect, the variance symbol \\(\\sigma_{\\tau}^{2}\\), which is used for notational consistency in Table 4.1, could cause confusion. The right hand side “looks like” a variance, indeed one that could be calculated for just two treatments but, of course, random sampling from a distribution of treatments is not the intent of the notation. 4.4 Random-reader random-case (RRRC) analysis Both readers and cases are regarded as random factors. The expected mean squares in Table Table 4.1 are variance-like quantities; specifically, they are weighted linear combinations of the variances appearing in (4.8). For single factors the column headed “degrees of freedom” (\\(df\\)) is one less than the number of levels of the corresponding factor; estimating a variance requires first estimating the mean, which imposes a constraint, thereby decreasing \\(df\\) by one. For interaction terms, \\(df\\) is the product of the degrees of freedom for the individual factors. As an example, the term \\((\\tau RC)_{ijk}\\) contains three individual factors, and therefore \\(df = (I-1)(J-1)(K-1)\\). The number of degrees of freedom can be thought of as the amount of information available in estimating a mean square. As a special case, with no replications, the \\(\\epsilon\\) term has zero \\(df\\) as \\(N-1 = 0\\). With only one observation \\(Y_{1(ijk)}\\) there is no information to estimate the variance corresponding to the \\(\\epsilon\\) term. To estimate this term one needs to replicate the study several times – each time the same readers interpret the same cases in all treatments – a very boring task for the reader and totally unnecessary from the researcher’s point of view. 4.4.1 Calculation of mean squares: an example We choose dataset02 to illustrate calculation of mean squares for pseudovalues. This is referred to in the book as the “VD” dataset (Van Dyke et al. 1993). It consists of 114 cases, 45 of which are diseased, interpreted in two treatments by five radiologists using the ROC paradigm. The first line computes the pseudovalues using the RJafroc function UtilPseudoValues(), and the second line extracts the numbers of treatments, readers and cases. The following lines calculate, using Equation (4.10) the mean-squares. After displaying the results of the calculation, the results are compared to those calculated by the RJafroc function UtilMeanSquares(). Y &lt;- UtilPseudoValues(dataset02, FOM = &quot;Wilcoxon&quot;)$jkPseudoValues I &lt;- dim(Y)[1];J &lt;- dim(Y)[2];K &lt;- dim(Y)[3] msT &lt;- 0 for (i in 1:I) { msT &lt;- msT + (mean(Y[i, , ]) - mean(Y))^2 } msT &lt;- msT * J * K/(I - 1) msR &lt;- 0 for (j in 1:J) { msR &lt;- msR + (mean(Y[, j, ]) - mean(Y))^2 } msR &lt;- msR * I * K/(J - 1) msC &lt;- 0 for (k in 1:K) { msC &lt;- msC + (mean(Y[, , k]) - mean(Y))^2 } msC &lt;- msC * I * J/(K - 1) msTR &lt;- 0 for (i in 1:I) { for (j in 1:J) { msTR &lt;- msTR + (mean(Y[i, j, ]) - mean(Y[i, , ]) - mean(Y[, j, ]) + mean(Y))^2 } } msTR &lt;- msTR * K/((I - 1) * (J - 1)) msTC &lt;- 0 for (i in 1:I) { for (k in 1:K) { msTC &lt;- msTC + (mean(Y[i, , k]) - mean(Y[i, , ]) - mean(Y[, , k]) + mean(Y))^2 } msTC &lt;- msTC * J/((I - 1) * (K - 1)) } msTC &lt;- 0 for (i in 1:I) { for (k in 1:K) { # OK msTC &lt;- msTC + (mean(Y[i, , k]) - mean(Y[i, , ]) - mean(Y[, , k]) + mean(Y))^2 } } msTC &lt;- msTC * J/((I - 1) * (K - 1)) msRC &lt;- 0 for (j in 1:J) { for (k in 1:K) { msRC &lt;- msRC + (mean(Y[, j, k]) - mean(Y[, j, ]) - mean(Y[, , k]) + mean(Y))^2 } } msRC &lt;- msRC * I/((J - 1) * (K - 1)) msTRC &lt;- 0 for (i in 1:I) { for (j in 1:J) { for (k in 1:K) { msTRC &lt;- msTRC + (Y[i, j, k] - mean(Y[i, j, ]) - mean(Y[i, , k]) - mean(Y[, j, k]) + mean(Y[i, , ]) + mean(Y[, j, ]) + mean(Y[, , k]) - mean(Y))^2 } } } msTRC &lt;- msTRC/((I - 1) * (J - 1) * (K - 1)) data.frame(&quot;msT&quot; = msT, &quot;msR&quot; = msR, &quot;msC&quot; = msC, &quot;msTR&quot; = msTR, &quot;msTC&quot; = msTC, &quot;msRC&quot; = msRC, &quot;msTRC&quot; = msTRC) #&gt; msT msR msC msTR msTC msRC msTRC #&gt; 1 0.5467634 0.4373268 0.3968699 0.06281749 0.09984808 0.06450106 0.0399716 as.data.frame(UtilMeanSquares(dataset02)[1:7]) #&gt; msT msR msC msTR msTC msRC msTRC #&gt; 1 0.5467634 0.4373268 0.3968699 0.06281749 0.09984808 0.06450106 0.0399716 4.4.2 Significance testing If the NH of no treatment effect is true, i.e., if \\(\\sigma_{\\tau}^{2}\\) = 0, then according to Table 4.1 the following holds (the last term in the row labeled \\(T\\) in Table 4.1 drops out): \\[\\begin{equation} E\\left ( MST\\mid NH \\right ) = \\sigma_{\\epsilon}^{2} + \\sigma_{\\tau RC}^{2} + K\\sigma_{\\tau R}^{2} + J\\sigma_{\\tau C}^{2} \\tag{4.12} \\end{equation}\\] Also, the following linear combination is equal to \\(E\\left ( MST\\mid NH \\right )\\): \\[\\begin{align} \\begin{split} &amp;E\\left ( MSTR \\right ) + E\\left ( MSTC \\right ) - E\\left ( MSTRC \\right ) \\\\ &amp;= \\left (\\sigma_{\\epsilon}^{2} + \\sigma_{\\tau RC}^{2} + K\\sigma_{\\tau R}^{2} \\right ) + \\left (\\sigma_{\\epsilon}^{2} + \\sigma_{\\tau RC}^{2} + J\\sigma_{\\tau C}^{2} \\right ) -\\left (\\sigma_{\\epsilon}^{2} + \\sigma_{\\tau RC}^{2} \\right ) \\\\ &amp;= \\sigma_{\\epsilon}^{2} + \\sigma_{\\tau RC}^{2} + J \\sigma_{\\tau C}^{2} + K\\sigma_{\\tau R}^{2} \\\\ &amp;= E\\left ( MST\\mid NH \\right ) \\end{split} \\tag{4.13} \\end{align}\\] Therefore, under the NH, the ratio: \\[\\begin{equation} \\frac{E\\left ( MST\\mid NH \\right )}{E\\left ( MSTR \\right ) + E\\left ( MSTC \\right ) - E\\left ( MSTRC \\right )} = 1 \\tag{4.14} \\end{equation}\\] In practice, one does not know the expected values – that would require averaging each of these quantities, regarded as random variables, over their respective distributions. Therefore, one defines the following statistic, denoted \\(F_{DBM}\\), using the observed values of the mean squares, calculated almost trivially as in the previous example, using their definitions in Equation (4.10): \\[\\begin{equation} F_{DBM} = \\frac{MST}{MSTR + MSTC - MSTRC} \\tag{4.15} \\end{equation}\\] \\(F_{DBM}\\) is a realization of a random variable. A non-zero treatment effect, i.e., \\(\\sigma_{\\tau}^{2} &gt; 0\\), will cause the ratio to be larger than one, because \\(E\\left ( MST \\right)\\) will be larger, see row labeled \\(T\\) in Table 4.1. Therefore values of \\(F_{DBM} &gt; 1\\) will tend to reject the NH. Drawing on a theorem from statistics (Larsen and Marx 2005), under the NH the ratio of two independent mean squares is distributed as a (central) F-statistic with degrees of freedom corresponding to those of the mean squares forming the numerator and denominator of the ratio (Theorem 12.2.5 in “An Introduction to Mathematical Statistics and Its Applications”). To perform hypothesis testing one needs the distribution, under the NH, of the statistic defined by Eqn. (4.15). This is completely analogous to Chapter 08 where knowledge of the distribution of AUC under the NH enabled testing the null hypothesis that the observed value of AUC equals a pre-specified value. Under the NH, \\(F_{DBM|NH}\\) is distributed according to the F-distribution characterized by two numbers: A numerator degrees of freedom (\\(\\text{ndf}\\)) – determined by the degrees of freedom of the numerator, \\(MST\\), of the ratio comprising the F-statistic, i.e., \\(I – 1\\), and A denominator degrees of freedom (\\(\\text{ddf}\\)) - determined by the degrees of freedom of the denominator, \\(MSTR + MSTC - MSTRC\\), of the ratio comprising the F-statistic, to be described in the next section. Summarizing, \\[\\begin{align} \\left.\\begin{array}{rll} F_{DBM|NH} \\sim F_{\\text{ndf},\\text{ddf}} \\\\ \\text{ndf}=I-1 \\end{array}\\right\\} \\tag{4.16} \\end{align}\\] The next topic is estimating \\(ddf\\). 4.4.3 The Satterthwaite approximation The denominator of the F-ratio is \\(MSTR+MSTC-MSTRC\\). This is not a simple mean square (I am using terminology in the Satterthwaite papers - he means any mean square defined by equations such as in Equation (4.10)). Rather it is a linear combination of mean squares (with coefficients 1, 1 and -1), and the resulting value could even be negative leading to a negative \\(F_{DBM|NH}\\), which is an illegal value for a sample from an F-distribution (a ratio of two variances). In 1941 Satterthwaite (Satterthwaite 1941, 1946) proposed an approximate degree of freedom for a linear combination of simple mean square quantities. TBA Online Appendix 9.A explains the approximation in more detail. The end result is that the mean square quantity described in Equation (4.15) has an approximate degree of freedom defined by (this is called the Satterthwaite’s approximation): \\[\\begin{equation} ddf_{Sat}=\\frac{\\left ( MSTR + MSTC - MSTRC \\right )^2}{\\left ( \\frac{MSTR^2}{(I-1)(J-1)} + \\frac{MSTC^2}{(I-1)(K-1)} + \\frac{MSTRC^2}{(I-1)(J-1)(K-1)} \\right )} \\tag{4.17} \\end{equation}\\] The subscript \\(Sat\\) is for Satterthwaite. From Equation (4.17) it should be fairly obvious that in general \\(ddf_{Sat}\\) is not an integer. To accommodate possible negative estimates of the denominator of Equation (4.17), the original DBM method (Dorfman, Berbaum, and Metz 1992) proposed, depending on the signs of \\(\\sigma_{\\tau R}^2\\) and \\(\\sigma_{\\tau C}^2\\), four expressions for the F-statistic and corresponding expressions for \\(ddf\\). Rather than repeat them here, since they have been superseded by the method described below, the interested reader is referred to Eqn. 6 and Eqn. 7 in Reference (Hillis, Berbaum, and Metz 2008). Instead Hillis (Hillis 2007) proposed the following statistic for testing the null hypothesis: \\[\\begin{equation} F_{DBM} = \\frac{MST}{MSTR + \\max \\left (MSTC - MSTRC, 0 \\right )} \\tag{4.18} \\end{equation}\\] Now the denominator cannot be negative. One can think of the F-statistic \\(F_{DBM}\\) as a signal-to-noise ratio like quantity, with the difference that both numerator and denominator are variance like quantities. If the “variance” represented by the treatment effect is larger than the variance of the noise tending to mask the treatment effect, then \\(F_{DBM}\\) tends to be large, which makes the observed treatment “variance” stand out more clearly compared to the noise, and the NH is more likely to be rejected. Hillis in (Hillis et al. 2005) has shown that the left hand side of Equation (4.18) is distributed as an F-statistic with \\(\\text{ndf} = I-1\\) and denominator degrees of freedom \\(ddf_H\\) defined by: \\[\\begin{equation} ddf_H =\\frac{\\left ( MSTR + \\max \\left (MSTC - MSTRC,0 \\right ) \\right )^2}{\\text{MSTR}^2}(I-1)(J-1) \\tag{4.19} \\end{equation}\\] Summarizing, \\[\\begin{equation} F_{DBM} \\sim F_{\\text{ndf},\\text{ddf}_H} \\\\ \\text{ndf}=I-1 \\tag{4.20} \\end{equation}\\] Instead of 4 rules, as in the original DBM method, the Hillis modification involves just one rule, summarized by Equations (4.19) through (4.20). Moreover, the F-statistic is constrained to non-negative values. Using simulation testing (Hillis, Berbaum, and Metz 2008) he has been shown that the modified DBM method has better null hypothesis behavior than the original DBM method. The latter tended to be too conservative, typically yielding Type I error rates smaller than the expected 5% for \\(\\alpha\\) = 0.05. 4.4.4 Decision rules, p-value and confidence intervals The critical value of the F-distribution, denoted \\(F_{1-\\alpha,\\text{ndf},\\text{ddf}_H}\\), is defined such that fraction \\(1-\\alpha\\) of the distribution lies to the left of the critical value, in other words it is the \\(1-\\alpha\\) quantile of the F-distribution: \\[\\begin{equation} \\Pr\\left ( F\\leq F_{1-\\alpha,\\text{ndf},\\text{ddf}_H} \\mid F\\sim F_{\\text{ndf},\\text{ddf}_H}\\right ) = 1 - \\alpha \\tag{4.21} \\end{equation}\\] The critical value \\(F_{1-\\alpha,\\text{ndf},\\text{ddf}_H}\\) increases as \\(\\alpha\\) decreases. The value of \\(\\alpha\\), generally chosen to be 0.05, termed the nominal \\(\\alpha\\), is fixed. The decision rule is that if \\(F_{DBM} &gt; F_{1-\\alpha, \\text{ndf}, \\text{ddf}_H}\\) one rejects the NH and otherwise one does not. It follows, from the definition of \\(F_{DBM}\\), Equation (4.18), that rejection of the NH is more likely to occur if: \\(F_{DBM}\\) is large, which occurs if \\(MST\\) is large, meaning the treatment effect is large \\(MSTR + \\max \\left (MSTC - MSTRC,0 \\right )\\) is small, see comments following TBA (4.1) Eqn. (9.23). \\(\\alpha\\) is large: for then \\(F_{1-\\alpha,\\text{ndf},\\text{ddf}_H}\\) decreases and is more likely to be exceeded by the observed value of \\(F_{DBM}\\). is large: the more the number of treatment pairings, the greater the chance that at least one pairing will reject the NH. This is one reason sample size calculations are rarely conducted for more than 2-treatments. \\(\\text{ddf}_H\\) is large: this causes the critical value to decrease, see below, and is more likely to be exceeded by the observed value of \\(F_{DBM}\\). 4.4.4.1 p-value of the F-test The p-value of the test is the probability, under the NH, that an equal or larger value of the F-statistic than observed \\(F_{DBM}\\) could occur by chance. In other words, it is the area under the (central) F-distribution \\(F_{\\text{ndf},\\text{ddf}}\\) that lies to the right of the observed value of \\(F_{DBM}\\): \\[\\begin{equation} p=\\Pr\\left ( F &gt; F_{DBM} \\mid F \\sim F_{\\text{ndf},\\text{ddf}_H} \\right ) \\tag{4.22} \\end{equation}\\] 4.4.4.2 Confidence intervals for inter-treatment FOM differences If \\(p &lt; \\alpha\\) then the NH that all treatments are identical is rejected at significance level \\(\\alpha\\). That informs the researcher that there exists at least one treatment-pair that has a difference significantly different from zero. To identify which pair(s) are different, one calculates confidence intervals for each paired difference. Hillis in (Hillis et al. 2005) has shown that the \\((1-\\alpha)\\) confidence interval for \\(Y_{i \\bullet \\bullet} - Y_{i&#39; \\bullet \\bullet}\\) is given by: \\[\\begin{equation} CI_{1-\\alpha}=\\left ( Y_{i \\bullet \\bullet} - Y_{i&#39; \\bullet \\bullet} \\right ) \\pm t_{\\alpha/2;\\text{ddf}_H} \\sqrt{\\frac{2}{JK}\\left ( MSTR + \\max\\left ( MSTC-MSTRC,0 \\right ) \\right )} \\tag{4.23} \\end{equation}\\] Here \\(t_{\\alpha/2;\\text{ddf}_H}\\) is that value such that \\(\\alpha/2\\) of the central t-distribution with \\(\\text{ddf}_H\\) degrees of freedom is contained in the upper tail of the distribution: \\[\\begin{equation} \\Pr\\left ( T&gt;t_{\\alpha/2;\\text{ddf}_H} \\right )=\\alpha/2 \\tag{4.24} \\end{equation}\\] Since centered pseudovalues were used: \\[\\begin{equation} \\left ( Y_{i \\bullet \\bullet} - Y_{i&#39; \\bullet \\bullet} \\right )=\\left ( \\theta_{i \\bullet } - \\theta_{i&#39; \\bullet} \\right ) \\end{equation}\\] Therefore, Equation (4.23) can be rewritten: \\[\\begin{equation} CI_{1-\\alpha}=\\left ( \\theta_{i \\bullet} - \\theta_{i&#39; \\bullet} \\right ) \\pm t_{\\alpha/2;\\text{ddf}_H} \\sqrt{\\frac{2}{JK}\\left ( MSTR + \\max\\left ( MSTC-MSTRC,0 \\right ) \\right )} \\tag{4.25} \\end{equation}\\] For two treatments any of the following equivalent rules could be adopted to reject the NH: \\(F_{DBM} &gt; F_{1-\\alpha,\\text{ndf},\\text{ddf}_H}\\) \\(p &lt; \\alpha\\) \\(CI_{1-alpha}\\) excludes zero For more than two treatments the first two rules are equivalent and if a significant difference is found using either of them, then one can use the confidence intervals to determine which treatment pair differences are significantly different from zero. The first F-test is called the overall F-test and the subsequent tests the treatment-pair t-tests. One only conducts treatment pair t-tests if the overall F-test yields a significant result. 4.4.4.3 Code illustrating the F-statistic, ddf and p-value for RRRC analysis, Van Dyke data Line 1 defines \\(\\alpha\\). Line 2 forms a data frame from previously calculated mean-squares. Line 3 calculates the denominator appearing in Equation (4.18). Line 4 computes the observed value of \\(F_{DBM}\\), namely the ratio of the numerator and denominator in Equation (4.18). Line 5 sets \\(\\text{ndf}\\) to \\(I - 1\\). Line 6 computes \\(\\text{ddf}_H\\). Line 7 computes the critical value of the F-distribution \\(F_{crit}\\equiv F_{\\text{ndf},\\text{ddf}_H}\\). Line 8 calculates the p-value, using the definition Equation (4.22). Line 9 prints out the just calculated quantities. The next line uses the RJafroc function StSignificanceTesting() and the 2nd last line prints out corresponding RJafroc-computed quantities. Note the correspondences between the values just computed and those provide by RJafroc. Note that the FOM difference is not significant at the 5% level of significance as \\(p &gt; \\alpha\\). The last line shows that \\(F_{DBM}\\) does not exceed \\(F_{crit}\\). The two rules are equivalent. alpha &lt;- 0.05 retMS &lt;- data.frame(&quot;msT&quot; = msT, &quot;msR&quot; = msR, &quot;msC&quot; = msC, &quot;msTR&quot; = msTR, &quot;msTC&quot; = msTC, &quot;msRC&quot; = msRC, &quot;msTRC&quot; = msTRC) F_DBM_den &lt;- retMS$msTR+max(retMS$msTC - retMS$msTRC,0) F_DBM &lt;- retMS$msT / F_DBM_den ndf &lt;- (I-1) ddf_H &lt;- (F_DBM_den^2/retMS$msTR^2)*(I-1)*(J-1) FCrit &lt;- qf(1 - alpha, ndf, ddf_H) pValueH &lt;- 1 - pf(F_DBM, ndf, ddf_H) data.frame(&quot;F_DBM&quot; = F_DBM, &quot;ddf_H&quot;= ddf_H, &quot;pValueH&quot; = pValueH) # Line 9 #&gt; F_DBM ddf_H pValueH #&gt; 1 4.456319 15.25967 0.05166569 retRJafroc &lt;- StSignificanceTesting(dataset02, FOM = &quot;Wilcoxon&quot;, method = &quot;DBM&quot;) data.frame(&quot;F_DBM&quot; = retRJafroc$RRRC$FTests$FStat[1], &quot;ddf_H&quot;= retRJafroc$RRRC$FTests$DF[2], &quot;pValueH&quot; = retRJafroc$RRRC$FTests$p[1]) #&gt; F_DBM ddf_H pValueH #&gt; 1 4.4563187 15.259675 0.051665686 F_DBM &gt; FCrit #&gt; [1] FALSE 4.4.4.4 Code illustrating the inter-treatment confidence interval for RRRC analysis, Van Dyke data Line 1 computes the FOM matrix using function UtilFigureOfMerit. The next 9 lines compute the treatment FOM differences. The next line nDiffs (for “number of differences”) evaluates to 1, as with two treatments, there is only one difference. The next line initializes CI_DIFF_FOM_RRRC, which stands for “confidence intervals, FOM differences, for RRRC analysis”. The next 8 lines evaluate, using Equation (4.25), and prints the lower value, the mid-point and the upper value of the confidence interval. Finally, these values are compared to those yielded by RJafroc. The FOM difference is not significant, whether viewed from the point of view of the F-statistic not exceeding the critical value, the observed p-value being larger than alpha or the 95% CI for the FOM difference including zero. theta &lt;- as.matrix(UtilFigureOfMerit(dataset02, FOM = &quot;Wilcoxon&quot;)) theta_i_dot &lt;- array(dim = I) for (i in 1:I) theta_i_dot[i] &lt;- mean(theta[i,]) trtDiff &lt;- array(dim = c(I,I)) for (i1 in 1:(I-1)) { for (i2 in (i1+1):I) { trtDiff[i1,i2] &lt;- theta_i_dot[i1]- theta_i_dot[i2] } } trtDiff &lt;- trtDiff[!is.na(trtDiff)] nDiffs &lt;- I*(I-1)/2 CI_DIFF_FOM_RRRC &lt;- array(dim = c(nDiffs, 3)) for (i in 1 : nDiffs) { CI_DIFF_FOM_RRRC[i,1] &lt;- qt(alpha/2,df = ddf_H)*sqrt(2*F_DBM_den/J/K) + trtDiff[i] CI_DIFF_FOM_RRRC[i,2] &lt;- trtDiff[i] CI_DIFF_FOM_RRRC[i,3] &lt;- qt(1-alpha/2,df = ddf_H)*sqrt(2*F_DBM_den/J/K) + trtDiff[i] print(data.frame(&quot;Lower&quot; = CI_DIFF_FOM_RRRC[i,1], &quot;Mid&quot; = CI_DIFF_FOM_RRRC[i,2], &quot;Upper&quot; = CI_DIFF_FOM_RRRC[i,3])) } #&gt; Lower Mid Upper #&gt; 1 -0.087959499 -0.043800322 0.00035885444 data.frame(&quot;Lower&quot; = retRJafroc$RRRC$ciDiffTrt[1,&quot;CILower&quot;], &quot;Mid&quot; = retRJafroc$RRRC$ciDiffTrt[1,&quot;Estimate&quot;], &quot;Upper&quot; = retRJafroc$RRRC$ciDiffTrt[1,&quot;CIUpper&quot;]) #&gt; Lower Mid Upper #&gt; 1 -0.087959499 -0.043800322 0.00035885444 4.5 Sample size estimation for random-reader random-case generalization 4.5.1 The non-centrality parameter In the significance-testing procedure just described, the relevant distribution was that of the F-statistic when the NH is true, Equation (4.20). For sample size estimation, one needs to know the distribution of the statistic when the NH is false. In the latter condition (i.e., the AH) the observed F-statistic, defined by Equation (4.15), is distributed as a non-central F-distribution \\(F_{\\text{ndf},{\\text{ddf}}_H,\\Delta}\\) with non-centrality parameter \\(\\Delta\\): \\[\\begin{equation} F_{DBM|AH} \\sim F_{\\text{ndf},ddf_H,\\Delta} \\tag{4.26} \\end{equation}\\] The non-centrality parameter \\(\\Delta\\) is defined, compare (Hillis and Berbaum 2004) Eqn. 6, by: \\[\\begin{equation*} \\Delta=\\frac{JK\\sigma_{\\tau}^2}{\\sigma_{\\epsilon}^2+K\\sigma_{\\tau R}^2+J\\sigma_{\\tau C}^2} \\end{equation*}\\] The parameters \\(\\sigma_{\\tau}^2\\), \\(\\sigma_{\\tau R}^2\\) and \\(\\sigma_{\\tau C}^2\\) appearing in this equation are identical to three of the six variances describing the DBM model, Equation (4.4). The estimates of \\(\\sigma_{\\tau R}^2\\) and/or \\(\\sigma_{\\tau C}^2\\) can turn out to be negative (if either of these parameters is close to zero, an estimate from a small pilot study can be negative). To avoid a possibly negative denominator, (Hillis and Berbaum 2004) suggest the following modifications (see sentence following Eqn. 4 in cited paper): \\[\\begin{equation} \\Delta=\\frac{JK\\sigma_{\\tau}^2}{\\sigma_{\\epsilon}^2+\\max(K\\sigma_{\\tau R}^2,0)+\\max(J\\sigma_{\\tau C}^2,0)} \\tag{4.27} \\end{equation}\\] The observed effect size \\(d\\), a realization of a random variable, is defined by (the bullet represents an average over the reader index): \\[\\begin{equation} d=\\theta_{1\\bullet}-\\theta_{2\\bullet} \\tag{4.28} \\end{equation}\\] For two treatments, since the individual treatment effects must be the negatives of each other (because they sum to zero, see (4.5)), it follows that: \\[\\begin{equation} \\sigma_{\\tau}^2=\\frac{d^2}{2} \\tag{4.29} \\end{equation}\\] Therefore, for two treatments the numerator of the expression for \\(\\Delta\\) is \\(JKd^2/2\\). Dividing numerator and denominator of Equation (4.27) by \\(K\\), one gets the final expression for \\(\\Delta\\), as coded in RJafroc, namely: \\[\\begin{equation} \\Delta=\\frac{Jd^2/2}{\\max(\\sigma_{\\tau R}^2,0)+(\\sigma_{\\epsilon}^2+\\max(J\\sigma_{\\tau C}^2,0))/K} \\tag{4.30} \\end{equation}\\] The variances, \\(\\sigma_{\\tau}^2\\), \\(\\sigma_{\\tau R}^2\\) and \\(\\sigma_{\\tau C}^2\\), appearing in Equation (4.30), can be calculated from the observed mean squares using the following equations, see (Hillis and Berbaum 2004) Eqn. 4, \\[\\begin{equation} \\left.\\begin{array}{rl} \\sigma_{\\epsilon}^2&amp;={\\text{MSTRC}}^*\\\\[1em] \\sigma_{\\tau R}^2&amp;=\\displaystyle\\frac{{\\text{MSTR}}^*-{\\text{MSTRC}}^*}{K^*}\\\\[1em] \\sigma_{\\tau C}^2&amp;=\\displaystyle\\frac{{\\text{MSTC}}^*-{\\text{MSTRC}}^*}{J^*} \\end{array}\\right\\} \\tag{4.31} \\end{equation}\\] Here the asterisk is used to (consistently) denote quantities, including the mean squares, pertaining to the pilot study. In particular, \\(J^*\\) and \\(K^*\\) denote the numbers of readers and cases, respectively, in the pilot study, while \\(J\\) and \\(K\\), appearing elsewhere, for example in Equation (4.30), are the corresponding numbers for the planned or pivotal study. The three variances, determined from the pilot study via Equation (4.31), are assumed to apply unchanged to the pivotal study (as they are sample-size independent parameters of the DBM model). 4.5.2 The denominator degrees of freedom (The numerator degrees of freedom of the non-central \\(F\\) distribution is always unity.) It remains to calculate the appropriate denominator degrees of freedom for the pivotal study. This is denoted \\(df_2\\), to distinguish it from \\(ddf_H\\), where the latter applies to the pilot study as in Equation (4.19). The starting point is Equation (4.19) with the left hand side replaced by \\(df_2\\), and with the emphasis that all quantities appearing in it apply to the pivotal study. The mean squares appearing in Equation (4.19) can be related to the variances by an equation analogous to Equation (4.31), except that, again, all quantities in it apply to the pivotal study (note the absence of asterisks): \\[\\begin{equation} \\left.\\begin{array}{rl} \\sigma_{\\epsilon}^2&amp;=MSTRC\\\\[1em] \\sigma_{\\tau R}^2&amp;=\\displaystyle\\frac{MSTR-MSTRC}{K}\\\\[1em] \\sigma_{\\tau C}^2&amp;=\\displaystyle\\frac{MSTC-MSTRC}{J} \\end{array}\\right\\} \\tag{4.32} \\end{equation}\\] Substituting from Equation (4.32) into Equation (4.19) with the left hand side replaced by \\(df_2\\), and dividing numerator and denominator by \\(K^2\\), one has the final expression as coded in RJafroc: \\[\\begin{equation} df_2 = \\frac{(\\max(\\sigma_{\\tau R}^2,0)+(\\max(J\\sigma_{\\tau C}^2,0)+\\sigma_{\\epsilon}^2)/K)^2}{(\\max(\\sigma_{\\tau R}^2,0)+\\sigma_{\\epsilon}^2/K)^2}(J-1) \\tag{4.33} \\end{equation}\\] 4.5.3 Example of sample size estimation, RRRC generalization The Van Dyke dataset is regarded as a pilot study. In the first block of code function StSignificanceTesting() is used to get the DBM variances (i.e., VarTR = \\(\\sigma_{\\tau R}^2\\), etc.) and the effect size \\(d\\). rocData &lt;- dataset02 # select Van Dyke dataset retDbm &lt;- StSignificanceTesting(dataset = rocData, FOM = &quot;Wilcoxon&quot;, method = &quot;DBM&quot;) VarTR &lt;- retDbm$ANOVA$VarCom[&quot;VarTR&quot;,&quot;Estimates&quot;] VarTC &lt;- retDbm$ANOVA$VarCom[&quot;VarTC&quot;,&quot;Estimates&quot;] VarErr &lt;- retDbm$ANOVA$VarCom[&quot;VarErr&quot;,&quot;Estimates&quot;] d &lt;- retDbm$FOMs$trtMeanDiffs[&quot;trt0-trt1&quot;,&quot;Estimate&quot;] The observed effect size is -0.04380032. The sign is negative as the reader-averaged second modality has greater FOM than the first. The next code block shows implementation of the RRRC formulae just presented. The values of \\(J\\) and \\(K\\) were preselected to achieve 80% power, as verified from the final line of the output. #RRRC J &lt;- 10; K &lt;- 163 den &lt;- max(VarTR, 0) + (VarErr + J * max(VarTC, 0)) / K deltaRRRC &lt;- (d^2 * J/2) / den df2 &lt;- den^2 * (J - 1) / (max(VarTR, 0) + VarErr / K)^2 fvalueRRRC &lt;- qf(1 - alpha, 1, df2) Power &lt;- 1-pf(fvalueRRRC, 1, df2, ncp = deltaRRRC) data.frame(&quot;J&quot;= J, &quot;K&quot; = K, &quot;fvalueRRRC&quot; = fvalueRRRC, &quot;df2&quot; = df2, &quot;deltaRRRC&quot; = deltaRRRC, &quot;PowerRRRC&quot; = Power) #&gt; J K fvalueRRRC df2 deltaRRRC PowerRRRC #&gt; 1 10 163 3.9930236 63.137871 8.1269825 0.80156249 4.6 Significance testing and sample size estimation for fixed-reader random-case generalization The extension to FRRC generalization is as follows. One sets \\(\\sigma_R^2 = 0\\) and \\(\\sigma_{\\tau R}^2 = 0\\) in the DBM model (4.4). The F-statistic for testing the NH and its distribution under the NH is: \\[\\begin{equation} F=\\frac{\\text{MST}}{\\text{MSTC}} \\sim F_{I-1,(I-1)(K-1)} \\tag{4.34} \\end{equation}\\] The NH is rejected if the observed value of \\(F\\) exceeds the critical value defined by \\(F_{\\alpha, I-1,(I-1)(K-1)}\\). For two modalities the denominator degrees of freedom is \\(df_2 = K-1\\). The expression for the non-centrality parameter follows from (4.30) upon setting \\(\\sigma_{\\tau R}^2 = 0\\). \\[\\begin{equation} \\Delta=\\frac{Jd^2/2}{(\\sigma_{\\epsilon}^2+\\max(J\\sigma_{\\tau C}^2,0))/K} \\tag{4.35} \\end{equation}\\] These equations are coded in the following code-chunk: #FRRC # set VarTC = 0 in RRRC formulae J &lt;- 10; K &lt;- 133 den &lt;- (VarErr + J * max(VarTC, 0)) / K deltaFRRC &lt;- (d^2 * J/2) / den df2FRRC &lt;- K - 1 fvalueFRRC &lt;- qf(1 - alpha, 1, df2FRRC) powerFRRC &lt;- pf(fvalueFRRC, 1, df2FRRC, ncp = deltaFRRC, FALSE) data.frame(&quot;J&quot;= J, &quot;K&quot; = K, &quot;fvalueFRRC&quot; = fvalueFRRC, &quot;df2&quot; = df2FRRC, &quot;deltaFRRC&quot; = deltaFRRC, &quot;powerFRRC&quot; = powerFRRC) #&gt; J K fvalueFRRC df2 deltaFRRC powerFRRC #&gt; 1 10 133 3.912875 132 7.9873835 0.80111671 4.7 Significance testing and sample size estimation for random-reader fixed-case generalization The extension to RRFC generalization is as follows. One sets \\(\\sigma_C^2 = 0\\) and \\(\\sigma_{\\tau C}^2 = 0\\) in the DBM model (4.4). The F-statistic for testing the NH and its distribution under the NH is: \\[\\begin{equation} F=\\frac{\\text{MST}}{\\text{MSTR}} \\sim F_{I-1,(I-1)(J-1)} \\tag{4.36} \\end{equation}\\] The NH is rejected if the observed value of \\(F\\) exceeds the critical value defined by \\(F_{\\alpha, I-1,(I-1)(J-1)}\\). For two modalities the denominator degrees of freedom is \\(df_2 = J-1\\). The expression for the non-centrality parameter follows from (4.30) upon setting \\(\\sigma_{\\tau C}^2 = 0\\). \\[\\begin{equation} \\Delta=\\frac{Jd^2/2}{\\max(\\sigma_{\\tau R}^2,0)+\\sigma_{\\epsilon}^2/K} \\tag{4.37} \\end{equation}\\] These equations are coded in the following code-chunk: #RRFC # set VarTR = 0 in RRRC formulae J &lt;- 10; K &lt;- 53 den &lt;- max(VarTR, 0) + VarErr/K deltaRRFC &lt;- (d^2 * J/2) / den df2RRFC &lt;- J - 1 fvalueRRFC &lt;- qf(1 - alpha, 1, df2RRFC) powerRRFC &lt;- pf(fvalueRRFC, 1, df2RRFC, ncp = deltaRRFC, FALSE) data.frame(&quot;J&quot;= J, &quot;K&quot; = K, &quot;fvalueRRFC&quot; = fvalueRRFC, &quot;df2&quot; = df2RRFC, &quot;deltaRRFC&quot; = deltaRRFC, &quot;powerRRFC&quot; = powerRRFC) #&gt; J K fvalueRRFC df2 deltaRRFC powerRRFC #&gt; 1 10 53 5.117355 9 10.048716 0.80496663 It is evident that for this dataset, for 10 readers, the numbers of cases needed for 80% power is largest (163) for RRRC and least for RRFC (53). For all three analyses, the expectation of 80% power is met - the numbers of cases and readers were deliberately chosen to achieve close to 80% statistical power. 4.8 Summary TBA This chapter has detailed analysis of MRMC ROC data using the DBM method. A reason for the level of detail is that almost all of the material carries over to other data collection paradigms, and a thorough understanding of the relatively simple ROC paradigm data is helpful to understanding the more complex ones. DBM has been used in several hundred ROC studies (Prof. Kevin Berbaum, private communication ca. 2010). While the method allows generalization of a study finding, e.g., rejection of the NH, to the population of readers and cases, I believe this is sometimes taken too literally. If a study is done at a single hospital, then the radiologists tend to be more homogenous as compared to sampling radiologists from different hospitals. This is because close interactions between radiologists at a hospital tend to homogenize reading styles and performance. A similar issue applies to patient characteristics, which are also expected to vary more between different geographical locations than within a given location served by the hospital. This means is that single hospital study based p-values may tend to be biased downwards, declaring differences that may not be replicable if a wider sampling “net” were used using the same sample size. The price paid for a wider sampling net is that one must use more readers and cases to achieve the same sensitivity to genuine treatment effects, i.e., statistical power (i.e., there is no “free-lunch”). A third MRMC ROC method, due to Clarkson, Kupinski and Barrett19,20, implemented in open-source JAVA software by Gallas and colleagues22,44 (http://didsr.github.io/iMRMC/) is available on the web. Clarkson et al19,20 provide a probabilistic rationale for the DBM model, provided the figure of merit is the empirical \\(AUC\\). The method is elegant but it is only applicable as long as one is using the empirical AUC as the figure of merit (FOM) for quantifying observer performance. In contrast the DBM approach outlined in this chapter, and the approach outlined in the following chapter, are applicable to any scalar FOM. Broader applicability ensures that significance-testing methods described in this, and the following chapter, apply to other ROC FOMs, such as binormal model or other fitted AUCs, and more importantly, to other observer performance paradigms, such as free-response ROC paradigm. An advantage of the Clarkson et al. approach is that it predicts truth-state dependence of the variance components. One knows from modeling ROC data that diseased cases tend to have greater variance than non-diseased ones, and there is no reason to suspect that similar differences do not exist between the variance components. Testing validity of an analysis method via simulation testing is only as good as the simulator used to generate the datasets, and this is where current research is at a bottleneck. The simulator plays a central role in ROC analysis. In my opinion this is not widely appreciated. In contrast, simulators are taken very seriously in other disciplines, such as cosmology, high-energy physics and weather forecasting. The simulator used to validate3 DBM is that proposed by Roe and Metz39 in 1997. This simulator has several shortcomings. (a) It assumes that the ratings are distributed like an equal-variance binormal model, which is not true for most clinical datasets (recall that the b-parameter of the binormal model is usually less than one). Work extending this simulator to unequal variance has been published3. (b) It does not take into account that some lesions are not visible, which is the basis of the contaminated binormal model (CBM). A CBM model based simulator would use equal variance distributions with the difference that the distribution for diseased cases would be a mixture distribution with two peaks. The radiological search model (RSM) of free-response data, Chapter 16 &amp;17 also implies a mixture distribution for diseased cases, and it goes farther, as it predicts some cases yield no z-samples, which means they will always be rated in the lowest bin no matter how low the reporting threshold. Both CBM and RSM account for truth dependence by accounting for the underlying perceptual process. (c) The Roe-Metz simulator is out dated; the parameter values are based on datasets then available (prior to 1997). Medical imaging technology has changed substantially in the intervening decades. d Finally, the methodology used to arrive at the proposed parameter values is not clearly described. Needed is a more realistic simulator, incorporating knowledge from alternative ROC models and paradigms that is calibrated, by a clearly defined method, to current datasets. Since ROC studies in medical imaging have serious health-care related consequences, no method should be used unless it has been thoroughly validated. Much work still remains to be done in proper simulator design, on which validation is dependent. 4.9 Things for me to think about 4.9.1 Expected values of mean squares Assuming no replications the expected mean squares are as follows, Table Table 4.1; understanding how this table is derived, would lead me outside my expertise and the scope of this book; suffice to say that these are unconstrained estimates (as summarized in the quotation above) which are different from the constrained estimates appearing in the original DBM publication (Dorfman, Berbaum, and Metz 1992), Table 9.2; the differences between these two types of estimates is summarized in (Dorfman, Berbaum, and Lenth 1995). For reference, Table 9.3 is the table published in the most recent paper that I am aware of (Hillis 2014). All three tables are different! In this chapter I will stick to Table Table 4.1 for the subsequent development. Table 9.1 Unconstrained expected values of mean-squares, as in (Dorfman, Berbaum, and Lenth 1995) Source df E(MS) T (I-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(K\\sigma_{\\tau R}^{2}\\) + \\(J\\sigma_{\\tau C}^{2}\\) + \\(JK\\sigma_{\\tau}^{2}\\) R (J-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) + \\(IK\\sigma_{R}^{2}\\) + \\(K\\sigma_{\\tau R}^{2}\\) C (K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) + \\(IJ\\sigma_{C}^{2}\\) + \\(J\\sigma_{\\tau C}^{2}\\) TR (I-1)(J-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(K\\sigma_{\\tau R}^{2}\\) TC (I-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(J\\sigma_{\\tau C}^{2}\\) RC (J-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) TRC (I-1)(J-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) \\(\\epsilon\\) \\(N-1=0\\) \\(\\sigma_{\\epsilon}^{2}\\) Table 9.2 Constrained expected values of mean-squares, as in (Dorfman, Berbaum, and Metz 1992) Source df E(MS) T (I-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(K\\sigma_{\\tau R}^{2}\\) + \\(J\\sigma_{\\tau C}^{2}\\) + \\(JK\\sigma_{\\tau}^{2}\\) R (J-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) + \\(IK\\sigma_{R}^{2}\\) C (K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) + \\(IJ\\sigma_{C}^{2}\\) TR (I-1)(J-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(K\\sigma_{\\tau R}^{2}\\) TC (I-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(J\\sigma_{\\tau C}^{2}\\) RC (J-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) TRC (I-1)(J-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) \\(\\epsilon\\) 0 \\(\\sigma_{\\epsilon}^{2}\\) Table 9.3 As in Hillis “marginal-means ANOVA paper” (Hillis 2014) Source df E(MS) T (I-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(K\\sigma_{\\tau R}^{2}\\) + \\(J\\sigma_{\\tau C}^{2}\\) + \\(JK\\sigma_{\\tau}^{2}\\) R (J-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) + \\(IK\\sigma_{R}^{2}\\) + \\(K\\sigma_{\\tau R}^{2}\\) C (K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) + \\(IJ\\sigma_{C}^{2}\\) + \\(J\\sigma_{\\tau C}^{2}\\) TR (I-1)(J-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(K\\sigma_{\\tau R}^{2}\\) TC (I-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(J\\sigma_{\\tau C}^{2}\\) RC (J-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) + \\(I\\sigma_{RC}^{2}\\) TRC (I-1)(J-1)(K-1) \\(\\sigma_{\\epsilon}^{2}\\) + \\(\\sigma_{\\tau RC}^{2}\\) \\(\\epsilon\\) 0 \\(\\sigma_{\\epsilon}^{2}\\) 4.10 Chapter References REFERENCES "],["dbm-analysis-special-cases.html", "Chapter 5 DBM method special cases 5.1 TBA How much finished 5.2 Fixed-reader random-case (FRRC) analysis 5.3 Random-reader fixed-case (RRFC) analysis 5.4 Chapter References", " Chapter 5 DBM method special cases Special cases of DBM analysis are described here, namely fixed-reader random-case (FRRC), sub-special case of which is Single-reader multiple-treatment analysis, and random-reader fixed-case (RRFC). 5.1 TBA How much finished 30% 5.2 Fixed-reader random-case (FRRC) analysis The model is the same as in Eqn. (4.4) except one sets \\(\\sigma_{R}^{2}\\) = \\(\\sigma_{\\tau R}^{2}\\) = 0 in Table 4.1. The appropriate test statistic is: \\[\\begin{equation} \\frac{E\\left ( MST \\right )}{E\\left ( MSTC \\right )} = \\frac{\\sigma_{\\epsilon}^{2}+\\sigma_{\\tau RC}^{2}+J\\sigma_{\\tau C}^{2}+JK\\sigma_{\\tau}^{2}}{\\sigma_{\\epsilon}^{2}+\\sigma_{\\tau RC}^{2}+J\\sigma_{\\tau C}^{2}} \\end{equation}\\] Under the null hypothesis \\(\\sigma_{\\tau}^{2} = 0\\): \\[\\begin{equation} \\frac{E\\left ( MST \\right )}{E\\left ( MSTC \\right )} = 1 \\end{equation}\\] The F-statistic is (replacing expected with observed values): \\[\\begin{equation} F_{DBM|R}=\\frac{MST}{MSTC} \\tag{5.1} \\end{equation}\\] The observed value \\(F_{DBM|R}\\) (the Roe-Metz notation (Roe and Metz 1997b) is used which indicates that the factor appearing to the right of the vertical bar is regarded as fixed) is distributed as an F-statistic with \\(\\text{ndf}\\) = \\(I – 1\\) and \\(ddf = (I-1)(K-1)\\); the degrees of freedom follow from the rows labeled \\(T\\) and \\(TC\\) in TBA Table Table 4.1. Therefore, the distribution of the observed value is (no Satterthwaite approximation needed this time as both numerator and denominator are simple mean-squares): \\[\\begin{equation} F_{DBM|R} \\sim F_{I-1,(I-1)(K-1)} \\tag{5.2} \\end{equation}\\] The null hypothesis is rejected if the observed value of the F- statistic exceeds the critical value: \\[\\begin{equation} F_{DBM|R} &gt; F_{1-\\alpha,I-1,(I-1)(K-1)} \\tag{5.3} \\end{equation}\\] The p-value of the test is the probability that a random sample from the F-distribution TBA (4.1) Eqn. (9.39), exceeds the observed value: \\[\\begin{equation} p=\\Pr\\left ( F&gt; F_{DBM|R} \\mid F \\sim F_{I-1,(I-1)(K-1)} \\right ) \\tag{5.4} \\end{equation}\\] The \\((1-\\alpha)\\) confidence interval for the inter-treatment reader-averaged difference FOM is given by: \\[\\begin{equation} CI_{1-\\alpha}=\\left ( \\theta_{i \\bullet} - \\theta_{i&#39; \\bullet} \\right ) \\pm t_{\\alpha/2,(I-1)(K-1)}\\sqrt{2\\frac{MST}{JK}} \\tag{5.5} \\end{equation}\\] 5.2.1 Single-reader multiple-treatment analysis With a single reader interpreting cases in two or more treatments, the reader factor must necessarily be regarded as fixed. The preceding analysis is applicable. One simply puts \\(J = 1\\) in the equations above. 5.2.1.1 Example 5: Code illustrating p-values for FRRC analysis, Van Dyke data alpha &lt;- 0.05 retMS &lt;- UtilMeanSquares(dataset02) I &lt;- length(dataset02$ratings$NL[,1,1,1]) J &lt;- length(dataset02$ratings$NL[1,,1,1]) K &lt;- length(dataset02$ratings$NL[1,1,,1]) FDbmFR &lt;- retMS$msT / retMS$msTC ndf &lt;- (I-1); ddf &lt;- (I-1)*(K-1) pValue &lt;- 1 - pf(FDbmFR, ndf, ddf) theta &lt;- as.matrix(UtilFigureOfMerit(dataset02, FOM = &quot;Wilcoxon&quot;)) theta_i_dot &lt;- array(dim = I) for (i in 1:I) theta_i_dot[i] &lt;- mean(theta[i,]) trtDiff &lt;- array(dim = c(I,I)) for (i1 in 1:(I-1)) { for (i2 in (i1+1):I) { trtDiff[i1,i2] &lt;- theta_i_dot[i1]- theta_i_dot[i2] } } trtDiff &lt;- trtDiff[!is.na(trtDiff)] nDiffs &lt;- I*(I-1)/2 std_DIFF_FOM_FRRC &lt;- sqrt(2*retMS$msTC/J/K) nDiffs &lt;- I*(I-1)/2 CI_DIFF_FOM_FRRC &lt;- array(dim = c(nDiffs, 3)) for (i in 1 : nDiffs) { CI_DIFF_FOM_FRRC[i,1] &lt;- qt(alpha/2,df = ddf)*std_DIFF_FOM_FRRC + trtDiff[i] CI_DIFF_FOM_FRRC[i,2] &lt;- trtDiff[i] CI_DIFF_FOM_FRRC[i,3] &lt;- qt(1-alpha/2,df = ddf)*std_DIFF_FOM_FRRC + trtDiff[i] print(data.frame(&quot;pValue&quot; = pValue, &quot;Lower&quot; = CI_DIFF_FOM_FRRC[i,1], &quot;Mid&quot; = CI_DIFF_FOM_FRRC[i,2], &quot;Upper&quot; = CI_DIFF_FOM_FRRC[i,3])) } #&gt; pValue Lower Mid Upper #&gt; 1 0.02103497 -0.08088303 -0.04380032 -0.006717613 retRJafroc &lt;- StSignificanceTesting(dataset02, FOM = &quot;Wilcoxon&quot;, method = &quot;DBM&quot;) data.frame(&quot;pValue&quot; = retRJafroc$FRRC$FTests$p[1], &quot;Lower&quot; = retRJafroc$FRRC$ciDiffTrt[1,&quot;CILower&quot;], &quot;Mid&quot; = retRJafroc$FRRC$ciDiffTrt[1,&quot;Estimate&quot;], &quot;Upper&quot; = retRJafroc$FRRC$ciDiffTrt[1,&quot;CIUpper&quot;]) #&gt; pValue Lower Mid Upper #&gt; 1 0.021034969 -0.080883031 -0.043800322 -0.0067176131 As one might expect, if one “freezes” reader variability, the FOM difference becomes significant, whether viewed from the point of view of the F-statistic exceeding the critical value, the observed p-value being smaller than alpha or the 95% CI for the difference FOM not including zero. 5.3 Random-reader fixed-case (RRFC) analysis The model is the same as in TBA (4.1) Eqn. (9.4) except one puts \\(\\sigma_C^2 = \\sigma_{\\tau C}^2 =0\\) in Table Table 4.1. It follows that: \\[\\begin{equation} \\frac{E(MST)}{E(MSTR)}=\\frac{\\sigma_\\epsilon^2+\\sigma_{\\tau RC}^2+K\\sigma_{\\tau R}^2+JK\\sigma_{\\tau}^2}{\\sigma_\\epsilon^2+\\sigma_{\\tau RC}^2+K\\sigma_{\\tau R}^2} \\end{equation}\\] Under the null hypothesis \\(\\sigma_\\tau^2 = 0\\): \\[\\begin{equation} \\frac{E(MST)}{E(MSTR)}=1 \\end{equation}\\] Therefore, one defines the F-statistic (replacing expected values with observed values) by: \\[\\begin{equation} F_{DBM|C} \\sim \\frac{MST}{MSTR} \\tag{5.6} \\end{equation}\\] The observed value \\(F_{DBM|C}\\) is distributed as an F-statistic with \\(ndf = I – 1\\) and \\(ddf = (I-1)(J-1)\\), see rows labeled \\(T\\) and \\(TR\\) in Table Table 4.1. \\[\\begin{equation} F_{DBM|C} \\sim F_{I-1,(I-1)(J-1))} \\tag{5.7} \\end{equation}\\] The null hypothesis is rejected if the observed value of the F statistic exceeds the critical value: \\[\\begin{equation} F_{DBM|C} &gt; F_{1-\\alpha,I-1,(I-1)(J-1))} \\tag{5.8} \\end{equation}\\] The p-value of the test is the probability that a random sample from the distribution exceeds the observed value: \\[\\begin{equation} p=\\Pr\\left ( F&gt;F_{DBM|C} \\mid F \\sim F_{I-1,(I-1)(J-1)} \\right ) \\tag{5.9} \\end{equation}\\] The confidence interval for inter-treatment differences is given by (TBA check this): \\[\\begin{equation} CI_{1-\\alpha}=\\left ( \\theta_{i \\bullet} - \\theta_{i&#39; \\bullet} \\right ) \\pm t_{\\alpha/2,(I-1)(J-1)}\\sqrt{2\\frac{MSTR}{JK}} \\tag{5.10} \\end{equation}\\] 5.3.0.1 Example 6: Code illustrating analysis for RRFC analysis, Van Dyke data FDbmFC &lt;- retMS$msT / retMS$msTR ndf &lt;- (I-1) ddf &lt;- (I-1)*(J-1) pValue &lt;- 1 - pf(FDbmFC, ndf, ddf) nDiffs &lt;- I*(I-1)/2 CI_DIFF_FOM_RRFC &lt;- array(dim = c(nDiffs, 3)) for (i in 1 : nDiffs) { CI_DIFF_FOM_RRFC[i,1] &lt;- qt(alpha/2,df = ddf)*sqrt(2*retMS$msTR/J/K) + trtDiff[i] CI_DIFF_FOM_RRFC[i,2] &lt;- trtDiff[i] CI_DIFF_FOM_RRFC[i,3] &lt;- qt(1-alpha/2,df = ddf)*sqrt(2*retMS$msTR/J/K) + trtDiff[i] print(data.frame(&quot;pValue&quot; = pValue, &quot;Lower&quot; = CI_DIFF_FOM_RRFC[i,1], &quot;Mid&quot; = CI_DIFF_FOM_RRFC[i,2], &quot;Upper&quot; = CI_DIFF_FOM_RRFC[i,3])) } #&gt; pValue Lower Mid Upper #&gt; 1 0.041958752 -0.085020224 -0.043800322 -0.0025804202 data.frame(&quot;pValue&quot; = retRJafroc$RRFC$FTests$p[1], &quot;Lower&quot; = retRJafroc$RRFC$ciDiffTrt[1,&quot;CILower&quot;], &quot;Mid&quot; = retRJafroc$RRFC$ciDiffTrt[1,&quot;Estimate&quot;], &quot;Upper&quot; = retRJafroc$RRFC$ciDiffTrt[1,&quot;CIUpper&quot;]) #&gt; pValue Lower Mid Upper #&gt; 1 0.041958752 -0.085020224 -0.043800322 -0.0025804202 5.4 Chapter References REFERENCES "],["or-method-intro.html", "Chapter 6 Introduction to the Obuchowski-Rockette method 6.1 TBA How much finished 6.2 Locations of helper functions 6.3 Introduction 6.4 Single-reader multiple-treatment 6.5 Single-treatment multiple-reader 6.6 Multiple-reader multiple-treatment 6.7 Summary 6.8 Discussion 6.9 Appendix: Covariance and correlation 6.10 Chapter References", " Chapter 6 Introduction to the Obuchowski-Rockette method 6.1 TBA How much finished 70% 6.2 Locations of helper functions source(here(&quot;R/CH10-OR/Wilcoxon.R&quot;)) source(here(&quot;R/CH10-OR/VarCov1FomInput.R&quot;)) source(here(&quot;R/CH10-OR/VarCov1Bs.R&quot;)) source(here(&quot;R/CH10-OR/VarCov1Jk.R&quot;)) source(here(&quot;R/CH10-OR/VarCovMtrxDLStr.R&quot;)) source(here(&quot;R/CH10-OR/VarCovs.R&quot;)) 6.3 Introduction This chapter starts with a gentle introduction to the Obuchowski and Rockette method. The reason is that the method was rather opaque to me, and I suspect most non-statistician users. Part of the problem, in my opinion, is the notation, namely lack of the case-set index \\(\\{c\\}\\). While this may seem like a trivial point to statisticians, it did present a conceptual problem for me. A key difference of the Obuchowski and Rockette method from DBM is in how the error term is modeled by a non-diagonal covariance matrix. Therefore, the structure of the covariance matrix is examined in some detail. To illustrate the covariance matrix, a single reader interpreting a case-set in multiple treatments is analyzed and the results compared to that using DBM fixed-reader analysis described in previous chapters. 6.4 Single-reader multiple-treatment 6.4.1 Overview Consider a single-reader interpreting a common case-set \\(\\{c\\}\\) in multiple-treatments \\(i\\) (\\(i\\) = 1, 2, …, \\(I\\)). In the OR method one models the figure-of-merit, not the pseudovalues; indeed this is a key differences from the DBM method. The figure of merit \\(\\theta\\) is modeled as: \\[\\begin{equation} \\theta_{i\\{c\\}}=\\mu+\\tau_i+\\epsilon_{i\\{c\\}} \\tag{6.1} \\end{equation}\\] Eqn. (6.1) models the observed figure-of-merit \\(\\theta_{i\\{c\\}}\\) as a constant term \\(\\mu\\), a treatment dependent term \\(\\tau_i\\) (the treatment-effect), and a random term \\(\\epsilon_{i\\{c\\}}\\). The term \\(\\tau_i\\) has the constraint: \\[\\begin{equation} \\sum_{i=1}^{I}\\tau_i=0 \\tag{6.2} \\end{equation}\\] The left hand side of Eqn. (6.1) is the figure-of-merit \\(\\theta_i\\{c\\}\\) for treatment \\(i\\) and case-set index \\(\\{c\\}\\), where \\(c\\) = 1, 2, …, \\(C\\) denotes different independent case-sets sampled from the population, i.e., different collections of \\(K_1\\) non-diseased and \\(K_2\\) diseased cases. The case-set index is essential for clarity. Without it \\(\\theta_i\\) is a fixed quantity - the figure of merit estimate for treatment \\(i\\) - lacking an index allowing for sampling related variability. Obuchowski and Rockette define a k-index, the: \\(k^{th}\\) repetition of the study involving the same diagnostic test, reader and patient (sic)\". Needed is a case-set index rather than a repetition index. Repeating a study with the same treatment, reader and cases yields within-reader variability, when what is needed, for significance testing, is case-sampling plus within-reader variability. It is shown below that usage of the case-set index interpretation yields the same results using the DBM or the OR methods (for empirical AUC). Eqn. (6.1) has an additive random error term \\(\\epsilon_{i\\{c\\}}\\) whose sampling behavior is described by a multivariate normal distribution with an I-dimensional zero mean vector and an \\(I \\times I\\) dimensional covariance matrix \\(\\Sigma\\): \\[\\begin{equation} \\epsilon_{i\\{c\\}} \\sim N_I\\left ( \\vec{0} , \\Sigma\\right ) \\tag{6.3} \\end{equation}\\] Here \\(N_I\\) is the I-variate normal distribution (i.e., each sample yields \\(I\\) random numbers). For the single-reader model Eqn. (6.1), the covariance matrix has the following structure : \\[\\begin{equation} \\Sigma_{ii&#39;}=Cov\\left ( \\epsilon_{i\\{c\\}}, \\epsilon_{i&#39;\\{c\\}} \\right )=\\left\\{\\begin{matrix} \\text{Var} \\qquad (i=i&#39;)\\\\ Cov_1 \\qquad (i\\neq i&#39;) \\end{matrix}\\right. \\tag{6.4} \\end{equation}\\] The reason for the subscript “1” in \\(Cov_1\\) will become clear when we extend this model to multiple- treatments and multiple-readers. The \\(I \\times I\\) covariance matrix \\(\\Sigma\\) is: \\[\\begin{equation} \\Sigma= \\begin{pmatrix} \\text{Var} &amp; Cov_1 &amp; \\ldots &amp; Cov_1 &amp; Cov_1 \\\\ Cov_1 &amp; \\text{Var} &amp; \\ldots &amp;Cov_1 &amp; Cov_1 \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots \\\\ Cov_1 &amp; Cov_1 &amp; \\ldots &amp; \\text{Var} &amp; Cov_1 \\\\ Cov_1 &amp; Cov_1 &amp; \\ldots &amp; Cov_1 &amp; \\text{Var} \\end{pmatrix} \\tag{6.5} \\end{equation}\\] If \\(I\\) = 2 then \\(\\Sigma\\) is a symmetric 2 x 2 matrix, whose diagonal terms are the common variances in the two treatments (each assumed equal to \\(\\text{Var}\\)) and whose off-diagonal terms (each assumed equal to \\(Cov_1\\)) are the co-variances. With \\(I\\) = 3 one has a 3 x 3 symmetric matrix with all diagonal elements equal to \\(\\text{Var}\\) and all off-diagonal terms are equal to \\(Cov_1\\), etc. An important aspect of the Obuchowski and Rockette model is that the variances and co-variances are assumed to be treatment independent. This implies that \\(\\text{Var}\\) estimates need to be averaged over all treatments. Likewise, \\(Cov_1\\) estimates need to be averaged over all distinct treatment-treatment pairings. 1 Some elementary statistical results are presented in the Appendix. 6.4.2 Significance testing The covariance matrix is needed for significance testing. Define the mean square corresponding to the treatment effect, denoted \\(MS(T)\\), by: \\[\\begin{equation} MS(T)=\\frac{1}{I-1}\\sum_{i=1}^{I}(\\theta_i-\\theta_\\bullet)^2 \\tag{6.6} \\end{equation}\\] Unlike the previous DBM related chapters, all mean square quantities in this chapter are based on FOMs, not pseudovalues. It can be shown that under the null hypothesis that all treatments have identical performances, the test statistic \\(\\chi_{1R}\\) defined below (the \\(1R\\) subscript denotes single-reader analysis) is distributed approximately as a \\(\\chi^2\\) distribution with \\(I-1\\) degrees of freedom, i.e., \\[\\begin{equation} \\chi_{\\text{1R}} \\equiv \\frac{(I-1)MS(T)}{\\text{Var}-\\text{Cov1}} \\sim \\chi_{I-1}^{2} \\tag{6.7} \\end{equation}\\] Eqn. (6.7) is from §5.4 in (Hillis 2007) with two covariance terms “zeroed out” because they are multiplied by \\(J-1 = 0\\) (since we are restricting to \\(J=1\\)). Or equivalently, in terms of the F-distribution (Hillis et al. 2005): \\[\\begin{equation} F_{\\text{1R}} \\equiv \\frac{MS(T)}{\\text{Var}-\\text{Cov1}} \\sim F_{I-1, \\infty} \\tag{6.8} \\end{equation}\\] 6.4.3 p-value and confidence interval The p-value is the probability that a sample from the \\(F_{I-1,\\infty}\\) distribution is greater than the observed value of the test statistic, namely: \\[\\begin{equation} p\\equiv \\Pr(f&gt;F_{1R} \\mid f \\sim F_{I-1,\\infty}) \\tag{6.9} \\end{equation}\\] The \\((1-\\alpha)\\) confidence interval for the inter-treatment FOM difference is given by: \\[\\begin{equation} CI_{1-\\alpha,1R} = (\\theta_{i\\bullet} - \\theta_{i&#39;\\bullet}) \\pm t_{\\alpha/2,\\infty} \\sqrt{2(\\text{Var}-\\text{Cov1})} \\tag{6.10} \\end{equation}\\] Comparing Eqn. (6.10) to Eqn. (6.27) shows that the term \\(\\sqrt{2(\\text{Var}-\\text{Cov1})}\\) is the standard error of the inter-treatment FOM difference, whose square root is the standard deviation. The term \\(t_{\\alpha/2,\\infty}\\) is -1.96. Therefore, the confidence interval is constructed by adding and subtracting 1.96 times the standard deviation of the difference from the central value. [One has probably encountered the rule that a 95% confidence interval is plus or minus two standard deviations from the central value. The “2” comes from rounding up 1.96.] 6.4.4 Null hypothesis validation It is important to validate the significance testing method just outlined above. If the testing procedure is valid, then, when the NH is true, the procedure should reject it with probability \\(\\alpha\\). In the following, as is usual, we set \\(\\alpha = 0.05\\). set.seed(seed = 201) mu &lt;- 0.8 vc &lt;- UtilORVarComponentsFactorial(dataset02, FOM = &quot;Wilcoxon&quot;) trueVar &lt;- vc$IndividualRdr$varEachRdr[1] trueCov1 &lt;- vc$IndividualRdr$cov1EachRdr[1] sigma &lt;- matrix(c(trueVar, trueCov1, trueCov1, trueVar), ncol = 2) I &lt;- 2 S &lt;- 2000 # simulate foms for two modalities, S times # using the sampling model theta_i &lt;- t(rmvnorm(n=S, mean=c(0,0), sigma=sigma) + mu) # estimated variance covariances vc &lt;- VarCov1_FomInput(theta_i) Var &lt;- vc$Var Cov1 &lt;- vc$Cov1 # conduct NH testing reject &lt;- 0 for(s in 1:S) { MS_T &lt;- 0 for (i in 1:I) { MS_T &lt;- MS_T + (theta_i[i,s]-mean(theta_i[,s]))^2 } MS_T &lt;- MS_T/(I-1) F_1R &lt;- MS_T/(Var - Cov1) pValue &lt;- 1 - pf(F_1R, I-1, Inf) if (pValue &lt; 0.05) reject &lt;- reject + 1 } alphaObs &lt;- reject/S ## True, estimated diagonal elements = 0.000699, 0.000695 ## True, estimated off-diagonal elements = 0.000373, 0.000351 ## NH rejection fraction = 0.0515 The seed variable, set to 201 at line 1, is equivalent to the case sample index \\(c\\) in Eqn. (6.1). Different values of seed correspond to different case samples. Line 2 sets the value of \\(\\mu\\) to 0.8, the average figure of merit, appearing in Eqn. (6.1). Lines 3-4 set the values of true \\(Var\\) and true \\(Cov_1\\) to values characterizing dataset02 for reader one, as determined by function UtilORVarComponentsFactorial. Lines 5-9 initializes the covariance matrix \\(\\Sigma\\). The diagonal contains the variance and the off-diagonal contains \\(Cov_1\\). These are the true values. Lines 10-11 initializes \\(I = 2\\), the number of treatments, and \\(S = 2000\\), the number of simulations. Line 14 generates 2000 samples from the two dimensional multivariate normal distribution with zero mean vector (this is the null hypothesis) and covariance equal to \\(\\Sigma\\). Lines 16-18 computes the estimates of the means and covariances. The helper function used VarCov1_FomInput (the name stands for \\(Var\\) and \\(Cov_1\\) using FOM input) is included in the distribution. The locations of helper functions are shown in Section 6.2. Lines 21-33 performs the NH testing. It starts by setting the counter variable reject to zero. A for-loop is set up to repeat 2000 times. For each iteration line 24-28 computes the treatment mean-square MS_T. Note the use, at line 25, of the two values of \\(theta_i\\) corresponding to the s-th sample from the multivariate norrmal distribution (at line 14). Line 30 computes the F-statistic - compare to Eqn. (6.8). Line 31 computes the p-values and, if the p-value is less than \\(\\alpha = 0.05\\), line 32 increments reject by one. The observed NH rejection rate, alphaObs, is the final value of reject divided by 2000, line 34. For a valid test it is expected to be in the range (0.04, 0.06). The actual value, for the chosen value of seed, is 0.0515. 6.4.5 Application 1 Here is an application of the method to an ROC dataset, dataset02, which consists of two treatments and five readers. ds &lt;- DfExtractDataset(dataset02, rdrs = 1) fom &lt;- as.vector(unlist(UtilFigureOfMerit(ds, FOM = &quot;Wilcoxon&quot;)), mode = &quot;numeric&quot;) vc &lt;- UtilORVarComponentsFactorial(ds, FOM = &quot;Wilcoxon&quot;) Cov1 &lt;- vc$IndividualRdr$cov1EachRdr Var &lt;- vc$IndividualRdr$varEachRdr msT &lt;- vc$IndividualRdr$msTEachRdr I &lt;- length(ds$ratings$NL[,1,1,1]) chiObs &lt;- (I-1)*msT/(Var-Cov1) pval &lt;- pchisq(chiObs,I-1,lower.tail = F) ci &lt;- array(dim = 2) ci[1] &lt;- (fom[1] - fom[2]) + qt(0.025, Inf, lower.tail = F) * sqrt(2*(Var - Cov1)) ci[2] &lt;- (fom[1] - fom[2]) - qt(0.025, Inf, lower.tail = F) * sqrt(2*(Var - Cov1)) ## fom = 0.9196457 0.9478261 ## fom diff = -0.02818035 ## pval = 0.2693389 ## ci = 0.02182251 -0.07818322 We extract the data for reader 1 only, line 1, resulting in a 2-treatment single-reader dataset ds. Lines 2-3 compute the Wilcoxon figures of merit for each treatment as a row vector. Lines 4-7 computes OR treatment mean square msT, the OR variance components Var and Cov1: functionUtilORVarComponentsFactorial is used with the Wilcoxon figure of merit specified. Line 8 obtains the number of treatments, \\(I=2\\) in this example. Line 9 computes the observed chisquare statistic, chiObs. Line 10 computes the p-value, pValue, i.e., the probability that a sample from a chisquare distribution with I-1 degrees of freedom exceeds the observed value. Lines 11-13 compute the 95% confidence interval for the inter-treatment FOM difference. For this reader the two treatments are not significantly different. 6.4.6 Application 2 Here is an application of the method to an FROC dataset, dataset04, which consists of five treatments and four readers. ds &lt;- DfExtractDataset(dataset04, rdrs = 1, trts = c(4,5)) fom &lt;- as.vector(unlist(UtilFigureOfMerit(ds, FOM = &quot;wAFROC&quot;)), mode = &quot;numeric&quot;) vc &lt;- UtilORVarComponentsFactorial(ds, FOM = &quot;wAFROC&quot;) Cov1 &lt;- vc$IndividualRdr$cov1EachRdr Var &lt;- vc$IndividualRdr$varEachRdr msT &lt;- vc$IndividualRdr$msTEachRdr I &lt;- length(ds$ratings$NL[,1,1,1]) chiObs &lt;- (I-1)*msT/(Var-Cov1) pval &lt;- pchisq(chiObs,I-1,lower.tail = F) ci &lt;- array(dim = 2) ci[1] &lt;- (fom[1] - fom[2]) + qt(0.025, Inf, lower.tail = F) * sqrt(2*(Var - Cov1)) ci[2] &lt;- (fom[1] - fom[2]) - qt(0.025, Inf, lower.tail = F) * sqrt(2*(Var - Cov1)) ## fom = 0.8101333 0.7488 ## fom diff = 0.06133333 ## pval = 0.03189534 ## ci = 0.117357 0.005309652 We extract the data for reader 1 only, for treatments 4 and 5, line 1, resulting in a 2-treatment single-reader dataset ds. Lines 2-3 compute the wAFROC figures of merit for each treatment as a row vector. Lines 4-7 computes OR treatment mean square msT, the OR variance components Var and Cov1: functionUtilORVarComponentsFactorial is used with the wAFROC figure of merit specified. Line 8 obtains the number of treatments, \\(I=2\\) in this example. Line 9 computes the observed chisquare statistic, chiObs. Line 10 computes the p-value, pValue, i.e., the probability that a sample from a chisquare distribution with I-1 degrees of freedom exceeds the observed value. Lines 11-13 compute the 95% confidence interval for the inter-treatment FOM difference. For this reader the two treatments are significantly different. 6.5 Single-treatment multiple-reader 6.5.1 Overview Consider multiple readers \\(j\\) (\\(j\\) = 1, 2, …, \\(J\\)) interpreting a common case-set \\(\\{c\\}\\) in a single treatment. The OR sampling model is: \\[\\begin{equation} \\theta_{j\\{c\\}}=\\mu+R_j+\\epsilon_{j\\{c\\}} \\tag{6.11} \\end{equation}\\] The error term \\(\\epsilon_{j\\{c\\}}\\) has sampling behavior described by a multivariate normal distribution with a J-dimensional zero mean vector and a \\(J \\times J\\) dimensional covariance matrix \\(\\Sigma\\): \\[\\begin{equation} \\epsilon_{j\\{c\\}} \\sim N_J\\left ( \\vec{0} , \\Sigma\\right ) \\tag{6.12} \\end{equation}\\] The covariance matrix has the following structure: \\[\\begin{equation} \\Sigma_{jj&#39;}=Cov\\left ( \\epsilon_{j\\{c\\}}, \\epsilon_{j&#39;\\{c\\}} \\right )=\\left\\{\\begin{matrix} \\text{Var} \\qquad (j=j&#39;)\\\\ Cov_2 \\qquad (j\\neq j&#39;) \\end{matrix}\\right. \\tag{6.13} \\end{equation}\\] The reason for the subscript “2” in \\(Cov_2\\) will become clear when one extends this model to multiple- treatments and multiple-readers. The \\(J \\times J\\) covariance matrix \\(\\Sigma\\) is: \\[\\begin{equation} \\Sigma= \\begin{pmatrix} \\text{Var} &amp; Cov_2 &amp; \\ldots &amp; Cov_2 &amp; Cov_2 \\\\ Cov_2 &amp; \\text{Var} &amp; \\ldots &amp;Cov_2 &amp; Cov_2 \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots \\\\ Cov_2 &amp; Cov_2 &amp; \\ldots &amp; \\text{Var} &amp; Cov_2 \\\\ Cov_2 &amp; Cov_2 &amp; \\ldots &amp; Cov_2 &amp; \\text{Var} \\end{pmatrix} \\tag{6.14} \\end{equation}\\] The covariance matrix is estimated, as usual, by either a resampling method (jackknife of bootstrap) or, for the special case of Wilcoxon figure of merit, by the DeLong method. 6.5.2 Significance testing Unlike the seemingly analogous single-reader multiple-treatment case addressed in Section 6.4.2, the single-treatment multiple-reader case is fundamentally different. This is because reader is a random factor while treatment, in Section 6.4.2, was a fixed factor. This makes it impossible to define a null hypothesis analogous to that with the treatment factor, e.g., \\(R_1 = R_2\\), since reader is modeled as a random sample from a distribution, i.e., \\(R \\sim N(0,\\sigma_R^2)\\). 6.5.3 Special case If reader is regarded as a fixed factor significance testing between readers can be performed. The analysis presented in Section 6.4.2 is applicable, with the treatment factor replaced by the reader factor. This is appropriate, for example, when comparing two AI (artificial intelligence) algorithms. The two algorithms, each of which qualifies as a reader, are not random samples from a population of AI readers: rather they are two fixed algorithms, in the literal sense. 6.6 Multiple-reader multiple-treatment The previous sections introduced Obuchowski and Rockette method using single reader and single treatment examples. This section extends it to multiple-readers interpreting a common case-set in multiple-treatments (MRMC). The extension is, in principle, fairly straightforward. Compared to Eqn. (6.1), one needs an additional \\(j\\) index to denote reader dependence of the figure of merit, and additional terms to model reader and treatment-reader variability, and the error term needs to be modified to account for the additional random reader factor. The Obuchowski and Rockette model for fully paired multiple-reader multiple-treatment interpretations is: \\[\\begin{equation} \\theta_{ij\\{c\\}}=\\mu+\\tau_i+R_j+(\\tau R)_{ij}+\\epsilon_{ij\\{c\\}} \\tag{6.15} \\end{equation}\\] The fixed treatment effect \\(\\tau_i\\) is subject to the usual constraint, Eqn. (6.2). The first two terms on the right hand side of Eqn. (6.15) have their usual meanings: a constant term \\(\\mu\\) representing performance averaged over treatments and readers, and a treatment effect \\(\\tau_i\\) (\\(i\\) = 1,2, …, \\(I\\)). The next two terms are, by assumption, mutually independent random samples specified as follows: \\(R_j\\) denotes the random treatment-independent figure-of-merit contribution of reader \\(j\\) (\\(j\\) = 1,2, …, \\(J\\)), modeled by a zero-mean normal distribution with variance \\(\\sigma_R^2\\); \\((\\tau R)_{ij}\\) denotes the treatment-dependent random contribution of reader \\(j\\) in treatment \\(i\\), modeled as a sample from a zero-mean normal distribution with variance \\(\\sigma_{\\tau R}^2\\). Summarizing: \\[\\begin{equation} \\left. \\begin{aligned} \\begin{matrix} R_j \\sim N(0,\\sigma_R^2)\\\\ {\\tau R} \\sim N(0,\\sigma_{\\tau R}^2) \\end{matrix} \\end{aligned} \\right \\} \\tag{6.16} \\end{equation}\\] For a single dataset \\(c\\) = 1. An estimate of \\(\\mu\\) follows from averaging over the \\(i\\) and \\(j\\) indices (the averages over the random terms are zeroes): \\[\\begin{equation} \\mu = \\theta_{\\bullet \\bullet \\{1\\}} \\tag{6.17} \\end{equation}\\] Averaging over the j index and performing a subtraction yields an estimate of \\(\\tau_i\\): \\[\\begin{equation} \\tau_i = \\theta_{i \\bullet \\{1\\}} - \\theta_{\\bullet \\bullet \\{1\\}} \\tag{6.18} \\end{equation}\\] The \\(\\tau_i\\) estimates obey the constraint Eqn. (6.2). For example, with two treatments, the values of \\(\\tau_i\\) must be the negatives of each other: \\(\\tau_1=-\\tau_2\\). The error term on the right hand side of Eqn. (6.15) is more complex than the corresponding DBM model error term. Obuchowski and Rockette model this term with a multivariate normal distribution with a length \\((IJ)\\) zero-mean vector and a \\((IJ \\times IJ)\\) dimensional covariance matrix \\(\\Sigma\\). In other words, \\[\\begin{equation} \\epsilon_{ij\\{c\\}} \\sim N_{IJ}(\\vec{0},\\Sigma) \\tag{6.19} \\end{equation}\\] Here \\(N_{IJ}\\) is the \\(IJ\\)-variate normal distribution, \\(\\vec{0}\\) is the zero-vector with length \\(IJ\\), denoting the vector-mean of the distribution. The counterpart of the variance, namely the covariance matrix \\(\\Sigma\\) of the distribution, is defined by 4 parameters, \\(\\text{Var}, \\text{Cov1}, \\text{Cov2}, \\text{Cov3}\\), defined as follows: \\[\\begin{equation} Cov(\\epsilon_{ij\\{c\\}},\\epsilon_{i&#39;j&#39;\\{c\\}}) = \\left\\{\\begin{matrix} \\text{Var} \\; (i=i&#39;,j=j&#39;) \\\\ \\text{Cov1} \\; (i\\ne i&#39;,j=j&#39;)\\\\ \\text{Cov2} \\; (i = i&#39;,j \\ne j&#39;)\\\\ \\text{Cov3} \\; (i\\ne i&#39;,j \\ne j&#39;) \\end{matrix}\\right\\} \\tag{6.20} \\end{equation}\\] Apart from fixed effects, the model implied by Eqn. (6.15) and Eqn. (6.20) contains 6 parameters: \\[\\sigma_R^2,\\sigma_{\\tau R}^2,\\text{Var}, \\text{Cov1}, \\text{Cov2}, \\text{Cov3}\\] This is the same number of variance component parameters as in the DBM model, which should not be a surprise since one is modeling the data with equivalent models. The Obuchowski and Rockette model Eqn. (6.15) “looks” simpler because four covariance terms are encapsulated in the \\(\\epsilon\\) term. As with the singe-reader multiple-treatment model, the covariance matrix is assumed to be independent of treatment or reader. It is implicit in the Obuchowski-Rockette model that the \\(Var\\), \\(\\text{Cov1}\\), \\(Cov_2\\), and \\(Cov_3\\) estimates are averaged over all applicable treatment-reader combinations. 6.6.1 Structure of the covariance matrix To understand the structure of this matrix, recall that the diagonal elements of a square covariance matrix are the variances and the off-diagonal elements are covariances. With two indices \\(ij\\) one can still imagine a square matrix where the position along each dimension is labeled by a pair of indices \\(ij\\). One \\(ij\\) pair corresponds to the horizontal direction, and the other \\(ij\\) pair corresponds to the vertical direction. To visualize this let consider the simpler situation of two treatments (\\(I = 2\\)) and three readers (\\(J = 3\\)). The resulting \\(6 \\times 6\\) covariance matrix would look like this: \\[ \\Sigma= \\begin{bmatrix} (11,11) &amp; (12,11) &amp; (13,11) &amp; (21,11) &amp; (22,11) &amp; (23,11) \\\\ &amp; (12,12) &amp; (13,12) &amp; (21,12) &amp; (22,12) &amp; (23,12) \\\\ &amp; &amp; (13,13) &amp; (21,13) &amp; (22,13) &amp; (23,13) \\\\ &amp; &amp; &amp; (21,21) &amp; (22,21) &amp; (23,21) \\\\ &amp; &amp; &amp; &amp; (22,22) &amp; (23,22) \\\\ &amp; &amp; &amp; &amp; &amp; (23,23) \\end{bmatrix} \\] Shown in each cell of the matrix is a pair of ij-values, serving as column indices, followed by a pair of ij-values serving as row indices, and a comma separates the pairs. For example, the first column is labeled by (11,xx), where xx depends on the row. The second column is labeled (12,xx), the third column is labeled (13,xx), and the remaining columns are successively labeled (21,xx), (22,xx) and (23,xx). Likewise, the first row is labeled by (yy,11), where yy depends on the column. The following rows are labeled (yy,12), (yy,13), (yy,21), (yy,22)and (yy,23). Note that the reader index increments faster than the treatment index. The diagonal elements are evidently those cells where the row and column index-pairs are equal. These are (11,11), (12,12), (13,13), (21,21), (22,22) and (23,23). According to Eqn. (6.20) these cells represent \\(Var\\). \\[ \\Sigma= \\begin{bmatrix} Var &amp; (12,11) &amp; (13,11) &amp; (21,11) &amp; (22,11) &amp; (23,11) \\\\ &amp; Var &amp; (13,12) &amp; (21,12) &amp; (22,12) &amp; (23,12) \\\\ &amp; &amp; Var &amp; (21,13) &amp; (22,13) &amp; (23,13) \\\\ &amp; &amp; &amp; Var &amp; (22,21) &amp; (23,21) \\\\ &amp; &amp; &amp; &amp; Var &amp; (23,22) \\\\ &amp; &amp; &amp; &amp; &amp; Var \\end{bmatrix} \\] According to Eqn. (6.20) cells with different treatment indices but identical reader indices represent \\(\\text{Cov1}\\). As an example, cell (21,11) has the same reader indices, namely reader 1, but different treatment indices, namely 2 and 1, so it is \\(\\text{Cov1}\\): \\[ \\Sigma= \\begin{bmatrix} \\text{Var} &amp; (12,11) &amp; (13,11) &amp; \\text{Cov1} &amp; (22,11) &amp; (23,11) \\\\ &amp; \\text{Var} &amp; (13,12) &amp; (21,12) &amp; \\text{Cov1} &amp; (23,12) \\\\ &amp; &amp; \\text{Var} &amp; (21,13) &amp; (22,13) &amp; \\text{Cov1} \\\\ &amp; &amp; &amp; \\text{Var} &amp; (22,21) &amp; (23,21) \\\\ &amp; &amp; &amp; &amp; \\text{Var} &amp; (23,22) \\\\ &amp; &amp; &amp; &amp; &amp; \\text{Var} \\end{bmatrix} \\] Similarly, cells with identical treatment indices but different reader indices represent \\(Cov_2\\): \\[ \\Sigma= \\begin{bmatrix} Var &amp; Cov_2 &amp; Cov_2 &amp; \\text{Cov1} &amp; (22,11) &amp; (23,11) \\\\ &amp; \\text{Var} &amp; Cov_2 &amp; (21,12) &amp; \\text{Cov1} &amp; (23,12) \\\\ &amp; &amp; \\text{Var} &amp; (21,13) &amp; (22,13) &amp; \\text{Cov1} \\\\ &amp; &amp; &amp; \\text{Var} &amp; Cov_2 &amp; Cov_2 \\\\ &amp; &amp; &amp; &amp; \\text{Var} &amp; Cov_2 \\\\ &amp; &amp; &amp; &amp; &amp; \\text{Var} \\end{bmatrix} \\] Finally, cells with different treatment indices and different reader indices represent \\(Cov_3\\): \\[ \\Sigma= \\begin{bmatrix} \\text{Var} &amp; Cov_2 &amp; Cov_2 &amp; \\text{Cov1} &amp; Cov_3 &amp; Cov_3 \\\\ &amp; \\text{Var} &amp; Cov_2 &amp; Cov_3 &amp; \\text{Cov1} &amp; Cov_3 \\\\ &amp; &amp; \\text{Var} &amp; Cov_3 &amp; Cov_3 &amp; \\text{Cov1} \\\\ &amp; &amp; &amp; \\text{Var} &amp; Cov_2 &amp; Cov_2 \\\\ &amp; &amp; &amp; &amp; \\text{Var} &amp; Cov_2 \\\\ &amp; &amp; &amp; &amp; &amp; \\text{Var} \\end{bmatrix} \\] To understand these terms consider how they might be estimated. Suppose one had the luxury of repeating the study with different case-sets, c = 1, 2, …, C. Then the variance \\(\\text{Var}\\) is estimated as follows: \\[\\begin{equation} \\text{Var}= \\left \\langle \\frac{1}{C-1}\\sum_{c=1}^{C} (\\theta_{ij\\{c\\}}-\\theta_{ij\\{\\bullet\\}})^2 \\right \\rangle_{ij} \\epsilon_{ij\\{c\\}} \\sim N_{IJ}(\\vec{0},\\Sigma) \\tag{6.21} \\end{equation}\\] Of course, in practice one would use the bootstrap or the jackknife as a stand-in for the c-index (with the understanding that if the jackknife is used, then a variance inflation factor has to be included on the right hand side of Eqn. (6.21). Notice that the left-hand-side of Eqn. (6.21) lacks treatment or reader indices. This is because implicit in the notation is averaging the observed variances over all treatments and readers, as implied by \\(\\left \\langle \\right \\rangle _{ij}\\). Likewise, the covariance terms are estimated as follows: \\[\\begin{equation} Cov=\\left\\{\\begin{matrix} \\text{Cov1}=\\left \\langle \\frac{1}{C-1}\\sum_{c=1}^{C} (\\theta_{ij\\{c\\}}-\\theta_{ij\\{\\bullet\\}}) (\\theta_{i&#39;j\\{c\\}}-\\theta_{i&#39;j\\{\\bullet\\}}) \\right \\rangle_{ii&#39;,jj}\\\\ Cov_2=\\left \\langle \\frac{1}{C-1}\\sum_{c=1}^{C} (\\theta_{ij\\{c\\}}-\\theta_{ij\\{\\bullet\\}}) (\\theta_{ij&#39;\\{c\\}}-\\theta_{ij&#39;\\{\\bullet\\}}) \\right \\rangle_{ii,jj&#39;}\\\\ Cov_3=\\left \\langle \\frac{1}{C-1}\\sum_{c=1}^{C} (\\theta_{ij\\{c\\}}-\\theta_{ij\\{\\bullet\\}}) (\\theta_{i&#39;j&#39;\\{c\\}}-\\theta_{i&#39;j&#39;\\{\\bullet\\}}) \\right \\rangle_{ii&#39;,jj&#39;} \\end{matrix}\\right. \\tag{6.22} \\end{equation}\\] In Eqn. (6.22) the convention is that primed and unprimed variables are always different. Since there are no treatment and reader dependencies on the left-hand-sides of the above equations, one averages the estimates as follows: For \\(\\text{Cov1}\\) one averages over all combinations of different treatments and same readers, as denoted by \\(\\left \\langle \\right \\rangle_{ii&#39;,jj}\\). For \\(Cov_2\\) one averages over all combinations of same treatment and different readers, as denoted by \\(\\left \\langle \\right \\rangle_{ii,jj&#39;}\\). For \\(Cov_3\\) one averages over all combinations of different treatments and different readers, as denoted by \\(\\left \\langle \\right \\rangle_{ii&#39;,jj&#39;}\\). 6.6.2 Physical meanings of the covariance terms The meanings of the different terms follow a similar description to that given in Eqn. 6.6.1. The diagonal term \\(\\text{Var}\\) is the variance of the figures-of-merit when reader \\(j\\) interprets different case-sets \\(\\{c\\}\\) in treatment \\(i\\). Each case-set yields a number \\(\\theta_{ij\\{c\\}}\\) and the variance of the \\(C\\) numbers, averaged over the \\(I \\times J\\) treatments and readers, is \\(\\text{Var}\\). It captures the total variability due to varying difficulty levels of the case-sets, inter-reader and within-reader variability. It is easier to see the physical meanings of \\(\\text{Cov1}, Cov_2, Cov_3\\) if one starts with the correlations. \\(\\rho_{1;ii&#39;jj}\\) is the correlation of the figures-of-merit when reader \\(j\\) interprets case-sets in different treatments \\(i,i&#39;\\). Each case-set, starting with \\(c = 1\\), yields two numbers \\(\\theta_{ij\\{1\\}}\\) and \\(\\theta_{i&#39;j\\{1\\}}\\). The correlation of the two pairs of C-length arrays, averaged over all pairings of different treatments and same readers, is \\(\\rho_1\\). The correlation exists due to the common contribution of the shared reader. When the common variation is large, the two arrays become more correlated and \\(\\rho_1\\) approaches unity. If there is no common variation, the two arrays become independent, and \\(\\rho_1\\) equals zero. Converting from correlation to covariance, see Eqn. (6.28), one has \\(\\text{Cov1} &lt; \\text{Var}\\). \\(\\rho_{2;iijj&#39;}\\) is the correlation of the figures-of-merit values when different readers \\(j,j&#39;\\) interpret the same case-sets in the same treatment \\(i\\). As before this yields two C-length arrays, whose correlation, upon averaging over all distinct treatment pairings and same readers, yields \\(\\rho_2\\). If one assumes that common variation between different-reader same-treatment FOMs is smaller than the common variation between same-reader different-treatment FOMs, then \\(\\rho_2\\) will be smaller than \\(\\rho_1\\). This is equivalent to stating that readers agree more with themselves in different treatments than they do with other readers in the same treatment. Translating to covariances, one has \\(Cov_2 &lt; \\text{Cov1} &lt; \\text{Var}\\). \\(\\rho_{3;ii&#39;jj&#39;}\\) is the correlation of the figure-of-merit values when different readers \\(j,j&#39;\\) interpret the same case set in different treatments \\(i,i&#39;\\), etc., yielding \\(\\rho_3\\). This is expected to yield the least correlation. Summarizing, one expects the following ordering for the terms in the covariance matrix: \\[\\begin{equation} Cov_3 \\leq Cov_2 \\leq \\text{Cov1} \\leq \\text{Var} \\tag{6.23} \\end{equation}\\] 6.7 Summary 6.8 Discussion 6.9 Appendix: Covariance and correlation Some elementary statistical results are reviewed here. 6.9.1 Relation: chisquare and F with infinite ddf Define \\(D_{1-\\alpha}\\), the \\((1-\\alpha)\\) quantile of distribution \\(D\\), such that the probability of observing a random sample \\(d\\) less than or equal to \\(D_{1-\\alpha}\\) is \\((1-\\alpha)\\): \\[\\begin{equation} \\Pr(d\\leq D_{1-\\alpha} \\mid d \\sim D)=1-\\alpha \\tag{6.24} \\end{equation}\\] With definition Eqn. (6.24), the \\((1-\\alpha)\\) quantile of the \\(\\chi_{I-1}^2\\) distribution, i.e., \\(\\chi_{1-\\alpha,I-1}^2\\), is related to the \\((1-\\alpha)\\) quantile of the \\(F_{I-1,\\infty}\\) distribution, i.e., \\(F_{1-\\alpha,I-1,\\infty}\\), as follows (see Hillis et al. 2005, Eq. 22): \\[\\begin{equation} \\frac{\\chi_{1-\\alpha,I-1}^{2}}{I-1} = F_{1-\\alpha,I-1,\\infty} \\tag{6.25} \\end{equation}\\] Eqn. (6.25) implies that the \\((1-\\alpha)\\) quantile of the F-distribution with \\(ndf=(I-1)\\) and \\(ddf =\\infty\\) equals the \\((1-\\alpha)\\) quantile of the \\(\\chi_{I-1}^2\\) distribution divided by \\((I-1)\\). Here is an R illustration of this theorem for \\(I-1 = 4\\) and \\(\\alpha = 0.05\\): qf(0.05, 4, Inf) ## [1] 0.1776808 qchisq(0.05,4)/4 ## [1] 0.1776808 6.9.2 Definitions of covariance and correlation The covariance of two scalar random variables X and Y is defined by: \\[\\begin{equation} Cov(X,Y) =\\frac{\\sum_{i=1}^{N}(x_{i}-x_{\\bullet})(y_{i}-y_{\\bullet})}{N-1}=E(XY)-E(X)-E(Y) \\tag{6.26} \\end{equation}\\] Here \\(E(X)\\) is the expectation value of the random variable \\(X\\), i.e., the integral of x multiplied by its \\(\\text{pdf}\\) over the range of \\(x\\): \\[E(X)=\\int \\text{pdf(x)} x dx\\] The covariance can be thought of as the common part of the variance of two random variables. The variance, a special case of covariance, of \\(X\\) is defined by: \\[\\text{Var}(X,X) = Cov(X,X)=E(X^2)-(E(X))^2=\\sigma_x^2\\] It can be shown, this is the Cauchy–Schwarz inequality, that: \\[\\mid Cov(X,Y) \\mid^2 \\le \\text{Var}(X)\\text{Var}(Y)\\] A related quantity, namely the correlation \\(\\rho\\) is defined by (the \\(\\sigma\\)s are standard deviations): \\[\\rho_{XY} \\equiv Cor(X,Y)=\\frac{Cov(X,Y)}{\\sigma_X \\sigma_Y}\\] It has the property: \\[\\mid \\rho_{XY} \\mid \\le 1\\] 6.9.3 Special case when variables have equal variances Assuming \\(X\\) and \\(Y\\) have the same variance: \\[\\text{Var}(X)=\\text{Var}(Y)\\equiv \\text{Var}\\equiv \\sigma^2\\] A useful theorem applicable to the OR single-reader multiple-treatment model is: \\[\\begin{equation} \\text{Var}(X-Y)=\\text{Var}(X)+\\text{Var}(Y)-2Cov(X,Y)=2(\\text{Var}-Cov) \\tag{6.27} \\end{equation}\\] The right hand side specializes to the OR single-reader multiple-treatment model where the variances (for different treatments) are equal and likewise the covariances in Eqn. (6.5) are equal) The correlation \\(\\rho_1\\) is defined by (the reason for the subscript 1 on \\(\\rho\\) is the same as the reason for the subscript 1 on \\(\\text{Cov1}\\), which will be explained later): \\[\\rho_1=\\frac{\\text{Cov1}}{\\text{Var}}\\] The I x I covariance matrix \\(\\Sigma\\) can be written alternatively as (shown below is the matrix for I = 5; as the matrix is symmetric, only elements at and above the diagonal are shown): \\[\\begin{equation} \\Sigma = \\begin{bmatrix} \\sigma^2 &amp; \\rho_1\\sigma^2 &amp; \\rho_1\\sigma^2 &amp; \\rho_1\\sigma^2 &amp; \\rho_1\\sigma^2\\\\ &amp; \\sigma^2 &amp; \\rho_1\\sigma^2 &amp; \\rho_1\\sigma^2 &amp; \\rho_1\\sigma^2\\\\ &amp; &amp; \\sigma^2 &amp; \\rho_1\\sigma^2 &amp; \\rho_1\\sigma^2\\\\ &amp; &amp; &amp; \\sigma^2 &amp; \\rho_1\\sigma^2\\\\ &amp; &amp; &amp; &amp; \\sigma^2 \\end{bmatrix} \\tag{6.28} \\end{equation}\\] 6.9.4 Estimating the variance-covariance matrix An unbiased estimate of the covariance matrix Eqn. (6.4) follows from: \\[\\begin{equation} \\Sigma_{ii&#39;}\\mid_{ps}=\\frac{1}{C-1}\\sum_{c=1}^{C} \\left ( \\theta_{i\\{c\\}} - \\theta_{i\\{\\bullet\\}} \\right) \\left ( \\theta_{i&#39;\\{c\\}} - \\theta_{i&#39;\\{\\bullet\\}} \\right) \\tag{6.29} \\end{equation}\\] The subscript \\(ps\\) denotes population sampling. As a special case, when \\(i = i&#39;\\), this equation yields the population sampling based variance. \\[\\begin{equation} \\text{Var}_{i}\\mid_{ps}=\\frac{1}{C-1}\\sum_{c=1}^{C} \\left ( \\theta_{i\\{c\\}} - \\theta_{i\\{\\bullet\\}} \\right)^2 \\tag{6.30} \\end{equation}\\] The I-values when averaged yield the population sampling based estimate of \\(\\text{Var}\\). Sampling different case-sets, as required by Eqn. (6.29), is unrealistic. In reality one has \\(C\\) = 1, i.e., a single dataset. Therefore, direct application of this formula is impossible. However, as seen when this situation was encountered before in (book) Chapter 07, one uses resampling methods to realize, for example, different bootstrap samples, which are resampling-based “stand-ins” for actual case-sets. If \\(B\\) is the total number of bootstraps, then the estimation formula is: \\[\\begin{equation} \\Sigma_{ii&#39;}\\mid_{bs} =\\frac{1}{B-1}\\sum_{b=1}^{B} \\left ( \\theta_{i\\{b\\}} - \\theta_{i\\{\\bullet\\}} \\right) \\left ( \\theta_{i&#39;\\{b\\}} - \\theta_{i&#39;\\{\\bullet\\}} \\right) \\tag{6.31} \\end{equation}\\] Eqn. (6.31), the bootstrap method of estimating the covariance matrix, is a direct translation of Eqn. (6.29). Alternatively, one could have used the jackknife FOM values \\(\\theta_{i(k)}\\), i.e., the figure of merit with a case \\(k\\) removed, repeated for all \\(k\\), to estimate the covariance matrix: \\[\\begin{equation} \\Sigma_{ii&#39;}\\mid_{jk} =\\frac{(K-1)^2}{K} \\left [ \\frac{1}{K-1}\\sum_{k=1}^{K} \\left ( \\theta_{i(k)} - \\theta_{i(\\bullet)} \\right) \\left ( \\theta_{i&#39;(k)} - \\theta_{i&#39;(\\bullet)} \\right) \\right ] \\tag{6.32} \\end{equation}\\] [For either bootstrap or jackknife, if \\(i = i&#39;\\), the equations yield the corresponding variance estimates.] Note the subtle difference in usage of ellipses and parentheses between Eqn. (6.29) and Eqn. (6.32). In the former, the subscript \\(\\{c\\}\\) denotes a set of \\(K\\) cases while in the latter, \\((k)\\) denotes the original case set with case \\(k\\) removed, leaving \\(K-1\\) cases. There is a similar subtle difference in usage of ellipses and parentheses between Eqn. (6.31) and Eqn. (6.32). The subscript enclosed in parenthesis, i.e., \\((k)\\), denotes the FOM with case \\(k\\) removed, while in the bootstrap equation one uses the ellipses (curly brackets) \\(\\{b\\}\\) to denote the \\(b^{th}\\) bootstrap case-set, i.e., a whole set of \\(K_1\\) non-diseased and \\(K_2\\) diseased cases, sampled with replacement from the original dataset. The index \\(k\\) ranges from 1 to \\(K\\), where the first \\(K_1\\) values represent non-diseased cases and the following \\(K_2\\) values represent diseased cases. Jackknife figure of merit values, such as \\(\\theta_{i(k)}\\), are not to be confused with jackknife pseudovalues used in the DBM chapters. The jackknife FOM corresponding to a particular case is the FOM with the particular case removed while the pseudovalue is \\(K\\) times the FOM with all cases include minus \\((K-1)\\) times the jackknife FOM. Unlike pseudovalues, jackknife FOM values cannot be regarded as independent and identically distributed, even when using the empirical AUC as FOM. 6.9.5 The variance inflation factor In Eqn. (6.32), the expression for the jackknife covariance estimate contains a variance inflation factor: \\[\\begin{equation} \\frac{(K-1)^2}{K} \\tag{6.33} \\end{equation}\\] This factor multiplies the traditional expression for the covariance, shown in square brackets in Eqn. (6.32). It is only needed for the jackknife estimate. The bootstrap and the DeLong estimate, see next, do not require this factor. A third method of estimating the covariance (DeLong, DeLong, and Clarke-Pearson 1988), only applicable to the empirical AUC, is not discussed here; however, it is implemented in the software. 6.9.6 Meaning of the covariance matrix With reference to Eqn. (6.5), suppose one has the luxury of repeatedly sampling case-sets, each consisting of \\(K\\) cases from the population. A single radiologist interprets these cases in \\(I\\) treatments. Therefore, each case-set \\(\\{c\\}\\) yields \\(I\\) figures of merit. The final numbers at ones disposal are \\(\\theta_{i\\{c\\}}\\), where \\(i\\) = 1,2,…,\\(I\\) and \\(c\\) = 1,2,…,\\(C\\). Considering treatment \\(i\\), the variance of the FOM-values for the different case-sets \\(c\\) = 1,2,…,\\(C\\), is an estimate of \\(Var_i\\) for this treatment: \\[\\begin{equation} \\sigma_i^2 \\equiv Var_i = \\frac{1}{C-1}\\sum_{c=1}^{C}\\left ( \\theta_{i\\{c\\}} - \\theta_{i\\{\\bullet\\}} \\right) \\left ( \\theta_{i\\{c\\}} - \\theta_{i\\{\\bullet\\}} \\right) \\tag{6.34} \\end{equation}\\] The process is repeated for all treatments and the \\(I\\)-variance values are averaged. This is the final estimate of \\(\\text{Var}\\) appearing in Eqn. (6.3). To estimate the covariance matrix one considers pairs of FOM values for the same case-set \\(\\{c\\}\\) but different treatments, i.e., \\(\\theta_{i\\{c\\}}\\) and \\(\\theta_{i&#39;\\{c\\}}\\); by definition primed and un-primed indices are different. The process is repeated for different case-sets. The covariance is calculated as follows: \\[\\begin{equation} \\text{Cov}_{1;ii&#39;} = \\frac{1}{C-1}\\sum_{c=1}^{C} \\left ( \\theta_{i\\{c\\}} - \\theta_{i\\{\\bullet\\}} \\right) \\left ( \\theta_{i&#39;\\{c\\}} - \\theta_{i&#39;\\{\\bullet\\}} \\right) \\tag{6.35} \\end{equation}\\] The process is repeated for all combinations of different-treatment pairings and the resulting \\(I(I-1)/2\\) values are averaged yielding the final estimate of \\(\\text{Cov}_1\\). [Recall that the Obuchowski-Rockette model does not allow treatment-dependent parameters in the covariance matrix - hence the need to average over all treatment pairings.] Since they are derived from the same case-set, one expects the \\(\\theta_{i\\{c\\}}\\) and \\(\\theta_{i&#39;\\{c\\}}\\) values to be correlated. As an example, for a particularly easy case-set one expects \\(\\theta_{i\\{c\\}}\\) and \\(\\theta_{i&#39;\\{c\\}}\\) to be both higher than usual. The correlation \\(\\rho_{1;ii&#39;}\\) is defined by: \\[\\begin{equation} \\rho_{1;ii&#39;} = \\frac{1}{C-1}\\sum_{c=1}^{C} \\frac {\\left ( \\theta_{i\\{c\\}} - \\theta_{i\\{\\bullet\\}} \\right) \\left ( \\theta_{i&#39;\\{c\\}} - \\theta_{i&#39;\\{\\bullet\\}} \\right)}{\\sigma_i \\sigma_{i&#39;} } \\tag{6.36} \\end{equation}\\] Averaging over all different-treatment pairings yields the final estimate of the correlation \\(\\rho_1\\). Since the covariance is smaller than the variance, the magnitude of the correlation is smaller than 1. In most situations one expects \\(\\rho_1\\) to be positive. There is a scenario that could lead to negative correlation. With “complementary” treatments, e.g., CT vs. MRI, where one treatment is good for bone imaging and the other for soft-tissue imaging, an easy case-set in one treatment could correspond to a difficult case-set in the other treatment, leading to negative correlation. To summarize, the covariance matrix can be estimated using the jackknife or the bootstrap, or, in the special case of the empirical AUC figure of merit, the DeLong method can be used. In (book) Chapter 07, these three methods were described in the context of estimating the variance of AUC. Eqn. (6.31) and Eqn. (6.32) extend the jackknife and the bootstrap methods, respectively, to estimating the covariance of AUC (whose diagonal elements are the variances estimated in the earlier chapter). 6.9.7 Code illustrating the covariance matrix To minimize clutter, the R functions (for estimating Var and Cov1 using bootstrap, jackknife, and the DeLong methods) are not shown, but they are compiled. To display them clone or ‘fork’ the book repository and look at the Rmd file corresponding to this output and the sourced R files listed below: The following code chunk extracts (using the DfExtractDataset function) a single-reader multiple-treatment ROC dataset corresponding to the first reader from dataset02, which is the Van Dyke dataset. rocData1R &lt;- DfExtractDataset(dataset02, rdrs = 1) #select the 1st reader to be analyzed zik1 &lt;- rocData1R$ratings$NL[,1,,1];K &lt;- dim(zik1)[2];I &lt;- dim(zik1)[1] zik2 &lt;- rocData1R$ratings$LL[,1,,1];K2 &lt;- dim(zik2)[2];K1 &lt;- K-K2;zik1 &lt;- zik1[,1:K1] The following notation is used in the code below: jk = jackknife method bs = bootstrap method, with B = number of bootstraps and seed = value. dl = DeLong method rj_jk = RJafroc, covEstMethod = “jackknife” rj_bs = RJafroc, covEstMethod = “bootstrap” For example, Cov1_jk is the jackknife estimate of Cov1. Shown below are the results of the jackknife method, first using the code in this repository and next, as a cross-check, using RJafroc function UtilORVarComponentsFactorial: ret1 &lt;- VarCov1_Jk(zik1, zik2) Var &lt;- ret1$Var Cov1 &lt;- ret1$Cov1 # use these (i.e., jackknife) as default values in subsequent code data.frame (&quot;Cov1_jk&quot; = Cov1, &quot;Var_jk&quot; = Var) ## Cov1_jk Var_jk ## 1 0.0003734661 0.0006989006 ret4 &lt;- UtilORVarComponentsFactorial( rocData1R, FOM = &quot;Wilcoxon&quot;) # the functions default `covEstMethod` is jackknife data.frame (&quot;Cov1_rj_jk&quot; = ret4$VarCom[&quot;Cov1&quot;, &quot;Estimates&quot;], &quot;Var_rj_jk&quot; = ret4$VarCom[&quot;Var&quot;, &quot;Estimates&quot;]) ## Cov1_rj_jk Var_rj_jk ## 1 0.0003734661 0.0006989006 Note that the estimates are identical and that the \\(\\text{Cov1}\\) estimate is smaller than the \\(\\text{Var}\\) estimate (their ratio is the correlation \\(\\rho_1 = \\text{Cov1}/\\text{Var}\\) = 0.5343623). Shown next are bootstrap method estimates with increasing number of bootstraps (200, 2000 and 20,000): ret2 &lt;- VarCov1_Bs(zik1, zik2, 200, seed = 100) data.frame (&quot;Cov_bs&quot; = ret2$Cov1, &quot;Var_bs&quot; = ret2$Var) ## Cov_bs Var_bs ## 1 0.000283905 0.0005845354 ret2 &lt;- VarCov1_Bs(zik1, zik2, 2000, seed = 100) data.frame (&quot;Cov_bs&quot; = ret2$Cov1, &quot;Var_bs&quot; = ret2$Var) ## Cov_bs Var_bs ## 1 0.0003466804 0.0006738506 ret2 &lt;- VarCov1_Bs(zik1, zik2, 20000, seed = 100) data.frame (&quot;Cov_bs&quot; = ret2$Cov1, &quot;Var_bs&quot; = ret2$Var) ## Cov_bs Var_bs ## 1 0.0003680714 0.0006862668 With increasing number of bootstraps the values approach the jackknife estimates. Following, as a cross check, are results of bootstrap method as calculated by the RJafroc function UtilORVarComponentsFactorial: ret5 &lt;- UtilORVarComponentsFactorial( rocData1R, FOM = &quot;Wilcoxon&quot;, covEstMethod = &quot;bootstrap&quot;, nBoots = 2000, seed = 100) data.frame (&quot;Cov_rj_bs&quot; = ret5$VarCom[&quot;Cov1&quot;, &quot;Estimates&quot;], &quot;Var_rj_bs&quot; = ret5$VarCom[&quot;Var&quot;, &quot;Estimates&quot;]) ## Cov_rj_bs Var_rj_bs ## 1 0.0003466804 0.0006738506 Note that the two estimates shown above for \\(B = 2000\\) are identical. This is because the seeds are identical. With different seeds on expect sampling related fluctuations. Following are results of the DeLong covariance estimation method, the first output is using this repository code and the second using the RJafroc function UtilORVarComponentsFactorial with appropriate arguments: mtrxDLStr &lt;- VarCovMtrxDLStr(rocData1R) ret3 &lt;- VarCovs(mtrxDLStr) data.frame (&quot;Cov_dl&quot; = ret3$cov1, &quot;Var_dl&quot; = ret3$var) ## Cov_dl Var_dl ## 1 0.0003684357 0.0006900766 ret5 &lt;- UtilORVarComponentsFactorial( rocData1R, FOM = &quot;Wilcoxon&quot;, covEstMethod = &quot;DeLong&quot;) data.frame (&quot;Cov_rj_dl&quot; = ret5$VarCom[&quot;Cov1&quot;, &quot;Estimates&quot;], &quot;Var_rj_dl&quot; = ret5$VarCom[&quot;Var&quot;, &quot;Estimates&quot;]) ## Cov_rj_dl Var_rj_dl ## 1 0.0003684357 0.0006900766 Note that the two estimates are identical and that the DeLong estimate are close to the bootstrap estimates using 20,000 bootstraps. The just demonstrated close correspondence is only expected when using the Wilcoxon figure of merit, i.e., the empirical AUC. 6.9.8 Comparing DBM to Obuchowski and Rockette for single-reader multiple-treatments We have shown two methods for analyzing a single reader in multiple treatments: the DBM method, involving jackknife derived pseudovalues and the Obuchowski and Rockette method that does not have to use the jackknife, since it could use the bootstrap, or the DeLong method, if one restricts to the Wilcoxon statistic for the figure of merit, to get the covariance matrix. Since one is dealing with a single reader in multiple treatments, for DBM one needs the fixed-reader random-case analysis described in TBA §9.8 of the previous chapter (it should be obvious that with one reader the conclusions apply to the specific reader only, so reader must be regarded as a fixed factor). Shown below are results obtained using RJafroc function StSignificanceTesting with analysisOption = \"FRRC\" for method = “DBM” (which uses the jackknife), and for OR using 3 different ways of estimating the covariance matrix for the one-reader analysis (i.e., \\(\\text{Cov1}\\) and \\(\\text{Var}\\)). ret1 &lt;- StSignificanceTesting( rocData1R,FOM = &quot;Wilcoxon&quot;, method = &quot;DBM&quot;, analysisOption = &quot;FRRC&quot;) data.frame(&quot;DBM:F&quot; = ret1$FRRC$FTests[&quot;Treatment&quot;, &quot;FStat&quot;], &quot;DBM:ddf&quot; = ret1$FRRC$FTests[&quot;Treatment&quot;, &quot;DF&quot;], &quot;DBM:P-val&quot; = ret1$FRRC$FTests[&quot;Treatment&quot;, &quot;p&quot;]) ## DBM.F DBM.ddf DBM.P.val ## 1 1.2201111 1 0.27168532 ret2 &lt;- StSignificanceTesting( rocData1R,FOM = &quot;Wilcoxon&quot;, method = &quot;OR&quot;, analysisOption = &quot;FRRC&quot;) data.frame(&quot;ORJack:Chisq&quot; = ret2$FRRC$FTests[&quot;Treatment&quot;, &quot;Chisq&quot;], &quot;ORJack:ddf&quot; = ret2$FRRC$FTests[&quot;Treatment&quot;, &quot;DF&quot;], &quot;ORJack:P-val&quot; = ret2$FRRC$FTests[&quot;Treatment&quot;, &quot;p&quot;]) ## ORJack.Chisq ORJack.ddf ORJack.P.val ## 1 1.2201111 1 0.26933885 ret3 &lt;- StSignificanceTesting( rocData1R,FOM = &quot;Wilcoxon&quot;, method = &quot;OR&quot;, analysisOption = &quot;FRRC&quot;, covEstMethod = &quot;DeLong&quot;) data.frame(&quot;ORDeLong:Chisq&quot; = ret3$FRRC$FTests[&quot;Treatment&quot;, &quot;Chisq&quot;], &quot;ORDeLong:ddf&quot; = ret3$FRRC$FTests[&quot;Treatment&quot;, &quot;DF&quot;], &quot;ORDeLong:P-val&quot; = ret3$FRRC$FTests[&quot;Treatment&quot;, &quot;p&quot;]) ## ORDeLong.Chisq ORDeLong.ddf ORDeLong.P.val ## 1 1.2345017 1 0.26653335 ret4 &lt;- StSignificanceTesting( rocData1R,FOM = &quot;Wilcoxon&quot;, method = &quot;OR&quot;, analysisOption = &quot;FRRC&quot;, covEstMethod = &quot;bootstrap&quot;) data.frame(&quot;ORBoot:Chisq&quot; = ret4$FRRC$FTests[&quot;Treatment&quot;, &quot;Chisq&quot;], &quot;ORBoot:ddf&quot; = ret4$FRRC$FTests[&quot;Treatment&quot;, &quot;DF&quot;], &quot;ORBoot:P-val&quot; = ret4$FRRC$FTests[&quot;Treatment&quot;, &quot;p&quot;]) ## ORBoot.Chisq ORBoot.ddf ORBoot.P.val ## 1 1.2306317 1 0.26728423 The DBM and OR-jackknife methods yield identical F-statistics, but the denominator degrees of freedom are different, \\((I-1)(K-1)\\) = 113 for DBM and \\(\\infty\\) for OR. The F-statistics for OR-bootstrap and OR-DeLong are different. Shown below is a first-principles implementation of OR significance testing for the one-reader case. alpha &lt;- 0.05 theta_i &lt;- c(0,0);for (i in 1:I) theta_i[i] &lt;- Wilcoxon(zik1[i,], zik2[i,]) MS_T &lt;- 0 for (i in 1:I) { MS_T &lt;- MS_T + (theta_i[i]-mean(theta_i))^2 } MS_T &lt;- MS_T/(I-1) F_1R &lt;- MS_T/(Var - Cov1) pValue &lt;- 1 - pf(F_1R, I-1, Inf) trtDiff &lt;- array(dim = c(I,I)) for (i1 in 1:(I-1)) { for (i2 in (i1+1):I) { trtDiff[i1,i2] &lt;- theta_i[i1]- theta_i[i2] } } trtDiff &lt;- trtDiff[!is.na(trtDiff)] nDiffs &lt;- I*(I-1)/2 CI_DIFF_FOM_1RMT &lt;- array(dim = c(nDiffs, 3)) for (i in 1 : nDiffs) { CI_DIFF_FOM_1RMT[i,1] &lt;- trtDiff[i] + qt(alpha/2, df = Inf)*sqrt(2*(Var - Cov1)) CI_DIFF_FOM_1RMT[i,2] &lt;- trtDiff[i] CI_DIFF_FOM_1RMT[i,3] &lt;- trtDiff[i] + qt(1-alpha/2,df = Inf)*sqrt(2*(Var - Cov1)) print(data.frame(&quot;theta_1&quot; = theta_i[1], &quot;theta_2&quot; = theta_i[2], &quot;Var&quot; = Var, &quot;Cov1&quot; = Cov1, &quot;MS_T&quot; = MS_T, &quot;F_1R&quot; = F_1R, &quot;pValue&quot; = pValue, &quot;Lower&quot; = CI_DIFF_FOM_1RMT[i,1], &quot;Mid&quot; = CI_DIFF_FOM_1RMT[i,2], &quot;Upper&quot; = CI_DIFF_FOM_1RMT[i,3])) } ## theta_1 theta_2 Var Cov1 MS_T F_1R ## 1 0.91964573 0.94782609 0.00069890056 0.0003734661 0.00039706618 1.2201111 ## pValue Lower Mid Upper ## 1 0.26933885 -0.078183215 -0.028180354 0.021822507 The following shows the corresponding output of RJafroc. ret_rj &lt;- StSignificanceTesting( rocData1R, FOM = &quot;Wilcoxon&quot;, method = &quot;OR&quot;, analysisOption = &quot;FRRC&quot;) print(data.frame(&quot;theta_1&quot; = ret_rj$FOMs$foms[1,1], &quot;theta_2&quot; = ret_rj$FOMs$foms[2,1], &quot;Var&quot; = ret_rj$ANOVA$VarCom[&quot;Var&quot;, &quot;Estimates&quot;], &quot;Cov1&quot; = ret_rj$ANOVA$VarCom[&quot;Cov1&quot;, &quot;Estimates&quot;], &quot;MS_T&quot; = ret_rj$ANOVA$TRanova[1,3], &quot;Chisq_1R&quot; = ret_rj$FRRC$FTests[&quot;Treatment&quot;,&quot;Chisq&quot;], &quot;pValue&quot; = ret_rj$FRRC$FTests[&quot;Treatment&quot;,&quot;p&quot;], &quot;Lower&quot; = ret_rj$FRRC$ciDiffTrt[1,&quot;CILower&quot;], &quot;Mid&quot; = ret_rj$FRRC$ciDiffTrt[1,&quot;Estimate&quot;], &quot;Upper&quot; = ret_rj$FRRC$ciDiffTrt[1,&quot;CIUpper&quot;])) ## theta_1 theta_2 Var Cov1 MS_T Chisq_1R ## 1 0.91964573 0.94782609 0.00069890056 0.0003734661 0.00039706618 1.2201111 ## pValue Lower Mid Upper ## 1 0.26933885 -0.078183215 -0.028180354 0.021822507 The first-principles and the RJafroc values agree exactly with each other [for \\(I = 2\\), the F and chisquare statistics are identical]. This above code also shows how to extract the different estimates (\\(Var\\), \\(\\text{Cov1}\\), etc.) from the object ret_rj returned by RJafroc. Specifically, Var: ret_rj$ANOVA$VarCom[“Var”, “Estimates”] Cov1: ret_rj$ANOVA$VarCom[“Cov1”, “Estimates”] Chisquare-statistic: ret_rj$FRRC$FTests[“Treatment”,“Chisq”] df: ret_rj$FRRC$FTests[1,“DF”] p-value: ret_rj$FRRC$FTests[“Treatment”,“p”] CI Lower: ret_rj$FRRC$ciDiffTrt[1,“CILower”] Mid Value: ret_rj$FRRC$ciDiffTrt[1,“Estimate”] CI Upper: ret_rj$FRRC$ciDiffTrt[1,“CIUpper”] 6.9.8.1 Jumping ahead If RRRC analysis were conducted, the values are [one needs to analyze a dataset like dataset02 having more than one treatments and readers and use analysisOption = “RRRC”]: msR: ret_rj$ANOVA$TRanova[“R”, “MS”] msT: ret_rj$ANOVA$TRanova[“T”, “MS”] msTR: ret_rj$ANOVA$TRanova[“TR”, “MS”] Var: ret_rj$ANOVA$VarCom[“Var”, “Estimates”] Cov1: ret_rj$ANOVA$VarCom[“Cov1”, “Estimates”] Cov2: ret_rj$ANOVA$VarCom[“Cov2”, “Estimates”] Cov3: ret_rj$ANOVA$VarCom[“Cov3”, “Estimates”] varR: ret_rj$ANOVA$VarCom[“VarR”, “Estimates”] varTR: ret_rj$ANOVA$VarCom[“VarTR”, “Estimates”] F-statistic: ret_rj$RRRC$FTests[“Treatment”, “FStat”] ddf: ret_rj$RRRC$FTests[“Error”, “DF”] p-value: ret_rj$RRRC$FTests[“Treatment”, “p”] CI Lower: ret_rj$RRRC$ciDiffTrt[“trt0-trt1”,“CILower”] Mid Value: ret_rj$RRRC$ciDiffTrt[“trt0-trt1”,“Estimate”] CI Upper: ret_rj$RRRC$ciDiffTrt[“trt0-trt1”,“CIUpper”] For RRFC analysis, one replaces RRRC with RRFC, etc. I should note that the auto-prompt feature of RStudio makes it unnecessary to enter the complex string names shown above - RStudio will suggest them. 6.10 Chapter References REFERENCES "],["or-analysis-st.html", "Chapter 7 Obuchowski Rockette (OR) Analysis 7.1 TBA How much finished 7.2 Introduction 7.3 Random-reader random-case 7.4 Fixed-reader random-case 7.5 Random-reader fixed-case 7.6 Single treatment analysis", " Chapter 7 Obuchowski Rockette (OR) Analysis 7.1 TBA How much finished 80% 7.2 Introduction In previous chapters the DBM significance testing procedure (Dorfman, Berbaum, and Metz 1992) for analyzing MRMC ROC data, along with improvements (Hillis 2014), has been described. Because the method assumes that jackknife pseudovalues can be regarded as independent and identically distributed case-level figures of merit, it has been rightly criticized by Hillis and others (Zhou, McClish, and Obuchowski 2009). Hillis states that the method “works” but lacks firm statistical foundations (Hillis et al. 2005; Hillis 2007; Hillis, Berbaum, and Metz 2008). I would add that it “works” as long as one restricts to the empirical AUC figure of merit. In my book I gave a justification for why the method “works”. Specifically, the empirical AUC pseudovalues qualify as case-level FOMs - this property has also been noted by (Hajian-Tilaki et al. 1997). However, this property applies only to the empirical AUC, so an alternate approach that applies to any figure of merit is highly desirable. Hillis’ has proposed that a method based on an earlier publication (Obuchowski and Rockette 1995), which does not depend on pseudovalues, is preferable from both conceptual and practical points of view. This chapter is named “OR Analysis”, where OR stands for Obuchowski and Rockette. The OR method has advantages in being able to handle more complex study designs (Hillis 2014) that are addressed in subsequent chapters, and applications to other FOMs (e.g., the FROC paradigm uses a rather different FOM from empirical ROC-AUC) are best performed with the OR method. This chapter delves into the significance testing procedure employed in OR analysis. Multiple readers interpreting a case-set in multiple treatments is analyzed and the results, DBM vs. OR, are compared for the same dataset. The special cases of fixed-reader and fixed-case analyses are described. Single treatment analysis, where interest is in comparing average performance of readers to a fixed value, is described. Three methods of estimating the covariance matrix are described. Before proceeding, it is understood that datasets analyzed in this chapter follow a factorial design, sometimes call fully-factorial or fully-crossed design. Basically, the data structure is symmetric, e.g., all readers interpret all cases in all modalities. The next chapter will describe the analysis of split-plot datasets, where, for example, some readers interpret all cases in one modality, while the remaining readers interpret all cases in the other modality. 7.3 Random-reader random-case In conventional ANOVA models, such as used in DBM, the covariance matrix of the error term is diagonal with all diagonal elements equal to a common variance, represented in the DBM model by the scalar \\(\\epsilon\\) term. Because of the correlated structure of the error term, in OR analysis, a customized ANOVA is needed. The null hypothesis (NH) is that the true figures-of-merit of all treatments are identical, i.e., \\[\\begin{equation} NH:\\tau_i=0\\;\\; (i=1,2,...,I) \\tag{7.1} \\end{equation}\\] The analysis described next considers both readers and cases as random effects. The F-statistic is denoted \\(F_{ORH}\\), defined by: \\[\\begin{equation} F_{ORH}=\\frac{MS(T)}{MS(TR)+J\\max(\\text{Cov2}-\\text{Cov3},0)} \\tag{7.2} \\end{equation}\\] Eqn. (7.2) incorporates Hillis’ modification of the original OR F-statistic. The modification ensures that the constraint Eqn. (6.23) is always obeyed and also avoids a possibly negative (and hence illegal) F-statistic. The relevant mean squares are defined by (note that these are calculated using FOM values, not pseudovalues): \\[\\begin{align} \\left.\\begin{array}{rcl} MS(T)&amp;=&amp;\\frac{J}{I-1}\\sum_{i=1}^{I}(\\theta_{i\\bullet}-\\theta_{\\bullet\\bullet})^2\\\\ \\\\ MS(R)&amp;=&amp;\\frac{I}{J-1}\\sum_{j=1}^{J}(\\theta_{\\bullet j}-\\theta_{\\bullet\\bullet})^2\\\\ \\\\ MS(TR)&amp;=&amp;\\frac{1}{(I-1)(J-1)}\\sum_{i=1}^{I}\\sum_{j=1}^{J}(\\theta_{ij}-\\theta_{i\\bullet}-\\theta_{\\bullet j}+\\theta_{\\bullet\\bullet}) \\end{array}\\right\\} \\tag{7.3} \\end{align}\\] The original paper (Obuchowski and Rockette 1995) actually proposed a different test statistic \\(F_{OR}\\): \\[\\begin{equation} F_{OR}=\\frac{MS(T)}{MS(TR)+J(\\text{Cov2}-\\text{Cov3})} \\tag{7.4} \\end{equation}\\] Note that Eqn. (7.4) lacks the constraint, subsequently proposed by Hillis, which ensures that the denominator cannot be negative. The following distribution was proposed for the test statistic. \\[\\begin{equation} F_{OR}\\sim F_{\\text{ndf},\\text{ddf}} \\tag{7.5} \\end{equation}\\] The original degrees of freedom were defined by: \\[\\begin{align} \\begin{split} \\text{ndf}&amp;=I-1\\\\ \\text{ddf}&amp;=(I-1)\\times(J-1) \\end{split} \\tag{7.6} \\end{align}\\] It turns out that the Obuchowski-Rockette test statistic is very conservative, meaning it is highly biased against rejecting the null hypothesis (the data simulator used in the validation described in their publication did not detect this behavior). Because of the conservative behavior, the predicted sample sizes tended to be quite large (if the test statistic does not reject the NH as often as it should, one way to overcome this tendency is to use a larger sample size). In this connection I have two informative anecdotes. 7.3.1 Two anecdotes The late Dr. Robert F. Wagner once stated to me (ca. 2001) that the sample-size tables published by Obuchowski (Obuchowski 1998, 2000), using the version of Eqn. (7.2) with the ddf as originally suggested by Obuchowski and Rockette, predicted such high number of readers and cases that he was doubtful about the chances of anyone conducting a practical ROC study! The second story is that I once conducted NH simulations and analyses using a Roe-Metz simulator (Roe and Metz 1997a) and the significance testing described in the Obuchowski-Rockette paper: the method did not reject the null hypothesis even once in 2000 trials! Recall that with \\(\\alpha = 0.05\\) a valid test should reject the null hypothesis about \\(100\\pm20\\) times in 2000 trials. I recalls (ca. 2004) telling Dr. Steve Hillis about this issue, and he suggested a different denominator degrees of freedom ddf, see next, substitution of which magically solved the problem, i.e., the simulations rejected the null hypothesis 5% of the time. 7.3.2 Hillis ddf Hillis’ proposed new ddf is shown below (ndf is unchanged), with the subscript \\(H\\) denoting the Hillis modification: \\[\\begin{equation} \\text{ddf}_H = \\frac{\\left [ MS(TR) + J \\max(\\text{Cov2}-\\text{Cov3},0)\\right ]^2}{\\frac{\\left [ MS(TR) \\right ]^2}{(I-1)(J-1)}} \\tag{7.7} \\end{equation}\\] From the previous chapter, the ordering of the covariances is as follows: \\[\\begin{equation*} \\text{Cov3} \\leq \\text{Cov2} \\leq \\text{Cov1} \\leq \\text{Var} \\end{equation*}\\] If \\(\\text{Cov2} &lt; \\text{Cov3}\\) (which is the exact opposite of the expected ordering), \\(\\text{ddf}_H\\) reduces to \\((I-1)\\times(J-1)\\), the value originally proposed by Obuchowski and Rockette. With Hillis’ proposed changes, under the null hypothesis the observed statistic \\(F_{ORH}\\), defined in Eqn. (7.2), is distributed as an F-statistic with \\(\\text{ndf} = I-1\\) and ddf = \\(\\text{ddf}_H\\) degrees of freedom (Hillis et al. 2005; Hillis 2007; Hillis, Berbaum, and Metz 2008): \\[\\begin{equation} F_{ORH}\\sim F_{\\text{ndf},\\text{ddf}_H} \\tag{7.8} \\end{equation}\\] If the expected ordering is true, i.e., \\(\\text{Cov2} &gt; \\text{Cov3}\\) , which is the more likely situation, then \\(\\text{ddf}_H\\) is larger than \\((I-1)\\times(J-1)\\), i.e., the Obuchowski-Rockette ddf, and the p-value decreases and there is a larger probability of rejecting the NH. The modified OR method is more likely to have the correct NH behavior, i.e, it will reject the NH 5% of the time when alpha is set to 0.05 (statisticians refer to this as “passing the 5% test”). The correct NH behavior has been confirmed in simulation testing using the Roe-Metz simulator (Hillis, Berbaum, and Metz (2008)). 7.3.3 Decision rule, p-value and confidence interval The critical value of the F-statistic for rejection of the null hypothesis is \\(F_{1-\\alpha,\\text{ndf},\\text{ddf}_H}\\), i.e., that value such that fraction \\((1-\\alpha)\\) of the area under the distribution lies to the left of the critical value. From Eqn. (7.2): Rejection of the NH is more likely if \\(MS(T)\\) increases, meaning the treatment effect is larger; \\(MS(TR)\\) is smaller, meaning there is less contamination of the treatment effect by treatment-reader variability; The greater of \\(\\text{Cov2}\\) or \\(\\text{Cov3}\\), which is usually \\(\\text{Cov2}\\), decreases, meaning there is less “noise” in the measurement due to between-reader variability. Recall that \\(\\text{Cov2}\\) involves different-reader same-treatment pairings. \\(\\alpha\\) increases, meaning one is allowing a greater probability of Type I errors; \\(\\text{ndf}\\) increases, as this lowers the critical value of the F-statistic. With more treatment pairings, the chance that at least one paired-difference will reject the NH is larger. \\(\\text{ddf}_H\\) increases, as this lowers the critical value of the F-statistic. The p-value of the test is the probability, under the NH, that an equal or larger value of the F-statistic than \\(F_{ORH}\\) could be observed by chance. In other words, it is the area under the F-distribution \\(F_{\\text{ndf},\\text{ddf}_H}\\) that lies above the observed value \\(F_{ORH}\\): \\[\\begin{equation} p=\\Pr(F&gt;F_{ORH} \\mid F\\sim F_{\\text{ndf},\\text{ddf}_H}) \\tag{7.9} \\end{equation}\\] The \\((1-\\alpha)\\) confidence interval for \\(\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}\\) is given by: \\[\\begin{equation} \\begin{split} CI_{1-\\alpha,RRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}} =&amp; \\theta_{i \\bullet} - \\theta_{i&#39; \\bullet} \\\\ &amp;\\pm t_{\\alpha/2, \\text{ddf}_H}\\sqrt{\\textstyle\\frac{2}{J}(MS(TR)+J\\max(\\text{Cov2}-\\text{Cov3},0))} \\end{split} \\tag{7.10} \\end{equation}\\] Define \\(\\text{df}_i\\), the degrees of freedom for modality \\(i\\): \\[\\begin{equation} \\text{df}_i = (\\text{MS(R)}_i + J\\max(\\text{Cov2}_{i}, 0))^2/\\text{MS(R)}_i^2 * (J - 1) \\tag{7.11} \\end{equation}\\] Here \\(\\text{MS(R)}_i\\) is the reader mean-square for modality \\(i\\), and \\(\\text{Cov2}_i\\) is \\(\\text{Cov2}\\) for modality \\(i\\). Note that all quantities with an \\(i\\) index are calculated using data from modality \\(i\\) only. The \\((1-\\alpha)\\) confidence interval for \\(\\theta_{i \\bullet}\\), i.e., \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet}}\\), is given by: \\[\\begin{equation} CI_{1-\\alpha,RRRC,\\theta_{i \\bullet}} = \\theta_{i \\bullet} \\pm t_{\\alpha/2, \\text{df}_i}\\sqrt{\\textstyle\\frac{1}{J}(\\text{MS(R)}_i + J\\max(\\text{Cov2}_{i}, 0))} \\tag{7.12} \\end{equation}\\] 7.4 Fixed-reader random-case Using the vertical bar notation \\(\\mid R\\) to denote that reader is regarded as a fixed effect (Roe and Metz 1997b), the F -statistic for testing the null hypothesis \\(NH: \\tau_i = 0 \\; (i=1,1,2,...I)\\) is (Hillis 2007): \\[\\begin{equation} F_{ORH \\mid R}=\\frac{MS(T)}{\\text{Var}-\\text{Cov1}+(J-1)\\max(\\text{Cov2}-\\text{Cov3},0)} \\tag{7.13} \\end{equation}\\] [For \\(J\\) = 1, Eqn. (7.13) reduces to Eqn. (6.8), i.e., the single-reader analysis described in the previous chapter.] \\(F_{ORH \\mid R}\\) is distributed as an F-statistic with \\(\\text{ndf} = I-1\\) and \\(\\text{ddf} = \\infty\\): \\[\\begin{equation} F_{ORH \\mid R} \\sim F_{I-1,\\infty} \\tag{7.14} \\end{equation}\\] One can get rid of the infinite denominator degrees of freedom by recognizing, as in the previous chapter, that \\((I-1) F_{I-1,\\infty}\\) is distributed as a \\(\\chi^2\\) distribution with \\(I-1\\) degrees of freedom, i.e., as \\(\\chi^2_{I-1}\\). Therefore, one has, analogous to Eqn. (6.7), \\[\\begin{equation} \\chi^2_{ORH \\mid R} \\equiv (I-1)F_{ORH \\mid R} \\sim \\chi^2_{I-1} \\tag{7.15} \\end{equation}\\] The critical value of the \\(\\chi^2\\) statistic is \\(\\chi^2_{1-\\alpha,I-1}\\), which is that value such that fraction \\((1-\\alpha)\\) of the area under the \\(\\chi^2_{I-1}\\) distribution lies to the left of the critical value. The null hypothesis is rejected if the observed value of the \\(\\chi^2\\) statistic exceeds the critical value, i.e., \\[\\chi^2_{ORH \\mid R} &gt; \\chi^2_{1-\\alpha,I-1}\\] The p-value of the test is the probability that a random sample from the chi-square distribution \\(\\chi^2_{I-1}\\) exceeds the observed value of the test statistic \\(\\chi^2_{ORH \\mid R}\\) statistic defined in Eqn. (7.15): \\[\\begin{equation} p=\\Pr(\\chi^2 &gt; \\chi^2_{ORH \\mid R} \\mid \\chi^2 \\sim \\chi^2_{I-1}) \\tag{7.16} \\end{equation}\\] The \\((1-\\alpha)\\) (symmetric) confidence interval for the difference figure of merit is given by: \\[\\begin{equation} \\begin{split} CI_{1-\\alpha,FRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}} =&amp;(\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}) \\\\ &amp;\\pm t_{\\alpha/2, \\infty}\\sqrt{\\textstyle\\frac{2}{J}(\\text{Var}-\\text{Cov1}+(J-1)\\max(\\text{Cov2}-\\text{Cov3},0))} \\end{split} \\tag{7.17} \\end{equation}\\] The NH is rejected if any of the following equivalent conditions is met (these statements are also true for RRRC analysis, and RRFC analysis to be described next): The observed value of the \\(\\chi^2\\) statistic exceeds the critical value \\(\\chi^2_{1-\\alpha,I-1}\\). The p-value is less than \\(\\alpha\\). The \\((1-\\alpha)\\) confidence interval for at least one treatment-pairing does not include zero. Additional confidence intervals are stated below: The confidence interval for the reader-averaged FOM for each treatment, denoted \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet}}\\). The confidence interval for treatment FOM differences for each reader, denoted \\(CI_{1-\\alpha,FRRC,\\theta_{i j} - \\theta_{i&#39; j}}\\). \\[\\begin{equation} CI_{1-\\alpha,FRRC,\\theta_{i \\bullet}} = \\theta_{i \\bullet} \\pm z_{\\alpha/2}\\sqrt{\\textstyle\\frac{1}{J}(\\text{Var}_i+(J-1)\\max(\\text{Cov2}_i,0)} \\tag{7.18} \\end{equation}\\] \\[\\begin{equation} CI_{1-\\alpha,FRRC,\\theta_{i j} - \\theta_{i&#39; j}} = (\\theta_{i j} - \\theta_{i&#39; j}) \\pm z_{\\alpha/2}\\sqrt{2(\\text{Var}_j - \\text{Cov1}_j)} \\tag{7.19} \\end{equation}\\] In these equations \\(\\text{Var}_i\\) and \\(\\text{Cov2}_i\\) are computed using the data for treatment \\(i\\) only, and \\(\\text{Var}_j\\) and \\(\\text{Cov1}_j\\) are computed using the data for reader \\(j\\) only. 7.5 Random-reader fixed-case When case is treated as a fixed factor, the appropriate F-statistic for testing the null hypothesis \\(NH: \\tau_i = 0 \\; (i=1,1,2,...I)\\) is: \\[\\begin{equation} F_{ORH \\mid C}=\\frac{MS(T)}{MS(TR)} \\tag{7.20} \\end{equation}\\] \\(F_{ORH \\mid C}\\) is distributed as an F-statistic with \\(ndf = I-1\\) and \\(ddf = (I-1)(J-1)\\): \\[\\begin{equation} \\left.\\begin{array}{rcl} \\text{ndf}&amp;=&amp;I-1\\\\ \\text{ddf}&amp;=&amp;(I-1)(J-1)\\\\ F_{ORH \\mid C} &amp;\\sim&amp; F_{\\text{ndf},\\text{ddf}} \\end{array}\\right\\} \\tag{7.21} \\end{equation}\\] Here is a situation where the degrees of freedom agree with those originally proposed by Obuchowski-Rockette. The critical value of the statistic is \\(F_{1-\\alpha,I-1,(I-1)(J-1)}\\), which is that value such that fraction \\((1-\\alpha)\\) of the distribution lies to the left of the critical value. The null hypothesis is rejected if the observed value of the F statistic exceeds the critical value: \\[F_{ORH \\mid C}&gt;F_{1-\\alpha,I-1,(I-1)(J-1)}\\] The p-value of the test is the probability that a random sample from the distribution exceeds the observed value: \\[p=\\Pr(F&gt;F_{ORH \\mid C} \\mid F \\sim F_{1-\\alpha,I-1,(I-1)(J-1)})\\] The \\((1-\\alpha)\\) confidence interval for the reader-averaged difference FOM, \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\), is given by: \\[\\begin{equation} CI_{1-\\alpha,RRFC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}} = (\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}) \\pm t_{\\alpha/2, (I-1)(J-1)}\\sqrt{\\textstyle\\frac{2}{J}MS(TR)} \\tag{7.22} \\end{equation}\\] The \\((1-\\alpha)\\) confidence interval for the reader-averaged FOM for each treatment, \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet}}\\), is given by: \\[\\begin{equation} CI_{1-\\alpha,RRFC,\\theta_{i \\bullet}} = \\theta_{i \\bullet} \\pm t_{\\alpha/2, J-1}\\sqrt{\\textstyle\\frac{1}{J}\\text{MS(R)}_i} \\tag{7.23} \\end{equation}\\] Here \\(\\text{MS(R)}_i\\) is the reader mean-square for modality \\(i\\). 7.6 Single treatment analysis TBA ## Summary{#or-analysis-st-summary} ## Discussion{#or-analysis-st-discussion} ## Chapter References {#or-analysis-st-references} REFERENCES "],["or-applications.html", "Chapter 8 Obuchowski Rockette Applications 8.1 TBA How much finished 8.2 Introduction 8.3 Hand calculation 8.4 RJafroc: dataset02 8.5 RJafroc: dataset04 8.6 RJafroc: dataset04, FROC 8.7 RJafroc: dataset04, FROC/DBM 8.8 Summary 8.9 Discussion 8.10 Tentative 8.11 Chapter References", " Chapter 8 Obuchowski Rockette Applications 8.1 TBA How much finished 80% 8.2 Introduction This chapter illustrates Obuchowski-Rockette analysis with several examples. The first example is a full-blown “hand-calculation” for dataset02, showing explicit implementations of formulae presented in the previous chapter. The second example shows application of the RJafroc package function StSignificanceTesting() to the same dataset: this function encapsulates all formulae and accomplishes all analyses with one function call. The third example shows application of the StSignificanceTesting() function to an ROC dataset derived from the Federica Zanca dataset (Zanca et al. 2009), which has five modalities and four readers. This illustrates multiple treatment pairings (in contrast, dataset02 has only one treatment pairing). The fourth example shows application of StSignificanceTesting() to dataset04, which is an FROC dataset (in contrast to the previous examples, which employed ROC datasets). It illustrates the key difference involved in FROC analysis, namely the choice of figure of merit. The final example again uses dataset04, i.e., FROC data, but this time we use DBM analysis. Since DBM analysis is pseudovalue based, and the figure of merit is not the empirical AUC under the ROC, one may expect to see differences from the previously presented OR analysis on the same dataset. Each analysis involves the following steps: Calculate the figure of merit; Calculate the variance-covariance matrix and mean-squares; Calculate the NH statistic, p-value and confidence interval(s). For each analysis, three sub-analyses are shown: random-reader random-case (RRRC), fixed-reader random-case (FRRC), and random-reader fixed-case (RRFC). 8.3 Hand calculation Dataset dataset02 is well-know in the literature (Van Dyke et al. 1993) as it has been widely used to illustrate advances in ROC methodology. The following code extract the numbers of modalities, readers and cases for dataset02 and defines strings modalityID, readerID and diffTRName that are needed for the hand-calculations. I &lt;- length(dataset02$ratings$NL[,1,1,1]) J &lt;- length(dataset02$ratings$NL[1,,1,1]) K &lt;- length(dataset02$ratings$NL[1,1,,1]) modalityID &lt;- dataset02$descriptions$modalityID readerID &lt;- dataset02$descriptions$readerID diffTRName &lt;- array(dim = choose(I, 2)) ii &lt;- 1 for (i in 1:I) { if (i == I) break for (ip in (i + 1):I) { diffTRName[ii] &lt;- paste0(&quot;trt&quot;, modalityID[i], sep = &quot;-&quot;, &quot;trt&quot;, modalityID[ip]) ii &lt;- ii + 1 } } The dataset consists of I = 2 treatments, J = 5 readers and K = 114 cases. 8.3.1 Random-Reader Random-Case (RRRC) analysis The first step is to calculate the figures of merit using UtilFigureOfMerit(). Note that the FOM argument has to be explicitly specified as there is no default. foms &lt;- UtilFigureOfMerit(dataset02, FOM = &quot;Wilcoxon&quot;) print(foms, digits = 4) #&gt; rdr0 rdr1 rdr2 rdr3 rdr4 #&gt; trt0 0.9196 0.8588 0.9039 0.9731 0.8298 #&gt; trt1 0.9478 0.9053 0.9217 0.9994 0.9300 For example, for the first treatment, \"trt0\", the second reader \"rdr1\" figure of merit is 0.8587762. The next step is to calculate the variance-covariance matrix and the mean-squares. The function UtilORVarComponentsFactorial() returns these quantities, which are saved to vc. The Factorial in the function name is because this code applies to the factorial design. A different function is used for a split-plot design. vc &lt;- UtilORVarComponentsFactorial( dataset02, FOM = &quot;Wilcoxon&quot;, covEstMethod = &quot;jackknife&quot;) print(vc, digits = 4) #&gt; $TRanova #&gt; SS DF MS #&gt; T 0.004796 1 0.004796 #&gt; R 0.015345 4 0.003836 #&gt; TR 0.002204 4 0.000551 #&gt; #&gt; $VarCom #&gt; Estimates Rhos #&gt; VarR 0.0015350 NA #&gt; VarTR 0.0002004 NA #&gt; Cov1 0.0003466 0.4320 #&gt; Cov2 0.0003441 0.4289 #&gt; Cov3 0.0002390 0.2979 #&gt; Var 0.0008023 NA #&gt; #&gt; $IndividualTrt #&gt; DF msREachTrt varEachTrt cov2EachTrt #&gt; trt0 4 0.003083 0.0010141 0.0004840 #&gt; trt1 4 0.001305 0.0005905 0.0002042 #&gt; #&gt; $IndividualRdr #&gt; DF msTEachRdr varEachRdr cov1EachRdr #&gt; rdr0 1 0.0003971 0.0006989 3.735e-04 #&gt; rdr1 1 0.0010829 0.0011061 7.602e-04 #&gt; rdr2 1 0.0001597 0.0008423 3.553e-04 #&gt; rdr3 1 0.0003445 0.0001506 1.083e-06 #&gt; rdr4 1 0.0050161 0.0012136 2.430e-04 The next step is the calculate the NH testing statistic. The relevant equation is Eqn. (7.2). vc contains the values needed in this equation, as follows: MS(T) is in vc$TRanova[\"T\", \"MS\"], whose value is 0.0047962. MS(TR) is in vc$TRanova[\"TR\", \"MS\"], whose value is 5.510306210^{-4}. Cov2 is in vc$VarCom[\"Cov2\", \"Estimates\"], whose value is 3.440748310^{-4}. Cov3 is in vc$VarCom[\"Cov3\", \"Estimates\"], whose value is 2.390283710^{-4}. Applying Eqn. (7.2) one gets (den is the denominator on the right hand side of the referenced equation) and F_ORH_RRRC is the value of the F-statistic: den &lt;- vc$TRanova[&quot;TR&quot;, &quot;MS&quot;] + J* max(vc$VarCom[&quot;Cov2&quot;, &quot;Estimates&quot;] - vc$VarCom[&quot;Cov3&quot;, &quot;Estimates&quot;],0) F_ORH_RRRC &lt;- vc$TRanova[&quot;T&quot;, &quot;MS&quot;]/den print(F_ORH_RRRC, digits = 4) #&gt; [1] 4.456 The F-statistic has numerator degrees of freedom \\(\\text{ndf} = I - 1\\) and denominator degrees of freedom, ddf, to be calculated next. From the previous chapter, ddf is calculated using Eqn. (7.7)). The numerator of ddf is identical to den^2, where den was calculated in the preceding code block. The implementation follows: ddf &lt;- den^2*(I-1)*(J-1)/(vc$TRanova[&quot;TR&quot;, &quot;MS&quot;])^2 print(ddf, digits = 4) #&gt; [1] 15.26 The next step is calculation of the p-value for rejecting the NH The relevant equation is Eqn. (7.9) whose implementation follows: p &lt;- 1 - pf(F_ORH_RRRC, I - 1, ddf) print(p, digits = 4) #&gt; [1] 0.05167 The difference is not significant at \\(\\alpha\\) = 0.05. The next step is to calculate confidence intervals. Since I = 2, their is only one paired difference in reader-averaged FOMs, namely, the first treatment minus the second. trtMeans &lt;- rowMeans(foms) trtMeanDiffs &lt;- trtMeans[1] - trtMeans[2] names(trtMeanDiffs) &lt;- &quot;trt0-trt1&quot; print(trtMeans, digits = 4) #&gt; trt0 trt1 #&gt; 0.8970 0.9408 print(trtMeanDiffs, digits = 4) #&gt; trt0-trt1 #&gt; -0.0438 trtMeanscontains the reader-averaged figures of merit for each treatment. trtMeanDiffscontains the reader-averaged difference figure of merit. From the previous chapter, the \\((1-\\alpha)\\) confidence interval for \\(\\theta_{1 \\bullet} - \\theta_{2 \\bullet}\\) is given by Eqn. (7.10), in which equation the expression inside the square-root symbol is 2/J*den. \\(\\alpha\\), the significance level of the test, is set to 0.05. The implementation follows: alpha &lt;- 0.05 stdErr &lt;- sqrt(2/J*den) t_crit &lt;- abs(qt(alpha/2, ddf)) CI_RRRC &lt;- c(trtMeanDiffs - t_crit*stdErr, trtMeanDiffs + t_crit*stdErr) names(CI_RRRC) &lt;- c(&quot;Lower&quot;, &quot;Upper&quot;) print(CI_RRRC, digits = 4) #&gt; Lower Upper #&gt; -0.0879595 0.0003589 The confidence interval includes zero, which confirms the F-statistic finding that the reader-averaged FOM difference between treatments is not significant. Calculated next is the confidence interval for the reader-averaged FOM for each treatment, i.e. \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet}}\\). The relevant equations are Eqn. (7.11) and Eqn. (7.12). The implementation follows: df_i &lt;- array(dim = I) den_i &lt;- array(dim = I) stdErr_i &lt;- array(dim = I) ci &lt;- array(dim = c(I, 2)) CI_RRRC_IndvlTrt &lt;- data.frame() for (i in 1:I) { den_i[i] &lt;- vc$IndividualTrt[i, &quot;msREachTrt&quot;] + J * max(vc$IndividualTrt[i, &quot;cov2EachTrt&quot;], 0) df_i[i] &lt;- (den_i[i])^2/(vc$IndividualTrt[i, &quot;msREachTrt&quot;])^2 * (J - 1) stdErr_i[i] &lt;- sqrt(den_i[i]/J) ci[i,] &lt;- c(trtMeans[i] + qt(alpha/2, df_i[i]) * stdErr_i[i], trtMeans[i] + qt(1-alpha/2, df_i[i]) * stdErr_i[i]) rowName &lt;- paste0(&quot;trt&quot;, modalityID[i]) CI_RRRC_IndvlTrt &lt;- rbind( CI_RRRC_IndvlTrt, data.frame(Estimate = trtMeans[i], StdErr = stdErr_i[i], DFi = df_i[i], CILower = ci[i,1], CIUpper = ci[i,2], Cov2i = vc$IndividualTrt[i,&quot;cov2EachTrt&quot;], row.names = rowName, stringsAsFactors = FALSE)) } print(CI_RRRC_IndvlTrt, digits = 4) #&gt; Estimate StdErr DFi CILower CIUpper Cov2i #&gt; trt0 0.8970 0.03317 12.74 0.8252 0.9689 0.0004840 #&gt; trt1 0.9408 0.02157 12.71 0.8941 0.9875 0.0002042 8.3.2 Fixed-Reader Random-Case (FRRC) analysis The chi-square statistic is calculated using Eqn. (7.13) and Eqn. (7.15). The needed quantities are in vc. For example, MS(T) is in vc$TRanova[“T”, “MS”], see above. Likewise for Cov2 and Cov3. The remaining needed quantities are: Var is in vc$VarCom[\"Var\", \"Estimates\"], whose value is 8.022882710^{-4}. Cov1 is in vc$VarCom[\"Cov1\", \"Estimates\"], whose value is 3.466137110^{-4}. The degree of freedom is \\(I-1\\). The implementation follows: den_FRRC &lt;- vc$VarCom[&quot;Var&quot;,&quot;Estimates&quot;] - vc$VarCom[&quot;Cov1&quot;,&quot;Estimates&quot;] + (J - 1) * max(vc$VarCom[&quot;Cov2&quot;,&quot;Estimates&quot;] - vc$VarCom[&quot;Cov3&quot;,&quot;Estimates&quot;] ,0) chisqVal &lt;- (I-1)*vc$TRanova[&quot;T&quot;,&quot;MS&quot;]/den_FRRC p &lt;- 1 - pchisq(chisqVal, I - 1) FTests &lt;- data.frame(MS = c(vc$TRanova[&quot;T&quot;, &quot;MS&quot;], den_FRRC), Chisq = c(chisqVal,NA), DF = c(I - 1, NA), p = c(p,NA), row.names = c(&quot;Treatment&quot;, &quot;Error&quot;), stringsAsFactors = FALSE) print(FTests, digits = 4) #&gt; MS Chisq DF p #&gt; Treatment 0.0047962 5.476 1 0.01928 #&gt; Error 0.0008759 NA NA NA Since p &lt; 0.05, one has a significant finding. Freezing reader variability shows a significant difference between the treatments. The downside is that the conclusion applies only to the readers used in the study. The next step is to calculate the confidence interval for the reader-averaged FOM difference, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). The relevant equation is Eqn. (7.17), whose implementation follows. stdErr &lt;- sqrt(2 * den_FRRC/J) zStat &lt;- vector() PrGTz &lt;- vector() CI &lt;- array(dim = c(choose(I,2),2)) for (i in 1:choose(I,2)) { zStat[i] &lt;- trtMeanDiffs[i]/stdErr PrGTz[i] &lt;- 2 * pnorm(abs(zStat[i]), lower.tail = FALSE) CI[i, ] &lt;- c(trtMeanDiffs[i] + qnorm(alpha/2) * stdErr, trtMeanDiffs[i] + qnorm(1-alpha/2) * stdErr) } ciDiffTrtFRRC &lt;- data.frame(Estimate = trtMeanDiffs, StdErr = rep(stdErr, choose(I, 2)), z = zStat, PrGTz = PrGTz, CILower = CI[,1], CIUpper = CI[,2], row.names = diffTRName, stringsAsFactors = FALSE) print(ciDiffTrtFRRC, digits = 4) #&gt; Estimate StdErr z PrGTz CILower CIUpper #&gt; trt0-trt1 -0.0438 0.01872 -2.34 0.01928 -0.08049 -0.007115 Consistent with the chi-square statistic significant finding, one finds that the treatment difference confidence interval does not include zero. The next step is to calculate the confidence interval for the reader-averaged figures of merit for each treatment, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet}}\\). The relevant formula is in Eqn. (7.18), whose implementation follows: stdErr &lt;- vector() df &lt;- vector() CI &lt;- array(dim = c(I,2)) ciAvgRdrEachTrt &lt;- data.frame() for (i in 1:I) { df[i] &lt;- K - 1 stdErr[i] &lt;- sqrt((vc$IndividualTrt[i,&quot;varEachTrt&quot;] + (J-1)*max(vc$IndividualTrt[i,&quot;cov2EachTrt&quot;],0))/J) CI[i, ] &lt;- c(trtMeans[i] + qnorm(alpha/2) * stdErr[i], trtMeans[i] + qnorm(1-alpha/2) * stdErr[i]) rowName &lt;- paste0(&quot;trt&quot;, modalityID[i]) ciAvgRdrEachTrt &lt;- rbind(ciAvgRdrEachTrt, data.frame(Estimate = trtMeans[i], StdErr = stdErr[i], DF = df[i], CILower = CI[i,1], CIUpper = CI[i,2], row.names = rowName, stringsAsFactors = FALSE)) } print(ciAvgRdrEachTrt, digits = 4) #&gt; Estimate StdErr DF CILower CIUpper #&gt; trt0 0.8970 0.02429 113 0.8494 0.9446 #&gt; trt1 0.9408 0.01678 113 0.9080 0.9737 Finally, one calculates confidence intervals for the FOM differences for individual readers, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i j} - \\theta_{i&#39; j}}\\). The relevant formula is in Eqn. (7.19), whose implementation follows: trtMeanDiffs1 &lt;- array(dim = c(J, choose(I, 2))) Reader &lt;- array(dim = c(J, choose(I, 2))) stdErr &lt;- array(dim = c(J, choose(I, 2))) zStat &lt;- array(dim = c(J, choose(I, 2))) trDiffNames &lt;- array(dim = c(J, choose(I, 2))) PrGTz &lt;- array(dim = c(J, choose(I, 2))) CIReader &lt;- array(dim = c(J, choose(I, 2),2)) ciDiffTrtEachRdr &lt;- data.frame() for (j in 1:J) { Reader[j,] &lt;- rep(readerID[j], choose(I, 2)) stdErr[j,] &lt;- sqrt( 2 * (vc$IndividualRdr[j,&quot;varEachRdr&quot;] - vc$IndividualRdr[j,&quot;cov1EachRdr&quot;])) pair &lt;- 1 for (i in 1:I) { if (i == I) break for (ip in (i + 1):I) { trtMeanDiffs1[j, pair] &lt;- foms[i, j] - foms[ip, j] trDiffNames[j,pair] &lt;- diffTRName[pair] zStat[j,pair] &lt;- trtMeanDiffs1[j,pair]/stdErr[j,pair] PrGTz[j,pair] &lt;- 2 * pnorm(abs(zStat[j,pair]), lower.tail = FALSE) CIReader[j, pair,] &lt;- c(trtMeanDiffs1[j,pair] + qnorm(alpha/2) * stdErr[j,pair], trtMeanDiffs1[j,pair] + qnorm(1-alpha/2) * stdErr[j,pair]) rowName &lt;- paste0(&quot;rdr&quot;, Reader[j,pair], &quot;::&quot;, trDiffNames[j, pair]) ciDiffTrtEachRdr &lt;- rbind( ciDiffTrtEachRdr, data.frame(Estimate = trtMeanDiffs1[j, pair], StdErr = stdErr[j,pair], z = zStat[j, pair], PrGTz = PrGTz[j, pair], CILower = CIReader[j, pair,1], CIUpper = CIReader[j, pair,2], row.names = rowName, stringsAsFactors = FALSE)) pair &lt;- pair + 1 } } } print(ciDiffTrtEachRdr, digits = 3) #&gt; Estimate StdErr z PrGTz CILower CIUpper #&gt; rdr0::trt0-trt1 -0.0282 0.0255 -1.105 0.2693 -0.0782 0.02182 #&gt; rdr1::trt0-trt1 -0.0465 0.0263 -1.769 0.0768 -0.0981 0.00501 #&gt; rdr2::trt0-trt1 -0.0179 0.0312 -0.573 0.5668 -0.0790 0.04330 #&gt; rdr3::trt0-trt1 -0.0262 0.0173 -1.518 0.1290 -0.0601 0.00764 #&gt; rdr4::trt0-trt1 -0.1002 0.0441 -2.273 0.0230 -0.1865 -0.01381 The notation in the first column shows the reader and the treatment pairing. For example, rdr1::trt0-trt1 means the FOM difference for reader rdr1. Only the fifth reader, i.e., rdr4, shows a significant difference between the treatments: the p-value is 0.023001 and the confidence interval also does not include zero. The large FOM difference for this reader, -0.100161, was enough to result in a significant finding for FRRC analysis. The FOM differences for the other readers are about a factor of 2.1522491 or more smaller than that for this reader. 8.3.3 Random-Reader Fixed-Case (RRFC) analysis The F-statistic is shown in Eqn. (7.20). This time ndf = \\(I-1\\) and ddf = \\((I-1) \\times (J-1)\\), the values proposed in the Obuchowski-Rockette paper. The implementation follows: den &lt;- vc$TRanova[&quot;TR&quot;,&quot;MS&quot;] f &lt;- vc$TRanova[&quot;T&quot;,&quot;MS&quot;]/den ddf &lt;- ((I - 1) * (J - 1)) p &lt;- 1 - pf(f, I - 1, ddf) FTests_RRFC &lt;- data.frame(DF = c(I-1,(I-1)*(J-1)), MS = c(vc$TRanova[&quot;T&quot;,&quot;MS&quot;],vc$TRanova[&quot;TR&quot;,&quot;MS&quot;]), F = c(f,NA), p = c(p,NA), row.names = c(&quot;T&quot;,&quot;TR&quot;), stringsAsFactors = FALSE) print(FTests_RRFC, digits = 4) #&gt; DF MS F p #&gt; T 1 0.004796 8.704 0.04196 #&gt; TR 4 0.000551 NA NA Freezing case variability also results in a significant finding, but the conclusion is only applicable to the specific case set used in the study. Next one calculates confidence intervals for the reader-averaged FOM differences, the relevant formula is in Eqn. (7.22), whose implementation follows. stdErr &lt;- sqrt(2 * den/J) tStat &lt;- vector() PrGTt &lt;- vector() CI &lt;- array(dim = c(choose(I,2), 2)) for (i in 1:choose(I,2)) { tStat[i] &lt;- trtMeanDiffs[i]/stdErr PrGTt[i] &lt;- 2 * pt(abs(tStat[i]), ddf, lower.tail = FALSE) CI[i, ] &lt;- c(trtMeanDiffs[i] + qt(alpha/2, ddf) * stdErr, trtMeanDiffs[i] + qt(1-alpha/2, ddf) * stdErr) } ciDiffTrt_RRFC &lt;- data.frame(Estimate = trtMeanDiffs, StdErr = rep(stdErr, choose(I, 2)), DF = rep(ddf, choose(I, 2)), t = tStat, PrGTt = PrGTt, CILower = CI[,1], CIUpper = CI[,2], row.names = diffTRName, stringsAsFactors = FALSE) print(ciDiffTrt_RRFC, digits = 4) #&gt; Estimate StdErr DF t PrGTt CILower CIUpper #&gt; trt0-trt1 -0.0438 0.01485 4 -2.95 0.04196 -0.08502 -0.00258 As expected because the overall F-test showed significance, the confidence interval does not include zero (the p-value is identical to that found by the F-test). This completes the hand calculations. 8.4 RJafroc: dataset02 The second example shows application of the RJafroc package function StSignificanceTesting() to dataset02. This function encapsulates all formulae discussed previously and accomplishes the analyses with a single function call. It returns an object, denoted st1 below, that contains all results of the analysis. It is a list with the following components: FOMs, this in turn is a list containing the following data frames: foms, the individual treatment-reader figures of merit, i.e., \\(\\theta_{i j}\\), trtMeans, the treatment figures of merit averaged over readers, i.e., \\(\\theta_{i \\bullet}\\), trtMeanDiffs, the inter-treatment figures of merit differences averaged over readers, i.e., \\(\\theta_{i \\bullet}-\\theta_{i&#39; \\bullet}\\). ANOVA, a list containing the following data frames: TRanova, the treatment-reader ANOVA table, VarCom, Obuchowski-Rockette variance-covariances and correlations, IndividualTrt, the mean-squares, Var and Cov2 calculated over individual treatments, IndividualRdr, the mean-squares, Var and Cov1 calculated over individual readers. RRRC, a list containing the following data frames: FTests, the results of the F-test, ciDiffTrt, the confidence intervals for inter-treatment FOM differences, averaged over readers, denoted \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\) in the previous chapter, ciAvgRdrEachTrt, the confidence intervals for individual treatment FOMs, averaged over readers, denoted \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet}}\\) in the previous chapter. FRRC, a list containing the following data frames: FTests, the results of the F-tests, which in this case specializes to chi-square tests, ciDiffTrt, the confidence intervals for inter-treatment FOM differences, averaged over readers, denoted \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\) in the previous chapter, ciAvgRdrEachTrt, the confidence intervals for individual treatment FOMs, averaged over readers, denoted \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet}}\\) in the previous chapter, ciDiffTrtEachRdr, the confidence intervals for inter-treatment FOM differences for individual readers, denoted \\(CI_{1-\\alpha,FRRC,\\theta_{ij} - \\theta_{i&#39;j}}\\) in the previous chapter, IndividualRdrVarCov1, the individual reader variance-covariances and means squares. RRFC, a list containing the following data frames: FTests, the results of the F-tests, which in this case specializes to chi-square tests, ciDiffTrt, the confidence intervals for inter-treatment FOM differences, averaged over readers, denoted \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\) in the previous chapter, ciAvgRdrEachTrt, the confidence intervals for indvidual treatment FOMs, averaged over readers, denoted \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet}}\\) in the previous chapter. In the interest of clarity, in the first example using the RJafroc package the components of the returned object st1 are listed separately and described explicitly. In the interest of brevity, in subsequent examples the object is listed in its entirety. Online help on the StSignificanceTesting() function is available: ?`StSignificanceTesting` The lower right RStudio panel contains the online description. Click on the small up-and-right pointing arrow icon to expand this to a new window. 8.4.1 Random-Reader Random-Case (RRRC) analysis Since analysisOption is not explicitly specified in the following code, the function StSignificanceTesting performs all three analyses: RRRC, FRRC and RRFC. Likewise, the significance level of the test, also an argument, alpha, defaults to 0.05. The code below applies StSignificanceTesting() and saves the returned object to st1. The first member of this object, a list named FOMs, is then displayed. FOMs contains three data frames: FOMS$foms, the figures of merit for each treatment and reader, FOMS$trtMeans, the figures of merit for each treatment averaged over readers, and FOMS$trtMeanDiffs, the inter-treatment difference figures of merit averaged over readers. The difference is always the first treatment minus the second, etc., in this example, trt0 minus trt1. st1 &lt;- StSignificanceTesting(dataset02, FOM = &quot;Wilcoxon&quot;, method = &quot;OR&quot;) print(st1$FOMs, digits = 4) #&gt; $foms #&gt; rdr0 rdr1 rdr2 rdr3 rdr4 #&gt; trt0 0.9196 0.8588 0.9039 0.9731 0.8298 #&gt; trt1 0.9478 0.9053 0.9217 0.9994 0.9300 #&gt; #&gt; $trtMeans #&gt; Estimate #&gt; trt0 0.8970 #&gt; trt1 0.9408 #&gt; #&gt; $trtMeanDiffs #&gt; Estimate #&gt; trt0-trt1 -0.0438 Displayed next are the variance components and mean-squares contained in the ANOVA list. ANOVA$TRanova contains the treatment-reader ANOVA table, i.e. the sum of squares, the degrees of freedom and the mean-squares, for treatment, reader and treatment-reader factors, i.e., T, R and TR. ANOVA$VarCom contains the OR variance components and the correlations. ANOVA$IndividualTrt contains the quantities necessary for individual treatment analyses. ANOVA$IndividualRdr contains the quantities necessary for individual reader analyses. print(st1$ANOVA, digits = 4) #&gt; $TRanova #&gt; SS DF MS #&gt; T 0.004796 1 0.004796 #&gt; R 0.015345 4 0.003836 #&gt; TR 0.002204 4 0.000551 #&gt; #&gt; $VarCom #&gt; Estimates Rhos #&gt; VarR 0.0015350 NA #&gt; VarTR 0.0002004 NA #&gt; Cov1 0.0003466 0.4320 #&gt; Cov2 0.0003441 0.4289 #&gt; Cov3 0.0002390 0.2979 #&gt; Var 0.0008023 NA #&gt; #&gt; $IndividualTrt #&gt; DF msREachTrt varEachTrt cov2EachTrt #&gt; trt0 4 0.003083 0.0010141 0.0004840 #&gt; trt1 4 0.001305 0.0005905 0.0002042 #&gt; #&gt; $IndividualRdr #&gt; DF msTEachRdr varEachRdr cov1EachRdr #&gt; rdr0 1 0.0003971 0.0006989 3.735e-04 #&gt; rdr1 1 0.0010829 0.0011061 7.602e-04 #&gt; rdr2 1 0.0001597 0.0008423 3.553e-04 #&gt; rdr3 1 0.0003445 0.0001506 1.083e-06 #&gt; rdr4 1 0.0050161 0.0012136 2.430e-04 Displayed next are the results of the RRRC significance test, contained in st1$RRRC. print(st1$RRRC$FTests, digits = 4) #&gt; DF MS FStat p #&gt; Treatment 1.00 0.004796 4.456 0.05167 #&gt; Error 15.26 0.001076 NA NA st1$RRRC$FTests contains the results of the F-tests: the degrees of freedom, the mean-squares, the observed value of the F-statistic and the p-value for rejecting the NH, listed separately, where applicable, for the treatment and error terms. For example, the treatment mean squares is st1$RRRC$FTests[\"Treatment\", \"MS\"] whose value is 0.00479617. print(st1$RRRC$ciDiffTrt, digits = 3) #&gt; Estimate StdErr DF t PrGTt CILower CIUpper #&gt; trt0-trt1 -0.0438 0.0207 15.3 -2.11 0.0517 -0.088 0.000359 st1$RRRC$ciDiffTrt contains the results of the confidence intervals for the inter-treatment difference FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). print(st1$RRRC$ciAvgRdrEachTrt, digits = 4) #&gt; Estimate StdErr DF CILower CIUpper Cov2 #&gt; trt0 0.8970 0.03317 12.74 0.8252 0.9689 0.0004840 #&gt; trt1 0.9408 0.02157 12.71 0.8941 0.9875 0.0002042 st1$RRRC$ciAvgRdrEachTrt contains confidence intervals for each treatment, averaged over readers, i.e., \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet}}\\). 8.4.2 Fixed-Reader Random-Case (FRRC) analysis Displayed next are the results of FRRC analysis, contained in st1$FRRC. st1$FRRC$FTests contains the results of the F-tests: the degrees of freedom, the mean-squares, the observed value of the F-statistic and the p-value for rejecting the NH, listed separately, where applicable, for the treatment and error terms. For example, the treatment mean squares is st1$FRRC$FTests[\"Treatment\", \"MS\"] whose value is 0.00479617. print(st1$FRRC$FTests, digits = 4) #&gt; MS Chisq DF p #&gt; Treatment 0.0047962 5.476 1 0.01928 #&gt; Error 0.0008759 NA NA NA Note that this time the output lists a chi-square distribution observed value, 5.47595324, with degree of freedom \\(df = I -1 = 1\\). The listed mean-squares and the p-value agree with the previously performed hand calculations. For FRRC analysis the value of the chi-square statistic is significant and the p-value is smaller than \\(\\alpha\\). print(st1$FRRC$ciDiffTrt, digits = 4) #&gt; Estimate StdErr z PrGTz CILower CIUpper #&gt; trt0-trt1 -0.0438 0.01872 -2.34 0.01928 -0.08049 -0.007115 st1$FRRC$ciDiffTrt contains confidence intervals for inter-treatment difference FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). The confidence interval excludes zero, and the p-value, listed under PrGTz (for probability greater than z) is smaller than 0.05. One could be using the t-distribution with infinite degrees of freedom, but this is identical to the normal distribution. Hence the listed value is a z statistic, i.e., z = -0.043800322/0.018717483 = -2.34007543. print(st1$FRRC$ciAvgRdrEachTrt, digits = 4) #&gt; Estimate StdErr DF CILower CIUpper #&gt; trt0 0.8970 0.02429 113 0.8494 0.9446 #&gt; trt1 0.9408 0.01678 113 0.9080 0.9737 st1$FRRC$st1$FRRC$ciAvgRdrEachTrt contains confidence intervals for individual treatment FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet}}\\). print(st1$FRRC$ciDiffTrtEachRdr, digits = 3) #&gt; Estimate StdErr z PrGTz CILower CIUpper #&gt; rdr0::trt0-trt1 -0.0282 0.0255 -1.105 0.2693 -0.0782 0.02182 #&gt; rdr1::trt0-trt1 -0.0465 0.0263 -1.769 0.0768 -0.0981 0.00501 #&gt; rdr2::trt0-trt1 -0.0179 0.0312 -0.573 0.5668 -0.0790 0.04330 #&gt; rdr3::trt0-trt1 -0.0262 0.0173 -1.518 0.1290 -0.0601 0.00764 #&gt; rdr4::trt0-trt1 -0.1002 0.0441 -2.273 0.0230 -0.1865 -0.01381 st1$FRRC$st1$FRRC$ciDiffTrtEachRdr contains confidence intervals for inter-treatment difference FOMs, for each reader, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i j} - \\theta_{i&#39; j}}\\). 8.4.3 Random-Reader Fixed-Case (RRFC) analysis print(st1$RRFC$FTests, digits = 4) #&gt; DF MS F p #&gt; T 1 0.004796 8.704 0.04196 #&gt; TR 4 0.000551 NA NA st1$RRFC$FTests contains results of the F-test: the degrees of freedom, the mean-squares, the observed value of the F-statistic and the p-value for rejecting the NH, listed separately, where applicable, for the treatment and treatment-reader terms. The latter is also termed the “error term”. For example, the treatment-reader mean squares is st1$RRFC$FTests[\"TR\", \"MS\"] whose value is 5.5103062210^{-4}. print(st1$RRFC$ciDiffTrt, digits = 4) #&gt; Estimate StdErr DF t PrGTt CILower CIUpper #&gt; trt0-trt1 -0.0438 0.01485 4 -2.95 0.04196 -0.08502 -0.00258 st1$RRFC$ciDiffTrt contains confidence intervals for the inter-treatment paired difference FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). print(st1$RRFC$ciAvgRdrEachTrt, digits = 4) #&gt; Estimate StdErr DF CILower CIUpper #&gt; Trt0 0.8970 0.02483 4 0.8281 0.9660 #&gt; Trt1 0.9408 0.01615 4 0.8960 0.9857 st1$RRFC$ciAvgRdrEachTrt contains confidence intervals for each treatment, averaged over readers, i.e., \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet}}\\). 8.5 RJafroc: dataset04 The third example uses the Federica Zanca dataset (Zanca et al. 2009), i.e., dataset04, which has five modalities and four readers. It illustrates the situation when multiple treatment pairings are involved. In contrast, the previous example had only one treatment pairing. Since this is an FROC dataset, in order to keep it comparable with the previous example, one converts it to an inferred-ROC dataset. The function DfFroc2Roc(dataset04) converts, using the highest-rating, the FROC dataset to an inferred-ROC dataset. The results are contained in st2. As noted earlier, this time the object is listed in its entirety. ds &lt;- DfFroc2Roc(dataset04) # convert to ROC I &lt;- length(ds$ratings$NL[,1,1,1]) J &lt;- length(ds$ratings$NL[1,,1,1]) cat(&quot;I = &quot;, I, &quot;, J = &quot;, J, &quot;\\n&quot;) #&gt; I = 5 , J = 4 st2 &lt;- StSignificanceTesting(ds, FOM = &quot;Wilcoxon&quot;, method = &quot;OR&quot;) print(st2, digits = 3) #&gt; $FOMs #&gt; $FOMs$foms #&gt; rdr1 rdr2 rdr3 rdr4 #&gt; trt1 0.904 0.798 0.812 0.866 #&gt; trt2 0.864 0.845 0.821 0.872 #&gt; trt3 0.813 0.816 0.753 0.857 #&gt; trt4 0.902 0.832 0.789 0.880 #&gt; trt5 0.841 0.773 0.771 0.848 #&gt; #&gt; $FOMs$trtMeans #&gt; Estimate #&gt; trt1 0.845 #&gt; trt2 0.850 #&gt; trt3 0.810 #&gt; trt4 0.851 #&gt; trt5 0.808 #&gt; #&gt; $FOMs$trtMeanDiffs #&gt; Estimate #&gt; trt1-trt2 -0.005100 #&gt; trt1-trt3 0.035325 #&gt; trt1-trt4 -0.005412 #&gt; trt1-trt5 0.036775 #&gt; trt2-trt3 0.040425 #&gt; trt2-trt4 -0.000312 #&gt; trt2-trt5 0.041875 #&gt; trt3-trt4 -0.040737 #&gt; trt3-trt5 0.001450 #&gt; trt4-trt5 0.042187 #&gt; #&gt; #&gt; $ANOVA #&gt; $ANOVA$TRanova #&gt; SS DF MS #&gt; T 0.00759 4 0.001897 #&gt; R 0.02188 3 0.007294 #&gt; TR 0.00555 12 0.000462 #&gt; #&gt; $ANOVA$VarCom #&gt; Estimates Rhos #&gt; VarR 1.28e-03 NA #&gt; VarTR -1.09e-05 NA #&gt; Cov1 2.95e-04 0.374 #&gt; Cov2 2.33e-04 0.296 #&gt; Cov3 2.12e-04 0.269 #&gt; Var 7.89e-04 NA #&gt; #&gt; $ANOVA$IndividualTrt #&gt; DF msREachTrt varEachTrt cov2EachTrt #&gt; trt1 3 0.002422 0.000711 0.000211 #&gt; trt2 3 0.000523 0.000751 0.000266 #&gt; trt3 3 0.001855 0.000876 0.000246 #&gt; trt4 3 0.002578 0.000727 0.000220 #&gt; trt5 3 0.001766 0.000882 0.000222 #&gt; #&gt; $ANOVA$IndividualRdr #&gt; DF msTEachRdr varEachRdr cov1EachRdr #&gt; rdr1 4 0.001551 0.000689 0.000215 #&gt; rdr2 4 0.000794 0.000824 0.000346 #&gt; rdr3 4 0.000786 0.001009 0.000354 #&gt; rdr4 4 0.000153 0.000635 0.000265 #&gt; #&gt; #&gt; $RRRC #&gt; $RRRC$FTests #&gt; DF MS FStat p #&gt; Treatment 4.0 0.001897 3.47 0.0305 #&gt; Error 16.8 0.000547 NA NA #&gt; #&gt; $RRRC$ciDiffTrt #&gt; Estimate StdErr DF t PrGTt CILower CIUpper #&gt; trt1-trt2 -0.005100 0.0165 16.8 -0.3084 0.7616 -0.040021 0.02982 #&gt; trt1-trt3 0.035325 0.0165 16.8 2.1361 0.0477 0.000404 0.07025 #&gt; trt1-trt4 -0.005412 0.0165 16.8 -0.3273 0.7475 -0.040334 0.02951 #&gt; trt1-trt5 0.036775 0.0165 16.8 2.2238 0.0402 0.001854 0.07170 #&gt; trt2-trt3 0.040425 0.0165 16.8 2.4445 0.0258 0.005504 0.07535 #&gt; trt2-trt4 -0.000312 0.0165 16.8 -0.0189 0.9851 -0.035234 0.03461 #&gt; trt2-trt5 0.041875 0.0165 16.8 2.5322 0.0216 0.006954 0.07680 #&gt; trt3-trt4 -0.040737 0.0165 16.8 -2.4634 0.0249 -0.075659 -0.00582 #&gt; trt3-trt5 0.001450 0.0165 16.8 0.0877 0.9312 -0.033471 0.03637 #&gt; trt4-trt5 0.042187 0.0165 16.8 2.5511 0.0208 0.007266 0.07711 #&gt; #&gt; $RRRC$ciAvgRdrEachTrt #&gt; Estimate StdErr DF CILower CIUpper Cov2 #&gt; trt1 0.845 0.0286 5.46 0.774 0.917 0.000211 #&gt; trt2 0.850 0.0199 27.72 0.809 0.891 0.000266 #&gt; trt3 0.810 0.0266 7.04 0.747 0.873 0.000246 #&gt; trt4 0.851 0.0294 5.40 0.777 0.925 0.000220 #&gt; trt5 0.808 0.0258 6.78 0.747 0.870 0.000222 #&gt; #&gt; #&gt; $FRRC #&gt; $FRRC$FTests #&gt; MS Chisq DF p #&gt; Treatment 0.001897 13.6 4 0.00868 #&gt; Error 0.000558 NA NA NA #&gt; #&gt; $FRRC$ciDiffTrt #&gt; Estimate StdErr z PrGTz CILower CIUpper #&gt; trt1-trt2 -0.005100 0.0167 -0.3054 0.7601 -0.03783 0.0276 #&gt; trt1-trt3 0.035325 0.0167 2.1151 0.0344 0.00259 0.0681 #&gt; trt1-trt4 -0.005412 0.0167 -0.3241 0.7459 -0.03815 0.0273 #&gt; trt1-trt5 0.036775 0.0167 2.2019 0.0277 0.00404 0.0695 #&gt; trt2-trt3 0.040425 0.0167 2.4204 0.0155 0.00769 0.0732 #&gt; trt2-trt4 -0.000312 0.0167 -0.0187 0.9851 -0.03305 0.0324 #&gt; trt2-trt5 0.041875 0.0167 2.5073 0.0122 0.00914 0.0746 #&gt; trt3-trt4 -0.040737 0.0167 -2.4392 0.0147 -0.07347 -0.0080 #&gt; trt3-trt5 0.001450 0.0167 0.0868 0.9308 -0.03128 0.0342 #&gt; trt4-trt5 0.042187 0.0167 2.5260 0.0115 0.00945 0.0749 #&gt; #&gt; $FRRC$ciAvgRdrEachTrt #&gt; Estimate StdErr DF CILower CIUpper #&gt; trt1 0.845 0.0183 199 0.809 0.881 #&gt; trt2 0.850 0.0197 199 0.812 0.889 #&gt; trt3 0.810 0.0201 199 0.770 0.849 #&gt; trt4 0.851 0.0186 199 0.814 0.887 #&gt; trt5 0.808 0.0197 199 0.770 0.847 #&gt; #&gt; $FRRC$ciDiffTrtEachRdr #&gt; Estimate StdErr z PrGTz CILower CIUpper #&gt; rdr1::trt1-trt2 0.04000 0.0308 1.2989 0.19400 -0.02036 0.1004 #&gt; rdr1::trt1-trt3 0.09130 0.0308 2.9646 0.00303 0.03094 0.1517 #&gt; rdr1::trt1-trt4 0.00190 0.0308 0.0617 0.95081 -0.05846 0.0623 #&gt; rdr1::trt1-trt5 0.06285 0.0308 2.0408 0.04127 0.00249 0.1232 #&gt; rdr1::trt2-trt3 0.05130 0.0308 1.6658 0.09576 -0.00906 0.1117 #&gt; rdr1::trt2-trt4 -0.03810 0.0308 -1.2372 0.21603 -0.09846 0.0223 #&gt; rdr1::trt2-trt5 0.02285 0.0308 0.7420 0.45811 -0.03751 0.0832 #&gt; rdr1::trt3-trt4 -0.08940 0.0308 -2.9029 0.00370 -0.14976 -0.0290 #&gt; rdr1::trt3-trt5 -0.02845 0.0308 -0.9238 0.35559 -0.08881 0.0319 #&gt; rdr1::trt4-trt5 0.06095 0.0308 1.9791 0.04780 0.00059 0.1213 #&gt; rdr2::trt1-trt2 -0.04650 0.0309 -1.5039 0.13260 -0.10710 0.0141 #&gt; rdr2::trt1-trt3 -0.01815 0.0309 -0.5870 0.55719 -0.07875 0.0424 #&gt; rdr2::trt1-trt4 -0.03330 0.0309 -1.0770 0.28147 -0.09390 0.0273 #&gt; rdr2::trt1-trt5 0.02520 0.0309 0.8150 0.41505 -0.03540 0.0858 #&gt; rdr2::trt2-trt3 0.02835 0.0309 0.9169 0.35918 -0.03225 0.0889 #&gt; rdr2::trt2-trt4 0.01320 0.0309 0.4269 0.66943 -0.04740 0.0738 #&gt; rdr2::trt2-trt5 0.07170 0.0309 2.3190 0.02040 0.01110 0.1323 #&gt; rdr2::trt3-trt4 -0.01515 0.0309 -0.4900 0.62414 -0.07575 0.0454 #&gt; rdr2::trt3-trt5 0.04335 0.0309 1.4021 0.16090 -0.01725 0.1039 #&gt; rdr2::trt4-trt5 0.05850 0.0309 1.8921 0.05848 -0.00210 0.1191 #&gt; rdr3::trt1-trt2 -0.00875 0.0362 -0.2418 0.80896 -0.07969 0.0622 #&gt; rdr3::trt1-trt3 0.05900 0.0362 1.6302 0.10307 -0.01194 0.1299 #&gt; rdr3::trt1-trt4 0.02310 0.0362 0.6383 0.52331 -0.04784 0.0940 #&gt; rdr3::trt1-trt5 0.04060 0.0362 1.1218 0.26196 -0.03034 0.1115 #&gt; rdr3::trt2-trt3 0.06775 0.0362 1.8719 0.06122 -0.00319 0.1387 #&gt; rdr3::trt2-trt4 0.03185 0.0362 0.8800 0.37885 -0.03909 0.1028 #&gt; rdr3::trt2-trt5 0.04935 0.0362 1.3635 0.17271 -0.02159 0.1203 #&gt; rdr3::trt3-trt4 -0.03590 0.0362 -0.9919 0.32124 -0.10684 0.0350 #&gt; rdr3::trt3-trt5 -0.01840 0.0362 -0.5084 0.61118 -0.08934 0.0525 #&gt; rdr3::trt4-trt5 0.01750 0.0362 0.4835 0.62872 -0.05344 0.0884 #&gt; rdr4::trt1-trt2 -0.00515 0.0272 -0.1893 0.84987 -0.05848 0.0482 #&gt; rdr4::trt1-trt3 0.00915 0.0272 0.3363 0.73664 -0.04418 0.0625 #&gt; rdr4::trt1-trt4 -0.01335 0.0272 -0.4907 0.62366 -0.06668 0.0400 #&gt; rdr4::trt1-trt5 0.01845 0.0272 0.6781 0.49770 -0.03488 0.0718 #&gt; rdr4::trt2-trt3 0.01430 0.0272 0.5256 0.59918 -0.03903 0.0676 #&gt; rdr4::trt2-trt4 -0.00820 0.0272 -0.3014 0.76312 -0.06153 0.0451 #&gt; rdr4::trt2-trt5 0.02360 0.0272 0.8674 0.38572 -0.02973 0.0769 #&gt; rdr4::trt3-trt4 -0.02250 0.0272 -0.8270 0.40825 -0.07583 0.0308 #&gt; rdr4::trt3-trt5 0.00930 0.0272 0.3418 0.73249 -0.04403 0.0626 #&gt; rdr4::trt4-trt5 0.03180 0.0272 1.1688 0.24249 -0.02153 0.0851 #&gt; #&gt; $FRRC$IndividualRdrVarCov1 #&gt; varEachRdr cov1EachRdr #&gt; rdr1 0.000689 0.000215 #&gt; rdr2 0.000824 0.000346 #&gt; rdr3 0.001009 0.000354 #&gt; rdr4 0.000635 0.000265 #&gt; #&gt; #&gt; $RRFC #&gt; $RRFC$FTests #&gt; DF MS F p #&gt; T 4 0.001897 4.1 0.0253 #&gt; TR 12 0.000462 NA NA #&gt; #&gt; $RRFC$ciDiffTrt #&gt; Estimate StdErr DF t PrGTt CILower CIUpper #&gt; trt1-trt2 -0.005100 0.0152 12 -0.3355 0.7431 -0.03822 0.02802 #&gt; trt1-trt3 0.035325 0.0152 12 2.3237 0.0385 0.00220 0.06845 #&gt; trt1-trt4 -0.005412 0.0152 12 -0.3560 0.7280 -0.03854 0.02771 #&gt; trt1-trt5 0.036775 0.0152 12 2.4191 0.0324 0.00365 0.06990 #&gt; trt2-trt3 0.040425 0.0152 12 2.6592 0.0208 0.00730 0.07355 #&gt; trt2-trt4 -0.000312 0.0152 12 -0.0206 0.9839 -0.03344 0.03281 #&gt; trt2-trt5 0.041875 0.0152 12 2.7546 0.0175 0.00875 0.07500 #&gt; trt3-trt4 -0.040737 0.0152 12 -2.6797 0.0200 -0.07386 -0.00761 #&gt; trt3-trt5 0.001450 0.0152 12 0.0954 0.9256 -0.03167 0.03457 #&gt; trt4-trt5 0.042187 0.0152 12 2.7751 0.0168 0.00906 0.07531 #&gt; #&gt; $RRFC$ciAvgRdrEachTrt #&gt; Estimate StdErr DF CILower CIUpper #&gt; Trt1 0.845 0.0246 3 0.767 0.923 #&gt; Trt2 0.850 0.0114 3 0.814 0.887 #&gt; Trt3 0.810 0.0215 3 0.741 0.878 #&gt; Trt4 0.851 0.0254 3 0.770 0.931 #&gt; Trt5 0.808 0.0210 3 0.742 0.875 8.5.1 Random-Reader Random-Case (RRRC) analysis st2$RRRC$FTests contains the results of the F-test. In this example ndf = 4 because there are I = 5 treatments. Since the p-value is less than 0.05, at least one treatment-pairing FOM difference is significantly different from zero. st2$RRRC$ciDiffTrt contains the confidence intervals for the inter-treatment difference FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). With I = 5 treatments there are 10 distinct treatment-pairings. Looking at the PrGTt (for probability greater than t) column, one finds six pairings that are significant: trt1-trt3, trt1-trt5, etc. The smallest p-value is for the trt4-trt5 pairing. st2$RRRC$ciAvgRdrEachTrt contains confidence intervals for each treatment, averaged over readers, i.e., \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet}}\\). Looking at the Estimate column one confirms that trt5 has the smallest FOM while trt4 has the highest. 8.5.2 Fixed-Reader Random-Case (FRRC) analysis st2$FRRC$FTests contains results of the F-tests, which in this situation is actually a chi-square test of the NH. Again, ndf = 4 because there are I = 5 treatments. Since the p-value is less than 0.05, at least one treatment-pairing FOM difference is significantly different from zero. st2$FRRC$ciDiffTrt contains confidence intervals for the inter-treatment paired difference FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). With I = 5 treatments there are 10 distinct treatment-pairings. Looking at the PrGTt column, one finds six pairings that are significant: trt1-trt3, trt1-trt5, etc. The smallest p-value is for the trt4-trt5 pairing. st2$FRRC$ciAvgRdrEachTrt contains confidence intervals for each treatment, averaged over readers, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet}}\\). The Estimate column confirms that trt5 has the smallest FOM while trt4 has the highest. 8.5.3 Random-Reader Fixed-Case (RRFC) analysis st2$RRFC$FTests contains the results of the F-test of the NH. Again, ndf = 4 because there are I = 5 treatments. Since the p-value is less than 0.05, at least one treatment-pairing FOM difference is significantly different from zero. st2$RRFC$ciDiffTrt contains confidence intervals for the inter-treatment difference FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). With I = 5 treatments there are 10 distinct treatment-pairings. The PrGTt column shows that six pairings are significant: trt1-trt3, trt1-trt5, etc. The smallest p-value is for the trt4-trt5 pairing. st2$RRFC$ciAvgRdrEachTrt contains confidence intervals for each treatment, averaged over readers, i.e., \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet}}\\). The Estimate column confirms that trt5 has the smallest FOM while trt4 has the highest (the Estimates column is identical for RRRC, FRRC and RRFC analyses). 8.6 RJafroc: dataset04, FROC The fourth example uses dataset04, but this time we use the FROC data, specifically, we do not convert it to inferred-ROC. Since this is an FROC dataset, one needs to use an FROC figure of merit. In this example the weighted AFROC figure of merit FOM = \"wAFROC\" is specified. This is the recommended figure of merit when both normal and abnormal cases are present in the dataset. If the dataset does not contain normal cases, then the weighted AFROC1 figure of merit FOM = \"wAFROC1\" should be specified. The results are contained in st3. As noted earlier, this time the object is listed in its entirety. ds &lt;- dataset04 # do NOT convert to ROC FOM &lt;- &quot;wAFROC&quot; st3 &lt;- StSignificanceTesting(ds, FOM = FOM, method = &quot;OR&quot;) print(st3, digits = 3) #&gt; $FOMs #&gt; $FOMs$foms #&gt; rdr1 rdr3 rdr4 rdr5 #&gt; trt1 0.779 0.725 0.704 0.805 #&gt; trt2 0.787 0.727 0.723 0.804 #&gt; trt3 0.730 0.716 0.672 0.773 #&gt; trt4 0.810 0.743 0.694 0.829 #&gt; trt5 0.749 0.682 0.655 0.771 #&gt; #&gt; $FOMs$trtMeans #&gt; Estimate #&gt; trt1 0.753 #&gt; trt2 0.760 #&gt; trt3 0.723 #&gt; trt4 0.769 #&gt; trt5 0.714 #&gt; #&gt; $FOMs$trtMeanDiffs #&gt; Estimate #&gt; trt1-trt2 -0.00686 #&gt; trt1-trt3 0.03061 #&gt; trt1-trt4 -0.01604 #&gt; trt1-trt5 0.03884 #&gt; trt2-trt3 0.03747 #&gt; trt2-trt4 -0.00918 #&gt; trt2-trt5 0.04570 #&gt; trt3-trt4 -0.04665 #&gt; trt3-trt5 0.00823 #&gt; trt4-trt5 0.05488 #&gt; #&gt; #&gt; $ANOVA #&gt; $ANOVA$TRanova #&gt; SS DF MS #&gt; T 0.00927 4 0.00232 #&gt; R 0.03540 3 0.01180 #&gt; TR 0.00204 12 0.00017 #&gt; #&gt; $ANOVA$VarCom #&gt; Estimates Rhos #&gt; VarR 0.002209 NA #&gt; VarTR -0.000305 NA #&gt; Cov1 0.000422 0.455 #&gt; Cov2 0.000336 0.362 #&gt; Cov3 0.000304 0.328 #&gt; Var 0.000928 NA #&gt; #&gt; $ANOVA$IndividualTrt #&gt; DF msREachTrt varEachTrt cov2EachTrt #&gt; trt1 3 0.00221 0.000877 0.000333 #&gt; trt2 3 0.00171 0.000939 0.000380 #&gt; trt3 3 0.00171 0.000970 0.000297 #&gt; trt4 3 0.00386 0.000859 0.000311 #&gt; trt5 3 0.00298 0.000995 0.000359 #&gt; #&gt; $ANOVA$IndividualRdr #&gt; DF msTEachRdr varEachRdr cov1EachRdr #&gt; rdr1 4 0.001014 0.000883 0.000412 #&gt; rdr3 4 0.000509 0.000897 0.000436 #&gt; rdr4 4 0.000698 0.001171 0.000495 #&gt; rdr5 4 0.000604 0.000762 0.000345 #&gt; #&gt; #&gt; $RRRC #&gt; $RRRC$FTests #&gt; DF MS FStat p #&gt; Treatment 4.0 0.002317 7.8 0.000117 #&gt; Error 36.8 0.000297 NA NA #&gt; #&gt; $RRRC$ciDiffTrt #&gt; Estimate StdErr DF t PrGTt CILower CIUpper #&gt; trt1-trt2 -0.00686 0.0122 36.8 -0.563 5.77e-01 -0.03155 0.01784 #&gt; trt1-trt3 0.03061 0.0122 36.8 2.512 1.65e-02 0.00592 0.05531 #&gt; trt1-trt4 -0.01604 0.0122 36.8 -1.316 1.96e-01 -0.04073 0.00866 #&gt; trt1-trt5 0.03884 0.0122 36.8 3.188 2.92e-03 0.01415 0.06354 #&gt; trt2-trt3 0.03747 0.0122 36.8 3.075 3.96e-03 0.01278 0.06217 #&gt; trt2-trt4 -0.00918 0.0122 36.8 -0.753 4.56e-01 -0.03387 0.01552 #&gt; trt2-trt5 0.04570 0.0122 36.8 3.750 6.07e-04 0.02100 0.07040 #&gt; trt3-trt4 -0.04665 0.0122 36.8 -3.828 4.85e-04 -0.07135 -0.02195 #&gt; trt3-trt5 0.00823 0.0122 36.8 0.675 5.04e-01 -0.01647 0.03292 #&gt; trt4-trt5 0.05488 0.0122 36.8 4.504 6.52e-05 0.03018 0.07957 #&gt; #&gt; $RRRC$ciAvgRdrEachTrt #&gt; Estimate StdErr DF CILower CIUpper Cov2 #&gt; trt1 0.753 0.0298 7.71 0.684 0.822 0.000333 #&gt; trt2 0.760 0.0284 10.69 0.697 0.823 0.000380 #&gt; trt3 0.723 0.0269 8.62 0.661 0.784 0.000297 #&gt; trt4 0.769 0.0357 5.24 0.679 0.860 0.000311 #&gt; trt5 0.714 0.0333 6.59 0.635 0.794 0.000359 #&gt; #&gt; #&gt; $FRRC #&gt; $FRRC$FTests #&gt; MS Chisq DF p #&gt; Treatment 0.002317 15.4 4 0.00393 #&gt; Error 0.000602 NA NA NA #&gt; #&gt; $FRRC$ciDiffTrt #&gt; Estimate StdErr z PrGTz CILower CIUpper #&gt; trt1-trt2 -0.00686 0.0173 -0.395 0.69260 -0.04085 0.0271 #&gt; trt1-trt3 0.03061 0.0173 1.765 0.07753 -0.00338 0.0646 #&gt; trt1-trt4 -0.01604 0.0173 -0.925 0.35518 -0.05003 0.0180 #&gt; trt1-trt5 0.03884 0.0173 2.240 0.02511 0.00485 0.0728 #&gt; trt2-trt3 0.03747 0.0173 2.161 0.03073 0.00348 0.0715 #&gt; trt2-trt4 -0.00918 0.0173 -0.529 0.59662 -0.04317 0.0248 #&gt; trt2-trt5 0.04570 0.0173 2.635 0.00841 0.01171 0.0797 #&gt; trt3-trt4 -0.04665 0.0173 -2.690 0.00715 -0.08064 -0.0127 #&gt; trt3-trt5 0.00823 0.0173 0.474 0.63515 -0.02576 0.0422 #&gt; trt4-trt5 0.05488 0.0173 3.164 0.00155 0.02089 0.0889 #&gt; #&gt; $FRRC$ciAvgRdrEachTrt #&gt; Estimate StdErr DF CILower CIUpper #&gt; trt1 0.753 0.0217 199 0.711 0.796 #&gt; trt2 0.760 0.0228 199 0.715 0.805 #&gt; trt3 0.723 0.0216 199 0.680 0.765 #&gt; trt4 0.769 0.0212 199 0.728 0.811 #&gt; trt5 0.714 0.0228 199 0.670 0.759 #&gt; #&gt; $FRRC$ciDiffTrtEachRdr #&gt; Estimate StdErr z PrGTz CILower CIUpper #&gt; rdr1::trt1-trt2 -0.00773 0.0307 -0.2520 0.80105 -0.06788 0.052416 #&gt; rdr1::trt1-trt3 0.04957 0.0307 1.6154 0.10622 -0.01057 0.109724 #&gt; rdr1::trt1-trt4 -0.03087 0.0307 -1.0058 0.31451 -0.09102 0.029282 #&gt; rdr1::trt1-trt5 0.03047 0.0307 0.9928 0.32083 -0.02968 0.090616 #&gt; rdr1::trt2-trt3 0.05731 0.0307 1.8674 0.06185 -0.00284 0.117457 #&gt; rdr1::trt2-trt4 -0.02313 0.0307 -0.7538 0.45097 -0.08328 0.037016 #&gt; rdr1::trt2-trt5 0.03820 0.0307 1.2448 0.21322 -0.02195 0.098349 #&gt; rdr1::trt3-trt4 -0.08044 0.0307 -2.6212 0.00876 -0.14059 -0.020293 #&gt; rdr1::trt3-trt5 -0.01911 0.0307 -0.6226 0.53352 -0.07926 0.041041 #&gt; rdr1::trt4-trt5 0.06133 0.0307 1.9986 0.04566 0.00118 0.121482 #&gt; rdr3::trt1-trt2 -0.00201 0.0304 -0.0661 0.94726 -0.06152 0.057504 #&gt; rdr3::trt1-trt3 0.00913 0.0304 0.3008 0.76357 -0.05038 0.068646 #&gt; rdr3::trt1-trt4 -0.01822 0.0304 -0.6002 0.54836 -0.07774 0.041287 #&gt; rdr3::trt1-trt5 0.04262 0.0304 1.4035 0.16046 -0.01690 0.102129 #&gt; rdr3::trt2-trt3 0.01114 0.0304 0.3669 0.71367 -0.04837 0.070654 #&gt; rdr3::trt2-trt4 -0.01622 0.0304 -0.5341 0.59329 -0.07573 0.043296 #&gt; rdr3::trt2-trt5 0.04462 0.0304 1.4697 0.14165 -0.01489 0.104137 #&gt; rdr3::trt3-trt4 -0.02736 0.0304 -0.9010 0.36758 -0.08687 0.032154 #&gt; rdr3::trt3-trt5 0.03348 0.0304 1.1027 0.27014 -0.02603 0.092996 #&gt; rdr3::trt4-trt5 0.06084 0.0304 2.0037 0.04510 0.00133 0.120354 #&gt; rdr4::trt1-trt2 -0.01899 0.0368 -0.5166 0.60543 -0.09104 0.053061 #&gt; rdr4::trt1-trt3 0.03132 0.0368 0.8519 0.39429 -0.04074 0.103370 #&gt; rdr4::trt1-trt4 0.00927 0.0368 0.2521 0.80099 -0.06279 0.081320 #&gt; rdr4::trt1-trt5 0.04845 0.0368 1.3179 0.18753 -0.02360 0.120503 #&gt; rdr4::trt2-trt3 0.05031 0.0368 1.3685 0.17116 -0.02174 0.122361 #&gt; rdr4::trt2-trt4 0.02826 0.0368 0.7687 0.44209 -0.04379 0.100311 #&gt; rdr4::trt2-trt5 0.06744 0.0368 1.8345 0.06658 -0.00461 0.139495 #&gt; rdr4::trt3-trt4 -0.02205 0.0368 -0.5998 0.54864 -0.09410 0.050003 #&gt; rdr4::trt3-trt5 0.01713 0.0368 0.4661 0.64118 -0.05492 0.089186 #&gt; rdr4::trt4-trt5 0.03918 0.0368 1.0659 0.28649 -0.03287 0.111236 #&gt; rdr5::trt1-trt2 0.00131 0.0289 0.0453 0.96385 -0.05526 0.057881 #&gt; rdr5::trt1-trt3 0.03243 0.0289 1.1237 0.26116 -0.02414 0.089006 #&gt; rdr5::trt1-trt4 -0.02432 0.0289 -0.8425 0.39953 -0.08089 0.032256 #&gt; rdr5::trt1-trt5 0.03384 0.0289 1.1724 0.24102 -0.02273 0.090414 #&gt; rdr5::trt2-trt3 0.03112 0.0289 1.0783 0.28089 -0.02545 0.087698 #&gt; rdr5::trt2-trt4 -0.02563 0.0289 -0.8878 0.37466 -0.08220 0.030948 #&gt; rdr5::trt2-trt5 0.03253 0.0289 1.1271 0.25969 -0.02404 0.089106 #&gt; rdr5::trt3-trt4 -0.05675 0.0289 -1.9661 0.04929 -0.11332 -0.000177 #&gt; rdr5::trt3-trt5 0.00141 0.0289 0.0488 0.96109 -0.05516 0.057981 #&gt; rdr5::trt4-trt5 0.05816 0.0289 2.0149 0.04391 0.00159 0.114731 #&gt; #&gt; $FRRC$IndividualRdrVarCov1 #&gt; varEachRdr cov1EachRdr #&gt; rdr1 0.000883 0.000412 #&gt; rdr3 0.000897 0.000436 #&gt; rdr4 0.001171 0.000495 #&gt; rdr5 0.000762 0.000345 #&gt; #&gt; #&gt; $RRFC #&gt; $RRFC$FTests #&gt; DF MS F p #&gt; T 4 0.00232 13.7 0.000202 #&gt; TR 12 0.00017 NA NA #&gt; #&gt; $RRFC$ciDiffTrt #&gt; Estimate StdErr DF t PrGTt CILower CIUpper #&gt; trt1-trt2 -0.00686 0.00921 12 -0.745 4.71e-01 -0.0269 0.01321 #&gt; trt1-trt3 0.03061 0.00921 12 3.324 6.06e-03 0.0106 0.05068 #&gt; trt1-trt4 -0.01604 0.00921 12 -1.741 1.07e-01 -0.0361 0.00403 #&gt; trt1-trt5 0.03884 0.00921 12 4.218 1.19e-03 0.0188 0.05891 #&gt; trt2-trt3 0.03747 0.00921 12 4.069 1.56e-03 0.0174 0.05754 #&gt; trt2-trt4 -0.00918 0.00921 12 -0.997 3.39e-01 -0.0292 0.01089 #&gt; trt2-trt5 0.04570 0.00921 12 4.963 3.29e-04 0.0256 0.06576 #&gt; trt3-trt4 -0.04665 0.00921 12 -5.066 2.77e-04 -0.0667 -0.02659 #&gt; trt3-trt5 0.00823 0.00921 12 0.894 3.89e-01 -0.0118 0.02829 #&gt; trt4-trt5 0.05488 0.00921 12 5.959 6.62e-05 0.0348 0.07494 #&gt; #&gt; $RRFC$ciAvgRdrEachTrt #&gt; Estimate StdErr DF CILower CIUpper #&gt; Trt1 0.753 0.0235 3 0.678 0.828 #&gt; Trt2 0.760 0.0207 3 0.694 0.826 #&gt; Trt3 0.723 0.0207 3 0.657 0.788 #&gt; Trt4 0.769 0.0311 3 0.670 0.868 #&gt; Trt5 0.714 0.0273 3 0.627 0.801 8.6.1 Random-Reader Random-Case (RRRC) analysis st3$RRRC$FTests contains the results of the F-tests. The p-value is much smaller than that obtained after converting to an ROC dataset. Specifically, for FROC analysis, the p-value is 1.1710500410^{-4} while that for ROC analysis is 0.03054456. The F-statistic and the ddf are both larger for FROC analysis, both of of which result in increased probability of rejecting the NH, i.e., FROC analysis has greater power than ROC analysis. The increased power of FROC analysis has been confirmed in simulation studies (Chakraborty 2002). st3$RRRC$ciDiffTrt contains the confidence intervals for the inter-treatment difference FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). With I = 5 treatments there are 10 distinct treatment-pairings. Looking at the PrGTt (for probability greater than t) column, one finds six pairings that are significant: trt1-trt3, trt1-trt5, etc. The smallest p-value is for the trt4-trt5 pairing. The findings are consistent with the prior ROC analysis, the difference being the smaller p-values. st3$RRRC$ciAvgRdrEachTrt contains confidence intervals for each treatment, averaged over readers, i.e., \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet}}\\). Looking at the Estimate column one confirms that trt5 has the smallest FOM while trt4 has the highest (the Estimates column is identical for RRRC, FRRC and RRFC analyses). st3$RRRC$st1$RRRC$ciDiffTrtEachRdr contains confidence intervals for inter-treatment difference FOMs, for each reader, i.e., \\(CI_{1-\\alpha,RRRC,\\theta_{i j} - \\theta_{i&#39; j}}\\). 8.6.2 Fixed-Reader Random-Case (FRRC) analysis st3$FRRC$FTests contains results of the F-test of the NH. Again, ndf = 4 because there are I = 5 treatments. Since the p-value is less than 0.05, at least one treatment-pairing FOM difference is significantly different from zero. st3$FRRC$ciDiffTrt contains the confidence intervals for the inter-treatment paired difference FOMs averaged over readers, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). With I = 5 treatments there are 10 distinct treatment-pairings. Looking at the PrGTt (for probability greater than t) column, one finds six pairings that are significant: trt1-trt3, trt1-trt5, etc. The smallest p-value is for the trt4-trt5 pairing. The findings are consistent with the prior ROC analysis, the difference being the smaller p-values. st3$FRRC$ciAvgRdrEachTrt contains confidence intervals for each treatment, averaged over readers, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet}}\\). Looking at the Estimate column one confirms that trt5 has the smallest FOM while trt4 has the highest. st3$FRRC$st1$FRRC$ciDiffTrtEachRdr contains confidence intervals for inter-treatment difference FOMs, for each reader, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i j} - \\theta_{i&#39; j}}\\). 8.6.3 Random-Reader Fixed-Case (RRFC) analysis st3$RRFC$FTests contains results of the F-test of the NH. Again, ndf = 4 because there are I = 5 treatments. Since the p-value is less than 0.05, at least one treatment-pairing FOM difference is significantly different from zero. st3$RRFC$ciDiffTrt contains confidence intervals for the inter-treatment difference FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). st3$RRFC$ciAvgRdrEachTrt contains confidence intervals for each treatment, averaged over readers, i.e., \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet}}\\). The Estimate column confirms that trt5 has the smallest FOM while trt4 has the highest (the Estimates column is identical for RRRC, FRRC and RRFC analyses). 8.7 RJafroc: dataset04, FROC/DBM The fourth example again uses dataset04, i.e., FROC data, but this time using DBM analysis. The key difference below is in the call to StSignificanceTesting() function, where we set method = \"DBM\". Since DBM analysis is pseudovalue based, and the figure of merit is not the empirical AUC under the ROC, one expects to see differences from the previously presented OR analysis, contained in st3. st4 &lt;- StSignificanceTesting(ds, FOM = FOM, method = &quot;DBM&quot;) # Note: using DBM analysis print(st4, digits = 3) #&gt; $FOMs #&gt; $FOMs$foms #&gt; rdr1 rdr3 rdr4 rdr5 #&gt; trt1 0.779 0.725 0.704 0.805 #&gt; trt2 0.787 0.727 0.723 0.804 #&gt; trt3 0.730 0.716 0.672 0.773 #&gt; trt4 0.810 0.743 0.694 0.829 #&gt; trt5 0.749 0.682 0.655 0.771 #&gt; #&gt; $FOMs$trtMeans #&gt; Estimate #&gt; trt1 0.753 #&gt; trt2 0.760 #&gt; trt3 0.723 #&gt; trt4 0.769 #&gt; trt5 0.714 #&gt; #&gt; $FOMs$trtMeanDiffs #&gt; Estimate #&gt; trt1-trt2 -0.00686 #&gt; trt1-trt3 0.03061 #&gt; trt1-trt4 -0.01604 #&gt; trt1-trt5 0.03884 #&gt; trt2-trt3 0.03747 #&gt; trt2-trt4 -0.00918 #&gt; trt2-trt5 0.04570 #&gt; trt3-trt4 -0.04665 #&gt; trt3-trt5 0.00823 #&gt; trt4-trt5 0.05488 #&gt; #&gt; #&gt; $ANOVA #&gt; $ANOVA$TRCanova #&gt; SS DF MS #&gt; T 1.853 4 0.4633 #&gt; R 7.081 3 2.3603 #&gt; C 289.602 199 1.4553 #&gt; TR 0.407 12 0.0339 #&gt; TC 95.772 796 0.1203 #&gt; RC 126.902 597 0.2126 #&gt; TRC 226.479 2388 0.0948 #&gt; Total 748.096 3999 NA #&gt; #&gt; $ANOVA$VarCom #&gt; Estimates #&gt; VarR 0.002209 #&gt; VarC 0.060862 #&gt; VarTR -0.000305 #&gt; VarTC 0.006369 #&gt; VarRC 0.023545 #&gt; VarErr 0.094841 #&gt; #&gt; $ANOVA$IndividualTrt #&gt; DF Trt1 Trt2 Trt3 Trt4 Trt5 #&gt; msR 3 0.442 0.343 0.342 0.772 0.597 #&gt; msC 199 0.375 0.416 0.372 0.358 0.415 #&gt; msRC 597 0.109 0.112 0.134 0.110 0.127 #&gt; #&gt; $ANOVA$IndividualRdr #&gt; DF rdr1 rdr3 rdr4 rdr5 #&gt; msT 4 0.2027 0.1019 0.140 0.1208 #&gt; msC 199 0.5064 0.5278 0.630 0.4285 #&gt; msTC 796 0.0942 0.0922 0.135 0.0833 #&gt; #&gt; #&gt; $RRRC #&gt; $RRRC$FTests #&gt; DF MS FStat p #&gt; Treatment 4.0 0.4633 7.8 0.000117 #&gt; Error 36.8 0.0594 NA NA #&gt; #&gt; $RRRC$ciDiffTrt #&gt; Estimate StdErr DF t PrGTt CILower CIUpper #&gt; trt1-trt2 -0.00686 0.0122 36.8 -0.563 5.77e-01 -0.03155 0.01784 #&gt; trt1-trt3 0.03061 0.0122 36.8 2.512 1.65e-02 0.00592 0.05531 #&gt; trt1-trt4 -0.01604 0.0122 36.8 -1.316 1.96e-01 -0.04073 0.00866 #&gt; trt1-trt5 0.03884 0.0122 36.8 3.188 2.92e-03 0.01415 0.06354 #&gt; trt2-trt3 0.03747 0.0122 36.8 3.075 3.96e-03 0.01278 0.06217 #&gt; trt2-trt4 -0.00918 0.0122 36.8 -0.753 4.56e-01 -0.03387 0.01552 #&gt; trt2-trt5 0.04570 0.0122 36.8 3.750 6.07e-04 0.02100 0.07040 #&gt; trt3-trt4 -0.04665 0.0122 36.8 -3.828 4.85e-04 -0.07135 -0.02195 #&gt; trt3-trt5 0.00823 0.0122 36.8 0.675 5.04e-01 -0.01647 0.03292 #&gt; trt4-trt5 0.05488 0.0122 36.8 4.504 6.52e-05 0.03018 0.07957 #&gt; #&gt; $RRRC$ciAvgRdrEachTrt #&gt; Estimate StdErr DF CILower CIUpper #&gt; trt1 0.753 0.0298 7.71 0.684 0.822 #&gt; trt2 0.760 0.0284 10.69 0.697 0.823 #&gt; trt3 0.723 0.0269 8.62 0.661 0.784 #&gt; trt4 0.769 0.0357 5.24 0.679 0.860 #&gt; trt5 0.714 0.0333 6.59 0.635 0.794 #&gt; #&gt; #&gt; $FRRC #&gt; $FRRC$FTests #&gt; DF MS FStat p #&gt; Treatment 4 0.463 3.85 0.00416 #&gt; Error 796 0.120 NA NA #&gt; #&gt; $FRRC$ciDiffTrt #&gt; Estimate StdErr DF t PrGTt CILower CIUpper #&gt; trt1-trt2 -0.00686 0.0173 796 -0.395 0.69271 -0.04090 0.0272 #&gt; trt1-trt3 0.03061 0.0173 796 1.765 0.07791 -0.00343 0.0647 #&gt; trt1-trt4 -0.01604 0.0173 796 -0.925 0.35546 -0.05008 0.0180 #&gt; trt1-trt5 0.03884 0.0173 796 2.240 0.02539 0.00480 0.0729 #&gt; trt2-trt3 0.03747 0.0173 796 2.161 0.03103 0.00343 0.0715 #&gt; trt2-trt4 -0.00918 0.0173 796 -0.529 0.59677 -0.04322 0.0249 #&gt; trt2-trt5 0.04570 0.0173 796 2.635 0.00858 0.01166 0.0797 #&gt; trt3-trt4 -0.04665 0.0173 796 -2.690 0.00730 -0.08069 -0.0126 #&gt; trt3-trt5 0.00823 0.0173 796 0.474 0.63528 -0.02581 0.0423 #&gt; trt4-trt5 0.05488 0.0173 796 3.164 0.00161 0.02084 0.0889 #&gt; #&gt; $FRRC$ciAvgRdrEachTrt #&gt; Estimate StdErr DF CILower CIUpper #&gt; trt1 0.753 0.0217 199 0.711 0.796 #&gt; trt2 0.760 0.0228 199 0.715 0.805 #&gt; trt3 0.723 0.0216 199 0.680 0.765 #&gt; trt4 0.769 0.0212 199 0.728 0.811 #&gt; trt5 0.714 0.0228 199 0.669 0.759 #&gt; #&gt; $FRRC$ciDiffTrtEachRdr #&gt; Estimate StdErr DF t PrGTt CILower CIUpper #&gt; rdr1::trt1-trt2 -0.00773 0.0307 199 -0.2520 0.80131 -0.068250 0.052784 #&gt; rdr1::trt1-trt3 0.04957 0.0307 199 1.6154 0.10781 -0.010942 0.110092 #&gt; rdr1::trt1-trt4 -0.03087 0.0307 199 -1.0058 0.31573 -0.091384 0.029650 #&gt; rdr1::trt1-trt5 0.03047 0.0307 199 0.9928 0.32203 -0.030050 0.090984 #&gt; rdr1::trt2-trt3 0.05731 0.0307 199 1.8674 0.06332 -0.003209 0.117825 #&gt; rdr1::trt2-trt4 -0.02313 0.0307 199 -0.7538 0.45186 -0.083650 0.037384 #&gt; rdr1::trt2-trt5 0.03820 0.0307 199 1.2448 0.21469 -0.022317 0.098717 #&gt; rdr1::trt3-trt4 -0.08044 0.0307 199 -2.6212 0.00944 -0.140959 -0.019925 #&gt; rdr1::trt3-trt5 -0.01911 0.0307 199 -0.6226 0.53423 -0.079625 0.041409 #&gt; rdr1::trt4-trt5 0.06133 0.0307 199 1.9986 0.04702 0.000816 0.121850 #&gt; rdr3::trt1-trt2 -0.00201 0.0304 199 -0.0661 0.94733 -0.061885 0.057868 #&gt; rdr3::trt1-trt3 0.00913 0.0304 199 0.3008 0.76389 -0.050743 0.069010 #&gt; rdr3::trt1-trt4 -0.01822 0.0304 199 -0.6002 0.54904 -0.078102 0.041652 #&gt; rdr3::trt1-trt5 0.04262 0.0304 199 1.4035 0.16202 -0.017260 0.102493 #&gt; rdr3::trt2-trt3 0.01114 0.0304 199 0.3669 0.71406 -0.048735 0.071018 #&gt; rdr3::trt2-trt4 -0.01622 0.0304 199 -0.5341 0.59389 -0.076093 0.043660 #&gt; rdr3::trt2-trt5 0.04462 0.0304 199 1.4697 0.14323 -0.015252 0.104502 #&gt; rdr3::trt3-trt4 -0.02736 0.0304 199 -0.9010 0.36867 -0.087235 0.032518 #&gt; rdr3::trt3-trt5 0.03348 0.0304 199 1.1027 0.27148 -0.026393 0.093360 #&gt; rdr3::trt4-trt5 0.06084 0.0304 199 2.0037 0.04645 0.000965 0.120718 #&gt; rdr4::trt1-trt2 -0.01899 0.0368 199 -0.5166 0.60600 -0.091485 0.053502 #&gt; rdr4::trt1-trt3 0.03132 0.0368 199 0.8519 0.39531 -0.041177 0.103810 #&gt; rdr4::trt1-trt4 0.00927 0.0368 199 0.2521 0.80125 -0.063227 0.081760 #&gt; rdr4::trt1-trt5 0.04845 0.0368 199 1.3179 0.18904 -0.024044 0.120944 #&gt; rdr4::trt2-trt3 0.05031 0.0368 199 1.3685 0.17271 -0.022185 0.122802 #&gt; rdr4::trt2-trt4 0.02826 0.0368 199 0.7687 0.44300 -0.044235 0.100752 #&gt; rdr4::trt2-trt5 0.06744 0.0368 199 1.8345 0.06807 -0.005052 0.139935 #&gt; rdr4::trt3-trt4 -0.02205 0.0368 199 -0.5998 0.54932 -0.094544 0.050444 #&gt; rdr4::trt3-trt5 0.01713 0.0368 199 0.4661 0.64168 -0.055360 0.089627 #&gt; rdr4::trt4-trt5 0.03918 0.0368 199 1.0659 0.28778 -0.033310 0.111677 #&gt; rdr5::trt1-trt2 0.00131 0.0289 199 0.0453 0.96389 -0.055610 0.058227 #&gt; rdr5::trt1-trt3 0.03243 0.0289 199 1.1237 0.26251 -0.024485 0.089352 #&gt; rdr5::trt1-trt4 -0.02432 0.0289 199 -0.8425 0.40055 -0.081235 0.032602 #&gt; rdr5::trt1-trt5 0.03384 0.0289 199 1.1724 0.24242 -0.023077 0.090760 #&gt; rdr5::trt2-trt3 0.03112 0.0289 199 1.0783 0.28219 -0.025794 0.088044 #&gt; rdr5::trt2-trt4 -0.02563 0.0289 199 -0.8878 0.37573 -0.082544 0.031294 #&gt; rdr5::trt2-trt5 0.03253 0.0289 199 1.1271 0.26105 -0.024385 0.089452 #&gt; rdr5::trt3-trt4 -0.05675 0.0289 199 -1.9661 0.05068 -0.113669 0.000169 #&gt; rdr5::trt3-trt5 0.00141 0.0289 199 0.0488 0.96113 -0.055510 0.058327 #&gt; rdr5::trt4-trt5 0.05816 0.0289 199 2.0149 0.04526 0.001240 0.115077 #&gt; #&gt; #&gt; $RRFC #&gt; $RRFC$FTests #&gt; DF MS FStat p #&gt; Treatment 4 0.4633 13.7 0.000202 #&gt; Error 12 0.0339 NA NA #&gt; #&gt; $RRFC$ciDiffTrt #&gt; Estimate StdErr DF t PrGTt CILower CIUpper #&gt; trt1-trt2 -0.00686 0.00921 12 -0.745 4.71e-01 -0.0269 0.01321 #&gt; trt1-trt3 0.03061 0.00921 12 3.324 6.06e-03 0.0106 0.05068 #&gt; trt1-trt4 -0.01604 0.00921 12 -1.741 1.07e-01 -0.0361 0.00403 #&gt; trt1-trt5 0.03884 0.00921 12 4.218 1.19e-03 0.0188 0.05891 #&gt; trt2-trt3 0.03747 0.00921 12 4.069 1.56e-03 0.0174 0.05754 #&gt; trt2-trt4 -0.00918 0.00921 12 -0.997 3.39e-01 -0.0292 0.01089 #&gt; trt2-trt5 0.04570 0.00921 12 4.963 3.29e-04 0.0256 0.06576 #&gt; trt3-trt4 -0.04665 0.00921 12 -5.066 2.77e-04 -0.0667 -0.02659 #&gt; trt3-trt5 0.00823 0.00921 12 0.894 3.89e-01 -0.0118 0.02829 #&gt; trt4-trt5 0.05488 0.00921 12 5.959 6.62e-05 0.0348 0.07494 #&gt; #&gt; $RRFC$ciAvgRdrEachTrt #&gt; Estimate StdErr DF CILower CIUpper #&gt; trt1 0.753 0.0235 3 0.678 0.828 #&gt; trt2 0.760 0.0207 3 0.694 0.826 #&gt; trt3 0.723 0.0207 3 0.657 0.788 #&gt; trt4 0.769 0.0311 3 0.670 0.868 #&gt; trt5 0.714 0.0273 3 0.627 0.801 8.7.1 Random-Reader Random-Case (RRRC) analysis st4$RRRC$FTests contains the results of the F-test of the NH. st4$RRRC$ciDiffTrt contains the confidence intervals for the inter-treatment difference FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). st4$RRRC$ciAvgRdrEachTrt contains confidence intervals for each treatment, averaged over readers, i.e., \\(CI_{1-\\alpha,RRRC,\\theta_{i \\bullet}}\\). 8.7.2 Fixed-Reader Random-Case (FRRC) analysis st4$FRRC$FTests contains results of the F-test of the NH, which is actually a chi-square statistic. st4$FRRC$ciDiffTrt contains confidence intervals for the inter-treatment difference FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). With I = 5 treatments there are 10 distinct treatment-pairings. Looking at the PrGTt (for probability greater than t) column, one finds six pairings that are significant: trt1-trt3, trt1-trt5, etc. The smallest p-value is for the trt4-trt5 pairing. The findings are consistent with the prior ROC analysis, the difference being the smaller p-values. st4$FRRC$ciAvgRdrEachTrt contains confidence intervals for each treatment, averaged over readers, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i \\bullet}}\\). st4$FRRC$ciDiffTrtEachRdr contains confidence intervals for inter-treatment difference FOMs, for each reader, i.e., \\(CI_{1-\\alpha,FRRC,\\theta_{i j} - \\theta_{i&#39; j}}\\). 8.7.3 Random-Reader Fixed-Case (RRFC) analysis st4$RRFC$FTests contains the results of the F-test of the NH. st4$RRFC$ciDiffTrt contains confidence intervals for the inter-treatment paired difference FOMs, averaged over readers, i.e., \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet} - \\theta_{i&#39; \\bullet}}\\). st4$RRFC$ciAvgRdrEachTrt contains confidence intervals for each treatment, averaged over readers, i.e., \\(CI_{1-\\alpha,RRFC,\\theta_{i \\bullet}}\\). The Estimate column confirms that trt5 has the smallest FOM while trt4 has the highest (the Estimates column is identical for RRRC, FRRC and RRFC analyses). 8.8 Summary 8.9 Discussion 8.10 Tentative ds1 &lt;- dataset04 # do NOT convert to ROC # comment/uncomment following code to disable/enable unequal weights # K2 &lt;- length(ds1$ratings$LL[1,1,,1]) # weights &lt;- array(dim = c(K2, max(ds1$lesions$perCase))) # perCase &lt;- ds1$lesions$perCase # for (k2 in 1:K2) { # sum &lt;- 0 # for (el in 1:perCase[k2]) { # weights[k2,el] &lt;- 1/el # sum &lt;- sum + 1/el # } # weights[k2,1:perCase[k2]] &lt;- weights[k2,1:perCase[k2]] / sum # } # ds1$lesions$weights &lt;- weights ds &lt;- ds1 FOM &lt;- &quot;wAFROC&quot; # also try wAFROC1, MaxLLF and MaxNLF st5 &lt;- StSignificanceTesting(ds, FOM = FOM, method = &quot;OR&quot;) print(st5, digits = 4) A comparison was run between results of OR and DBM for the FROC dataset. Except for FRRC, where differences are expected (because ddf in the former is \\(\\infty\\), while that in the later is \\((I-1)\\times(J-1))\\), the results for the p-values were identical. This was true for the following FOMs: wAFROC, with equal and unequal weights, and MaxLLF. The confidence intervals (again, excluding FRRC) were identical for FOM = wAFROC. Slight differences were observed for FOM = MaxLLF. 8.11 Chapter References REFERENCES "],["roc-sample-size-dbm.html", "Chapter 9 Sample size estimation: DBM method 9.1 TBA How much finished 9.2 Introduction 9.3 Statistical Power 9.4 Formulae for fixed-reader random-case (FRRC) sample size estimation 9.5 Discussion/Summary/2 9.6 Chapter References", " Chapter 9 Sample size estimation: DBM method 9.1 TBA How much finished 80% 9.2 Introduction The question addressed here is “how many readers and cases”, usually abbreviated to “sample-size”, should one employ to conduct a “well-planned” ROC study. The reasons for the quotes around “well-planned” will shortly become clear. If cost were no concern, the reply would be: “as many readers and cases as one can get”. There are other causes affecting sample-size, e.g., the data collection paradigm and analysis, however, this chapter is restricted to the MRMC ROC data collection paradigm, with data analyzed by the DBM method described in a previous chapter. The next chapter will deal with data analyzed by the OR method. It turns out that provided one can specify conceptually valid effect-sizes between different paradigms (i.e., in the same “units”), the methods described in this chapter are extensible to other paradigms; see TBA Chapter 19 for sample size estimation for FROC studies. For this reason it is important to understand the concepts of sample-size estimation in the simpler ROC context. For simplicity and practicality, this chapter, and the next, is restricted to analysis of two-treatment data (\\(I = 2\\)). The purpose of most imaging system assessment studies is to determine, for a given diagnostic task, whether radiologists perform better using a new treatment over the conventional treatment, and whether the difference is statistically significant. Therefore, the two-treatment case is the most common one encountered. While it is possible to extend the methods to more than two treatments, the extensions are not, in my opinion, clinically interesting. Assume the figure of merit (FOM) \\(\\theta\\) is chosen to be the area AUC under the ROC curve (empirical or fitted is immaterial as far as the formulae are concerned; however, the choice will affect statistical power). The statistical analysis determines the significance level of the study, i.e., the probability or p-value for incorrectly rejecting the null hypothesis (NH) that the two \\(\\theta\\)s are equal: \\(NH: \\theta_1 = \\theta_2\\), where the subscripts refer to the two treatments and the bullet represents the average over the reader index. If the p-value is smaller than a pre-specified \\(\\alpha\\), typically set at 5%, one rejects the NH and declares the treatments different at the \\(\\alpha\\) significance level. Statistical power is the probability of correctly rejecting the null hypothesis when the alternative hypothesis \\(AH: \\theta_1 \\neq \\theta_2\\) is true, (TBA Chapter 08). The value of the true difference between the treatments, known as the true effect-size is, of course, unknown. If it were known, there would be no need to conduct the ROC study. One would simply adopt the treatment with the higher \\(\\theta\\). Sample-size estimation involves making an educated guess regarding the true effect-size , called the anticipated effect size, and denoted by \\(d\\). To quote Harold Kundel (ICRU 1996): “any calculation of power amounts to specification of the anticipated effect-size”. Increasing the anticipated effect size will increase statistical power but may represent an unrealistic expectation of the true difference between the treatments, in the sense that it overestimates the ability of technology to achieve this much improvement. Conversely, an unduly small \\(d\\) might be clinically insignificant, besides requiring a very large sample-size to achieve sufficient statistical power. Statistical power depends on the magnitude of \\(d\\) divided by the standard deviation \\(\\sigma(d)\\) of \\(d\\), i.e. \\(D=\\frac{\\left | d \\right |}{\\sigma (d)}\\). The sign is relevant as it determines whether the project is worth pursuing at all (see TBA §11.8.4). The ratio is termed (Cohen 1988) Cohen’s D. When this signal-to-noise-ratio-like quantity is large, statistical power approaches 100%. Reader and case variability and data correlations determine \\(\\sigma(d)\\). No matter how small the anticipated \\(d\\), as long as it is finite, then, using sufficiently large numbers of readers and cases \\(\\sigma(d)\\) can be made sufficiently small to achieve near 100% statistical power. Of course, a very small effect-size may not be clinically significant. There is a key difference between statistical significance and clinical significance. An effect-size in AUC units could be so small, e.g., 0.001, as to be clinically insignificant, but by employing a sufficiently large sample size one could design a study to detect this small - and clinically meaningless - difference with near unit probability, i.e., high statistical power. What determines clinical significance? A small effect-size, e.g., 0.01 AUC units, could be clinically significant if it applies to a large population, where the small benefit in detection rate is amplified by the number of patients benefiting from the new treatment. In contrast, for an “orphan” disease, i.e., one with very low prevalence, an effect-size of 0.05 might not be enough to justify the additional cost of the new treatment. The improvement might have to be 0.1 before it is worth it for a new treatment to be brought to market. One hates to monetize life and death issues, but there is no getting away from it, as cost/benefit issues determine clinical significance. The arbiters of clinical significance are engineers, imaging scientists, clinicians, epidemiologists, insurance companies and those who set government health care policies. The engineers and imaging scientists determine whether the effect-size the clinicians would like is feasible from technical and scientific viewpoints. The clinician determines, based on incidence of disease and other considerations, e.g., altruistic, malpractice, cost of the new device and insurance reimbursement, what effect-size is justifiable. Cohen has suggested that d values of 0.2, 0.5, and 0.8 be considered small, medium, and large, respectively, but he has also argued against their indiscriminate usage. However, after a study is completed, clinicians often find that an effect-size that biostatisticians label as small may, in certain circumstances, be clinically significant and an effect-size that they label as large may in other circumstances be clinically insignificant. Clearly, this is a complex issue. Some suggestions on choosing a clinically significant effect size are made in (TBA §11.12). Having developed a new imaging modality the R&amp;D team wishes to compare it to the existing standard with the short-term goal of making a submission to the FDA to allow them to perform pre-market testing of the device. The long-term goal is to commercialize the device. Assume the R&amp;D team has optimized the device based on physical measurements, (TBA Chapter 01), perhaps supplemented with anecdotal feedback from clinicians based on a few images. Needed at this point is a pilot study. A pilot study, conducted with a relatively small and practical sample size, is intended to provide estimates of different sources of variability and correlations. It also provides an initial estimate of the effect-size, termed the observed effect-size, \\(d\\). Based on results from the pilot the sample-size tools described in this chapter permit estimation of the numbers of readers and cases that will reduce \\(\\sigma(d)\\) sufficiently to achieve the desired power for the larger “pivotal” study. [A distinction could be made in the notation between observed and anticipated effect sizes, but it will be clear from the context. Later, it will be shown how one can make an educated guess about the anticipated effect size from an observed effect size.] This chapter is concerned with multiple-reader MRMC studies that follow the fully crossed factorial design meaning that each reader interprets a common case-set in all treatments. Since the resulting pairings (i.e., correlations) tend to decrease \\(\\sigma(d)\\) (since the variations occur in tandem, they tend to cancel out in the difference, see (TBA Chapter 09, Introduction), for Dr. Robert Wagner’s sailboat analogy) it yields more statistical power compared to an unpaired design, and consequently this design is frequently used. Two sample-size estimation procedures for MRMC are the Hillis-Berbaum method (Hillis and Berbaum 2004) and the Obuchowski-Rockette (Obuchowski 1998) method. With recent work by Hillis, the two methods have been shown to be substantially equivalent. This chapter will focus on the DBM approach. Since it is based on a standard ANOVA model, it is easier to extend the NH testing procedure described in Chapter 09 to the alternative hypothesis, which is relevant for sample size estimation. [TBA Online Appendix 11.A shows how to translate the DBM formulae to the OR method (Hillis, Obuchowski, and Berbaum 2011).] Given an effect-size, and choosing this wisely is the most difficult part of the process, the method described in this chapter uses pseudovalue variance components estimated by the DBM method to predict sample-sizes (i.e., different combinations of numbers of readers and cases) necessary to achieve a desired power. 9.3 Statistical Power The concept of statistical power was introduced in [TBA Chapter 08] but is worth repeating. There are two possible decisions following a test of a null hypothesis (NH): reject or fail to reject the NH. Each decision is associated with a probability on an erroneous conclusion. If the NH is true and one rejects it, the probability of the ensuing Type-I error is denoted \\(\\alpha\\). If the NH is false and one fails to reject it, the probability of the ensuing Type II- error is denoted \\(\\beta\\). Statistical power is the complement of \\(\\beta\\), i.e., \\[\\begin{equation} Power = 1 - \\beta \\tag{9.1} \\end{equation}\\] Typically, one aims for \\(\\beta = 0.2\\) or less, i.e., a statistical power of 80% or more. Like \\(\\alpha\\) = 0.05, this is a convention and more nuanced cost-benefit considerations may cause the researcher to adopt a different value. 9.3.1 Observed vs. anticipated effect-size Assuming no other similar studies have already been conducted with the treatments in question, the observed effect-size, although “merely an estimate”, is the best information available at the end of the pilot study regarding the value of the true effect-size. From the two previous chapters one knows that the significance testing software will report not only the observed effect-size, but also a 95% confidence interval associate with it. It will be shown later how one can use this information to make an educated guess regarding the value of the anticipated effect-size. 9.3.2 Dependence of statistical power on estimates of model parameters Examination of the expression for , Eqn. (11.5), shows that statistical power increases if: The numerator is large. This occurs if: (a) the anticipated effect-size \\(d\\) is large. Since effect-size enters as the square, TBA Eqn. (11.8), it is has a particularly strong effect; (b) If \\(J \\times K\\) is large. Both of these results should be obvious, as a large effect size and a large sample size should result in increased probability of rejecting the NH. The denominator is small. The first term in the denominator is \\(\\left ( \\sigma_{\\epsilon}^2 + \\sigma_{\\tau RC}^2 \\right )\\). These two terms cannot be separated. This is the residual variability of the jackknife pseudovalues. It should make sense that the smaller the variability, the larger is the non-centrality parameter and the statistical power. The next term in the denominator is \\(K\\sigma_{\\tau R}^2\\), the treatment-reader variance component multiplied by the total number of cases. The reader variance \\(\\sigma_{R}^2\\) has no effect on statistical power, because it has an equal effect on both treatments and cancels out in the difference. Instead, it is the treatment-reader variance \\(\\sigma_{R}^2\\) that contributes “noise” tending to confound the estimate of the effect-size. The variance components estimated by the ANOVA procedure are realizations of random variables and as such subject to noise (there actually exists a beast such as variance of a variance). The presence of the \\(K\\) term, usually large, can amplify the effect of noise in the estimate of \\(\\sigma_{R}^2\\), making the sample size estimation procedure less accurate. The final term in the denominator is \\(J\\sigma_{\\tau C}^2\\). The variance \\(\\sigma_{C}^2\\) has no impact on statistical power, as it cancels out in the difference. The treatment-case variance component introduces “noise” into the estimate of the effect size, thereby decreasing power. Since it is multiplied by J, the number of readers, and typically \\(J&lt;&lt;K\\), the error amplification effect on accuracy of the sample size estimate is not as bad as with the treatment-reader variance component. Accuracy of sample size estimation, essentially estimating confidence intervals for statistical power, is addressed in (Chakraborty 2010). 9.3.3 Formulae for random-reader random-case (RRRC) sample size estimation 9.3.4 Significance testing 9.3.5 p-value and confidence interval 9.3.6 Comparing DBM to Obuchowski and Rockette for single-reader multiple-treatments Having performed a pilot study and planning to perform a pivotal study, sample size estimation follows the following procedure, which assumes that both reader and case are treated as random factors. Different formulae, described later, apply when either reader or case is treated as a fixed factor. Perform DBM analysis on the pilot data. This yields the observed effect size as well as estimates of all relevant variance components and mean squares appearing in TBA Eqn. (11.5) and Eqn. (11.7). This is the difficult but critical part: make an educated guess regarding the effect-size, \\(d\\), that one is interested in “detecting” (i.e., hoping to reject the NH with probability \\(1-\\beta\\)). The author prefers the term “anticipated” effect-size to “true” effect-size (the latter implies knowledge of the true difference between the modalities which, as noted earlier, would obviate the need for a pivotal study). Two scenarios are considered below. In the first scenario, the effect-size is assumed equal to that observed in the pilot study, i.e., \\(d = d_{obs}\\). In the second, so-called “best-case” scenario, one assumes that the anticipate value of \\(d\\) is the observed value plus two-sigma of the confidence interval, in the correct direction, of course, i.e., \\(d=\\left | d_{obs} \\right |+2\\sigma\\). Here \\(\\sigma\\) is one-fourth the width of the 95% confidence interval for \\(d_{obs}\\). Anticipating more than \\(2\\sigma\\) greater than the observed effect-size would be overly optimistic. The width of the CI implies that chances are less than 2.5% that the anticipated value is at or beyond the overly optimistic value. These points will become clearer when example datasets are analyzed below. Calculate statistical power using the distribution implied by Eqn. (11.4), to calculate the probability that a random value of the relevant F-statistic will exceed the critical value, as in §11.3.2. If power is below the desired or “target” power, one tries successively larger value of \\(J\\) and / or \\(K\\) until the target power is reached. 9.4 Formulae for fixed-reader random-case (FRRC) sample size estimation It was shown in TBA §9.8.2 that for fixed-reader analysis the non-centrality parameter is defined by: \\[\\begin{equation} \\Delta=\\frac{JK\\sigma_{\\tau}^2}{\\sigma_{\\epsilon}^2+\\sigma_{\\tau RC}^2+J\\sigma_{\\tau C}^2} \\tag{9.2} \\end{equation}\\] The sampling distribution of the F-statistic under the AH is: \\[\\begin{equation} F_{AH|R}\\equiv \\frac{MST}{MSTC}\\sim F_{I-1,(I-1)(K-1),\\Delta} \\tag{9.3} \\end{equation}\\] 9.4.1 Formulae for random-reader fixed-case (RRFC) sample size estimation It is shown in TBA §9.9 that for fixed-case analysis the non-centrality parameter is defined by: \\[\\begin{equation} \\Delta=\\frac{JK\\sigma_{\\tau}^2}{\\sigma_{\\epsilon}^2+\\sigma_{\\tau RC}^2+K\\sigma_{\\tau R}^2} \\tag{9.4} \\end{equation}\\] Under the AH, the test statistic is distributed as a non-central F-distribution as follows: \\[\\begin{equation} F_{AH|C}\\equiv \\frac{MST}{MSTR}\\sim F_{I-1,(I-1)(J-1),\\Delta} \\tag{9.5} \\end{equation}\\] 9.4.2 Fixed-reader random-case (FRRC) analysis TBA It is a realization of a random variable, so one has some leeway in the choice of anticipated effect size - more on this later. Here \\(J^*\\) and \\(K^*\\) refer to the number of readers and cases in the pilot study. 9.4.3 Random-reader fixed-case (RRFC) analysis 9.4.4 Single-treatment multiple-reader analysis 9.5 Discussion/Summary/2 9.6 Chapter References REFERENCES "],["background-f-distribution.html", "Chapter 10 F-distribution 10.1 TBA How much finished 10.2 Introduction 10.3 Effect of ncp for ndf = 2 and ddf = 10 10.4 Comments 10.5 Effect of ncp for ndf = 2 and ddf = 100 10.6 Comments 10.7 Effect of ncp for ndf = 1, ddf = 100 10.8 Comments 10.9 Summary", " Chapter 10 F-distribution 10.1 TBA How much finished 10% 10.2 Introduction Since it plays an important role in sample size estimation, it is helpful to examine the behavior of the F-distribution. In the following ndf = numerator degrees of freedom, ddf = denominator degrees of freedom and ncp = non-centrality parameter (i.e., the \\(\\Delta\\) appearing in Eqn. (11.6) of (Chakraborty 2017)). The use of three R functions is demonstrated. qf(p,ndf,ddf) is the quantile function of the F-distribution for specified values of p, ndf and ddf, i.e., the value x such that fraction p of the area under the F-distribution lies to the right of x. Since ncp is not included as a parameter, the default value, i.e., zero, is used. This is called the central F-distribution. df(x,ndf,ddf,ncp) is the probability density function (pdf) of the F-distribution, as a function of x, for specified values of ndf, ddf and ncp. pf(x,ndf,ddf,ncp) is the probability (or cumulative) distribution function of the F-distribution for specified values of ndf, ddf and ncp. 10.3 Effect of ncp for ndf = 2 and ddf = 10 Four values of ncp are considered (0, 2, 5, 10) for ddf = 10. fCrit is the critical value of the F distribution, i.e., that value such that fraction \\(\\alpha\\) of the area is to the right of the critical value, i.e., fCrit is identical in statistical notation to \\({{F}_{1-\\alpha ,ndf,ddf}}\\). ndf &lt;- 2;ddf &lt;- 10;ncp &lt;- c(0,2,5,10) alpha &lt;- 0.05 fCrit &lt;- qf(1-alpha, ndf,ddf) x &lt;- seq(1, 20, 0.1) myLabel &lt;- c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;) myLabelIndx &lt;- 1 pFgtFCrit &lt;- NULL for (i in 1:length(ncp)) { y &lt;- df(x,ndf,ddf,ncp=ncp[i]) pFgtFCrit &lt;- c(pFgtFCrit, 1-pf(fCrit, ndf, ddf, ncp = ncp[i])) } for (i in 1:length(ncp)) { y &lt;- df(x,ndf,ddf,ncp=ncp[i]) curveData &lt;- data.frame(x = x, pdf = y) curvePlot &lt;- ggplot(data = curveData, mapping = aes(x = x, y = pdf)) + geom_line() + ggtitle(myLabel[myLabelIndx]);myLabelIndx &lt;- myLabelIndx + 1 print(curvePlot) } fCrit_2_10 &lt;- fCrit # convention fCrit_ndf_ddf ndf ddf fCrit ncp pFgtFCrit A 2 10 4.102821 0 0.0500000 B 2 10 4.102821 2 0.1775840 C 2 10 4.102821 5 0.3876841 D 2 10 4.102821 10 0.6769776 10.4 Comments 10.4.1 Fig. A This corresponds to ncp = 0, i.e., the central F-distribution. The integral under this distribution is unity (this is also true for all plots in this vignette). The critical value, fCrit in the above code block, is the value of x such that the probability of exceeding x is \\(\\alpha\\). The corresponding parameter alpha is defined above as 0.05. In the current example fCrit = 4.102821. Notice the use of the quantile function qf() to determine this value, and the default value of ncp, namely zero, is used; specifically, one does not pass a 4th argument to qf(). The decision rule for rejecting the NH uses the NH distribution of the F-statistic, i.e., reject the NH if F &gt;= fCrit. As expected, prob &gt; fCrit = 0.05 because this is how fCrit was defined. 10.4.2 Fig. B This corresponds to ncp = 2, ndf = 2 and ddf = 10. The distribution is slightly shifted to the right as compared to Fig. A, thereby making it more likely that the observed value of the F-statistic will exceed the critical value determined for the NH distribution. In fact, prob &gt; fCrit = 0.177584, i.e., the statistical power (compare this to Fig. A where prob &gt; fCrit was 0.05). 10.4.3 Fig. C This corresponds to ncp = 5, ndf = 2 and ddf = 10. Now prob &gt; fCrit = 0.3876841. Power has increased compared to Fig. B. 10.4.4 Fig. D This corresponds to ncp = 10, ndf = 2 and ddf = 10. Now prob &gt; fCrit is 0.6769776. Power has increased compared to Fig. C. The effect of the shift is most obvious in Fig. C and Fig. D. Considering a vertical line at x = 4.102821, fraction 0.6769776 of the probability distribution in Fig. D lies to the right of this line Therefore the NH is likely to be rejected with probability 0.6769776. 10.4.5 Summary The larger that non-centrality parameter, the greater the shift to the right of the F-distribution, and the greater the statistical power. 10.5 Effect of ncp for ndf = 2 and ddf = 100 ndf ddf fCrit ncp pFgtFCrit A 2 10 4.102821 0 0.0500000 B 2 10 4.102821 2 0.1775840 C 2 10 4.102821 5 0.3876841 D 2 10 4.102821 10 0.6769776 E 2 100 3.087296 0 0.0500000 F 2 100 3.087296 2 0.2199264 G 2 100 3.087296 5 0.4910802 H 2 100 3.087296 10 0.8029764 10.6 Comments All comparisons in this sections are at the same values of ncp defined above. And between ddf = 100 and ddf = 10. 10.6.1 Fig. E This corresponds to ncp = 0, ndf = 2 and ddf = 100. The critical value is fCrit_2_100 = 3.0872959. Notice the decrease compared to the previous value for ncp = 0, i.e., 4.102821, for ddf = 10. One expects that increasing ddf will make it more likely that the NH will be rejected, and this is confirmed below. All else equal, statistical power increases with increasing ddf. 10.6.2 Fig. F This corresponds to ncp = 2, ndf = 2 and ddf = 100. The probability of exceeding the critical value is prob &gt; fCrit_2_100 = 0.2199264, greater than the previous value, i.e., 0.177584 for ddf = 10. 10.6.3 Fig. G This corresponds to ncp = 5, ndf = 2 and ddf = 100. The probability of exceeding the critical value is prob &gt; fCrit_2_100 = 0.4910802. This is greater than the previous value, i.e., 0.3876841 for ddf = 10. 10.6.4 Fig. H This corresponds to ncp = 10, ndf = 2 and ddf = 100. The probability of exceeding the critical value is prob &gt; fCrit_2_100 is 0.8029764. This is greater than the previous value, i.e., 0.6769776 for ddf = 10. 10.7 Effect of ncp for ndf = 1, ddf = 100 ndf ddf fCrit ncp pFgtFCrit A 2 10 4.102821 0 0.0500000 B 2 10 4.102821 2 0.1775840 C 2 10 4.102821 5 0.3876841 D 2 10 4.102821 10 0.6769776 E 2 100 3.087296 0 0.0500000 F 2 100 3.087296 2 0.2199264 G 2 100 3.087296 5 0.4910802 H 2 100 3.087296 10 0.8029764 I 1 100 3.936143 0 0.0500000 J 1 100 3.936143 2 0.2883607 K 1 100 3.936143 5 0.6004962 L 1 100 3.936143 10 0.8793619 10.8 Comments All comparisons in this sections are at the same values of ncp defined above and at ddf = 100. And between ndf = 1 and ndf = 2. 10.8.1 Fig. I This corresponds to ncp = 0, ndf = 1 and ddf = 100. The critical value is fCrit_1_100 = 3.936143. Notice the increase in the critical value as compared to the corresponding value for ndf = 2, i.e., 3.0872959. One expects power to decrease: the following code demonstrates that as ndf increases, the critical value fCrit decreases. In significance testing generally ndf = I -1. It more likely that the NH will be rejected with increasing numbers of treatments. ndf ddf fCrit 1 100 3.936143 2 100 3.087296 5 100 2.305318 10 100 1.926692 12 100 1.850255 15 100 1.767530 20 100 1.676434 10.8.2 Fig. J This corresponds to ncp = 2, ndf = 1 and ddf = 100. Now prob &gt; fCrit_1_100 = 0.2883607, 0.1351602, 0.0168844, 8.999211410^{-4}, 3.258475710^{-4}, 8.161980710^{-5}, 1.108413210^{-5}, larger than the previous value 0.2199264. The power has actually increased. 10.8.3 Fig. K This corresponds to ncp = 5, ndf = 1 and ddf = 100`’, Now prob &gt; fCrit_1_100 = 0.6004962, 0.3632847, 0.0699798, 0.0048836, 0.0018367, 4.688953310^{-4}, 6.205869210^{-5}, larger than the previous value 0.4910802. Again, the power has actually increased. 10.8.4 Fig. L This corresponds to ncp = 10, ndf = 1 and ddf = 100 Now prob &gt; fCrit_1_100 is 0.8793619, 0.7000168, 0.2459501, 0.0290856, 0.0123033, 0.0035298, 5.121339810^{-4}, larger than the previous value 0.8029764. The power has actually increased. 10.9 Summary Power increases with increasing ddf and ncp. The effect of increasing ncp is quite dramatic. This is because power depends on the square of ncp. As ndf increases, fCrit decreases, which makes it more likely that the NH will be rejected. With increasing numbers of treatments the probability is greater that the F-statistic will be large enough to exceed the critical value. REFERENCES "],["roc-sample-size-or.html", "Chapter 11 Sample size estimation: OR method 11.1 TBA How much finished 11.2 Introduction 11.3 Statistical Power 11.4 Formulae for fixed-reader random-case (FRRC) sample size estimation 11.5 Discussion/Summary/3 11.6 Chapter References", " Chapter 11 Sample size estimation: OR method 11.1 TBA How much finished 30% 11.2 Introduction 11.3 Statistical Power \\[\\begin{equation} Power = 1 - \\beta \\tag{11.1} \\end{equation}\\] 11.3.1 Sample size estimation for random-reader random-cases For convenience the OR model is repeated below with the case-set index suppressed: \\[\\begin{equation} Y_{n(ijk)}=\\mu+\\tau_i+R_j+C_k+(\\tau R)_{ij}+(\\tau C)_{ik}+(RC)_{jk}+(\\tau RC)_{ijk}+\\epsilon_ {n(ijk)} \\tag{11.2} \\end{equation}\\] As usual, the treatment effects \\(\\tau_i\\) are subject to the constraint that they sum to zero. The observed effect size (a random variable) is defined by: \\[\\begin{equation} d=\\theta_{1\\bullet}-\\theta_{2\\bullet} \\tag{11.3} \\end{equation}\\] It is a realization of a random variable, so one has some leeway in the choice of anticipated effect size. In the significance-testing procedure described in TBA Chapter 09 interest was in the distribution of the F-statistic when the NH is true. For sample size estimation, one needs to know the distribution of the statistic when the NH is false. It was shown that then the observed F-statistic TBA Eqn. (9.35) is distributed as a non-central F-distribution \\(F_{ndf,ddf,\\Delta}\\) with non-centrality parameter \\(\\Delta\\): \\[\\begin{equation} F_{DBM|AH} \\sim F_{ndf,ddf,\\Delta} \\tag{11.4} \\end{equation}\\] The non-centrality parameter was defined, Eqn. TBA (9.34), by: \\[\\begin{equation} \\Delta=\\frac{JK\\sigma_{Y;\\tau}^2}{\\left ( \\sigma_{Y;\\epsilon}^2 + \\sigma_{Y;\\tau RC}^2 \\right )+K\\sigma_{Y;\\tau R}^2+J\\sigma_{Y;\\tau C}^2} \\tag{11.5} \\end{equation}\\] To minimize confusion, this equation has been rewritten here using the subscript \\(Y\\) to explicitly denote pseudo-value derived quantities (in TBA Chapter 09 this subscript was suppressed. The estimate of \\(\\sigma_{Y;\\tau C}^2\\) can turn out to bee negative. To avoid a negative denominator, Hillis suggests the following modification: \\[\\begin{equation} \\Delta=\\frac{JK\\sigma_{Y;\\tau}^2}{\\left ( \\sigma_{Y;\\epsilon}^2 + \\sigma_{Y;\\tau RC}^2 \\right )+K\\sigma_{Y;\\tau R}^2+\\max \\left (J\\sigma_{Y;\\tau C}^2 ,0 \\right )} \\tag{11.6} \\end{equation}\\] This expression depends on three variance components, \\((\\sigma_{Y;\\epsilon}^2 + \\sigma_{Y;\\tau RC}^2)\\) - the two terms are inseparable - \\(\\sigma_{Y;\\tau R}^2\\) and \\(\\sigma_{Y;\\tau C}^2\\). The \\(ddf\\) term appearing in TBA Eqn. (11.4) was defined by TBA Eqn. (9.24) - this quantity does not change between NH and AH: \\[\\begin{equation} ddf_H=\\frac{\\left [MSTR+\\max(MSTR-MSTRC,0) \\right ]^2}{\\frac{[MSTR]^2}{(I-1)(J-1)}} \\tag{11.7} \\end{equation}\\] The mean squares in this expression can be expressed in terms of the three variance-components appearing in TBA Eqn. (11.6). Hillis and Berbaum (Hillis and Berbaum 2004) have derived these expression and they will not be repeated here (Eqn. 4 in the cited reference). RJafroc implements a function to calculate the mean squares, UtilMeanSquares(), which allows ddf to be calculated using Eqn. TBA (11.7). The sample size functions in this package need only the three variance-components (the formula for \\(ddf_H\\) is implemented internally). For two treatments, since the individual treatment effects must be the negatives of each other (because they sum to zero), it is easily shown that: \\[\\begin{equation} \\sigma_{Y;\\tau}^2=\\frac{d^2}{2} \\tag{11.8} \\end{equation}\\] 11.3.2 Dependence of statistical power on estimates of model parameters Examination of the expression for , Eqn. (11.5), shows that statistical power increases if: The numerator is large. This occurs if: (a) the anticipated effect-size \\(d\\) is large. Since effect-size enters as the square, TBA Eqn. (11.8), it is has a particularly strong effect; (b) If \\(J \\times K\\) is large. Both of these results should be obvious, as a large effect size and a large sample size should result in increased probability of rejecting the NH. The denominator is small. The first term in the denominator is \\(\\left ( \\sigma_{Y;\\epsilon}^2 + \\sigma_{Y;\\tau RC}^2 \\right )\\). These two terms cannot be separated. This is the residual variability of the jackknife pseudovalues. It should make sense that the smaller the variability, the larger is the non-centrality parameter and the statistical power. The next term in the denominator is \\(K\\sigma_{Y;\\tau R}^2\\), the treatment-reader variance component multiplied by the total number of cases. The reader variance \\(\\sigma_{Y;R}^2\\) has no effect on statistical power, because it has an equal effect on both treatments and cancels out in the difference. Instead, it is the treatment-reader variance \\(\\sigma_{Y;R}^2\\) that contributes “noise” tending to confound the estimate of the effect-size. The variance components estimated by the ANOVA procedure are realizations of random variables and as such subject to noise (there actually exists a beast such as variance of a variance). The presence of the \\(K\\) term, usually large, can amplify the effect of noise in the estimate of \\(\\sigma_{Y;R}^2\\), making the sample size estimation procedure less accurate. The final term in the denominator is \\(J\\sigma_{Y;\\tau C}^2\\). The variance \\(\\sigma_{Y;C}^2\\) has no impact on statistical power, as it cancels out in the difference. The treatment-case variance component introduces “noise” into the estimate of the effect size, thereby decreasing power. Since it is multiplied by J, the number of readers, and typically \\(J&lt;&lt;K\\), the error amplification effect on accuracy of the sample size estimate is not as bad as with the treatment-reader variance component. Accuracy of sample size estimation, essentially estimating confidence intervals for statistical power, is addressed in (Chakraborty 2010). 11.3.3 Formulae for random-reader random-case (RRRC) sample size estimation 11.3.4 Significance testing 11.3.5 p-value and confidence interval 11.3.6 Comparing DBM to Obuchowski and Rockette for single-reader multiple-treatments Having performed a pilot study and planning to perform a pivotal study, sample size estimation follows the following procedure, which assumes that both reader and case are treated as random factors. Different formulae, described later, apply when either reader or case is treated as a fixed factor. Perform OR analysis on the pilot data. This yields the observed effect size as well as estimates of all relevant variance components and mean squares appearing in TBA Eqn. (11.5) and Eqn. (11.7). This is the difficult but critical part: make an educated guess regarding the effect-size, \\(d\\), that one is interested in “detecting” (i.e., hoping to reject the NH with probability \\(1-\\beta\\)). The author prefers the term “anticipated” effect-size to “true” effect-size (the latter implies knowledge of the true difference between the modalities which, as noted earlier, would obviate the need for a pivotal study). Two scenarios are considered below. In the first scenario, the effect-size is assumed equal to that observed in the pilot study, i.e., \\(d = d_{obs}\\). In the second, so-called “best-case” scenario, one assumes that the anticipate value of \\(d\\) is the observed value plus two-sigma of the confidence interval, in the correct direction, of course, i.e., \\(d=\\left | d_{obs} \\right |+2\\sigma\\). Here \\(\\sigma\\) is one-fourth the width of the 95% confidence interval for \\(d_{obs}\\). Anticipating more than \\(2\\sigma\\) greater than the observed effect-size would be overly optimistic. The width of the CI implies that chances are less than 2.5% that the anticipated value is at or beyond the overly optimistic value. These points will become clearer when example datasets are analyzed below. Calculate statistical power using the distribution implied by Eqn. (11.4), to calculate the probability that a random value of the relevant F-statistic will exceed the critical value, as in §11.3.2. If power is below the desired or “target” power, one tries successively larger value of \\(J\\) and / or \\(K\\) until the target power is reached. 11.4 Formulae for fixed-reader random-case (FRRC) sample size estimation It was shown in TBA §9.8.2 that for fixed-reader analysis the non-centrality parameter is defined by: \\[\\begin{equation} \\Delta=\\frac{JK\\sigma_{Y;\\tau}^2}{\\sigma_{Y;\\epsilon}^2+\\sigma_{Y;\\tau RC}^2+J\\sigma_{Y;\\tau C}^2} \\tag{11.9} \\end{equation}\\] The sampling distribution of the F-statistic under the AH is: \\[\\begin{equation} F_{AH|R}\\equiv \\frac{MST}{MSTC}\\sim F_{I-1,(I-1)(K-1),\\Delta} \\tag{11.10} \\end{equation}\\] 11.4.1 Formulae for random-reader fixed-case (RRFC) sample size estimation It is shown in TBA §9.9 that for fixed-case analysis the non-centrality parameter is defined by: \\[\\begin{equation} \\Delta=\\frac{JK\\sigma_{Y;\\tau}^2}{\\sigma_{Y;\\epsilon}^2+\\sigma_{Y;\\tau RC}^2+K\\sigma_{Y;\\tau R}^2} \\tag{11.11} \\end{equation}\\] Under the AH, the test statistic is distributed as a non-central F-distribution as follows: \\[\\begin{equation} F_{AH|C}\\equiv \\frac{MST}{MSTR}\\sim F_{I-1,(I-1)(J-1),\\Delta} \\tag{11.12} \\end{equation}\\] 11.4.2 Example 1 In the first example the Van Dyke dataset is regarded as a pilot study. Two implementations are shown, a direct application of the relevant formulae, including usage of the mean squares, which in principle can be calculated from the three variance-components. This is then compared to the RJafroc implementation. Shown first is the “open” implementation. alpha &lt;- 0.05;cat(&quot;alpha = &quot;, alpha, &quot;\\n&quot;) #&gt; alpha = 0.05 rocData &lt;- dataset02 # select Van Dyke dataset retDbm &lt;- StSignificanceTesting(dataset = rocData, FOM = &quot;Wilcoxon&quot;, method = &quot;DBM&quot;) varYTR &lt;- retDbm$ANOVA$VarCom[&quot;VarTR&quot;,&quot;Estimates&quot;] varYTC &lt;- retDbm$ANOVA$VarCom[&quot;VarTC&quot;,&quot;Estimates&quot;] varYEps &lt;- retDbm$ANOVA$VarCom[&quot;VarErr&quot;,&quot;Estimates&quot;] effectSize &lt;- retDbm$FOMs$trtMeanDiffs[&quot;trt0-trt1&quot;,&quot;Estimate&quot;] cat(&quot;effect size = &quot;, effectSize, &quot;\\n&quot;) #&gt; effect size = -0.043800322 #RRRC J &lt;- 10; K &lt;- 163 ncp &lt;- (0.5*J*K*(effectSize)^2)/(K*varYTR+max(J*varYTC,0)+varYEps) MS &lt;- UtilMeanSquares(rocData, FOM = &quot;Wilcoxon&quot;, method = &quot;DBM&quot;) ddf &lt;- (MS$msTR+max(MS$msTC-MS$msTRC,0))^2/(MS$msTR^2)*(J-1) FCrit &lt;- qf(1 - alpha, 1, ddf) Power &lt;- 1-pf(FCrit, 1, ddf, ncp = ncp) data.frame(&quot;J&quot;= J, &quot;K&quot; = K, &quot;FCrit&quot; = FCrit, &quot;ddf&quot; = ddf, &quot;ncp&quot; = ncp, &quot;RRRCPower&quot; = Power) #&gt; J K FCrit ddf ncp RRRCPower #&gt; 1 10 163 4.1270572 34.334268 8.1269825 0.79111255 #FRRC J &lt;- 10; K &lt;- 133 ncp &lt;- (0.5*J*K*(effectSize)^2)/(max(J*varYTC,0)+varYEps) ddf &lt;- (K-1) FCrit &lt;- qf(1 - alpha, 1, ddf) Power &lt;- 1-pf(FCrit, 1, ddf, ncp = ncp) data.frame(&quot;J&quot;= J, &quot;K&quot; = K, &quot;FCrit&quot; = FCrit, &quot;ddf&quot; = ddf, &quot;ncp&quot; = ncp, &quot;RRRCPower&quot; = Power) #&gt; J K FCrit ddf ncp RRRCPower #&gt; 1 10 133 3.912875 132 7.9873835 0.80111671 #RRFC J &lt;- 10; K &lt;- 53 ncp &lt;- (0.5*J*K*(effectSize)^2)/(K*varYTR+varYEps) ddf &lt;- (J-1) FCrit &lt;- qf(1 - alpha, 1, ddf) Power &lt;- 1-pf(FCrit, 1, ddf, ncp = ncp) data.frame(&quot;J&quot;= J, &quot;K&quot; = K, &quot;FCrit&quot; = FCrit, &quot;ddf&quot; = ddf, &quot;ncp&quot; = ncp, &quot;RRRCPower&quot; = Power) #&gt; J K FCrit ddf ncp RRRCPower #&gt; 1 10 53 5.117355 9 10.048716 0.80496663 For 10 readers, the numbers of cases needed for 80% power is largest (163) for RRRC and least for RRFC (53). For all three analyses, the expectation of 80% power is met - the numbers of cases and readers were chosen to achieve close to 80% statistical power. Intermediate quantities such as the critical value of the F-statistic, ddf and ncp are shown. The reader should confirm that the code does in fact implement the relevant formulae. Shown next is the RJafroc implementation. The relevant file is mainSsDbm.R, a listing of which follows: 11.4.3 Fixed-reader random-case (FRRC) analysis 11.4.4 Random-reader fixed-case (RRFC) analysis 11.4.5 Single-treatment multiple-reader analysis 11.5 Discussion/Summary/3 11.6 Chapter References REFERENCES "],["references.html", "REFERENCES", " REFERENCES "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
